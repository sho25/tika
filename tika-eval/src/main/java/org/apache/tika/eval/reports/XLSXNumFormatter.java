begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|reports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|ss
operator|.
name|usermodel
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|ss
operator|.
name|usermodel
operator|.
name|CellStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|xssf
operator|.
name|usermodel
operator|.
name|XSSFWorkbook
import|;
end_import

begin_class
class|class
name|XLSXNumFormatter
implements|implements
name|XSLXCellFormatter
block|{
specifier|private
specifier|final
name|String
name|formatString
decl_stmt|;
specifier|private
name|CellStyle
name|style
decl_stmt|;
name|XLSXNumFormatter
parameter_list|(
name|String
name|formatString
parameter_list|)
block|{
name|this
operator|.
name|formatString
operator|=
name|formatString
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|reset
parameter_list|(
name|XSSFWorkbook
name|workbook
parameter_list|)
block|{
name|style
operator|=
name|workbook
operator|.
name|createCellStyle
argument_list|()
expr_stmt|;
name|style
operator|.
name|setDataFormat
argument_list|(
name|workbook
operator|.
name|getCreationHelper
argument_list|()
operator|.
name|createDataFormat
argument_list|()
operator|.
name|getFormat
argument_list|(
name|formatString
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|applyStyleAndValue
parameter_list|(
name|int
name|dbColNum
parameter_list|,
name|ResultSet
name|resultSet
parameter_list|,
name|Cell
name|cell
parameter_list|)
throws|throws
name|SQLException
block|{
name|double
name|d
init|=
name|resultSet
operator|.
name|getDouble
argument_list|(
name|dbColNum
argument_list|)
decl_stmt|;
if|if
condition|(
name|resultSet
operator|.
name|wasNull
argument_list|()
condition|)
block|{          }
else|else
block|{
name|cell
operator|.
name|setCellStyle
argument_list|(
name|style
argument_list|)
expr_stmt|;
block|}
name|cell
operator|.
name|setCellValue
argument_list|(
name|resultSet
operator|.
name|getDouble
argument_list|(
name|dbColNum
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

