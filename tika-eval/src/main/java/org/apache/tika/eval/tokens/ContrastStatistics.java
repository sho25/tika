begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|tokens
package|;
end_package

begin_class
specifier|public
class|class
name|ContrastStatistics
block|{
name|double
name|diceCoefficient
decl_stmt|;
name|double
name|overlap
decl_stmt|;
name|TokenIntPair
index|[]
name|topNUniqueA
decl_stmt|;
name|TokenIntPair
index|[]
name|topNUniqueB
decl_stmt|;
name|TokenIntPair
index|[]
name|topNMoreA
decl_stmt|;
name|TokenIntPair
index|[]
name|topNMoreB
decl_stmt|;
name|void
name|setDiceCoefficient
parameter_list|(
name|double
name|diceCoefficient
parameter_list|)
block|{
name|this
operator|.
name|diceCoefficient
operator|=
name|diceCoefficient
expr_stmt|;
block|}
name|void
name|setOverlap
parameter_list|(
name|double
name|overlap
parameter_list|)
block|{
name|this
operator|.
name|overlap
operator|=
name|overlap
expr_stmt|;
block|}
name|void
name|setTopNUniqueA
parameter_list|(
name|TokenIntPair
index|[]
name|topNUniqueA
parameter_list|)
block|{
name|this
operator|.
name|topNUniqueA
operator|=
name|topNUniqueA
expr_stmt|;
block|}
name|void
name|setTopNUniqueB
parameter_list|(
name|TokenIntPair
index|[]
name|topNUniqueB
parameter_list|)
block|{
name|this
operator|.
name|topNUniqueB
operator|=
name|topNUniqueB
expr_stmt|;
block|}
name|void
name|setTopNMoreA
parameter_list|(
name|TokenIntPair
index|[]
name|topNMoreA
parameter_list|)
block|{
name|this
operator|.
name|topNMoreA
operator|=
name|topNMoreA
expr_stmt|;
block|}
name|void
name|setTopNMoreB
parameter_list|(
name|TokenIntPair
index|[]
name|topNMoreB
parameter_list|)
block|{
name|this
operator|.
name|topNMoreB
operator|=
name|topNMoreB
expr_stmt|;
block|}
specifier|public
name|double
name|getDiceCoefficient
parameter_list|()
block|{
return|return
name|diceCoefficient
return|;
block|}
specifier|public
name|double
name|getOverlap
parameter_list|()
block|{
return|return
name|overlap
return|;
block|}
specifier|public
name|TokenIntPair
index|[]
name|getTopNUniqueA
parameter_list|()
block|{
return|return
name|topNUniqueA
return|;
block|}
specifier|public
name|TokenIntPair
index|[]
name|getTopNUniqueB
parameter_list|()
block|{
return|return
name|topNUniqueB
return|;
block|}
specifier|public
name|TokenIntPair
index|[]
name|getTopNMoreA
parameter_list|()
block|{
return|return
name|topNMoreA
return|;
block|}
specifier|public
name|TokenIntPair
index|[]
name|getTopNMoreB
parameter_list|()
block|{
return|return
name|topNMoreB
return|;
block|}
block|}
end_class

end_unit

