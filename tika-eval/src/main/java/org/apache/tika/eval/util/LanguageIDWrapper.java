begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|DetectedLanguage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|LanguageDetector
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|LanguageDetectorBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|i18n
operator|.
name|LdLocale
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|ngram
operator|.
name|NgramExtractors
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|profiles
operator|.
name|LanguageProfile
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|profiles
operator|.
name|LanguageProfileReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|MultiTextFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|RemoveMinorityScriptsTextFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|TextFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|TextObject
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|TextObjectFactory
import|;
end_import

begin_class
specifier|public
class|class
name|LanguageIDWrapper
block|{
specifier|static
name|List
argument_list|<
name|LanguageProfile
argument_list|>
name|languageProfiles
decl_stmt|;
specifier|static
name|LanguageDetector
name|detector
decl_stmt|;
specifier|static
name|TextObjectFactory
name|textObjectFactory
decl_stmt|;
specifier|static
name|int
name|MAX_TEXT_LENGTH
init|=
literal|50000
decl_stmt|;
specifier|public
specifier|static
name|void
name|loadBuiltInModels
parameter_list|()
throws|throws
name|IOException
block|{
name|languageProfiles
operator|=
operator|new
name|LanguageProfileReader
argument_list|()
operator|.
name|readAllBuiltIn
argument_list|()
expr_stmt|;
name|detector
operator|=
name|LanguageDetectorBuilder
operator|.
name|create
argument_list|(
name|NgramExtractors
operator|.
name|standard
argument_list|()
argument_list|)
operator|.
name|withProfiles
argument_list|(
name|languageProfiles
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|textObjectFactory
operator|=
name|buildTextObjectFactory
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|loadModels
parameter_list|(
name|Path
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|languageProfiles
operator|=
operator|new
name|LanguageProfileReader
argument_list|()
operator|.
name|readAll
argument_list|(
name|path
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|detector
operator|=
name|LanguageDetectorBuilder
operator|.
name|create
argument_list|(
name|NgramExtractors
operator|.
name|standard
argument_list|()
argument_list|)
operator|.
name|withProfiles
argument_list|(
name|languageProfiles
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|textObjectFactory
operator|=
name|buildTextObjectFactory
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|TextObjectFactory
name|buildTextObjectFactory
parameter_list|()
block|{
name|List
argument_list|<
name|TextFilter
argument_list|>
name|textFilters
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|textFilters
operator|.
name|add
argument_list|(
name|TikasUrlTextFilter
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
name|textFilters
operator|.
name|add
argument_list|(
name|RemoveMinorityScriptsTextFilter
operator|.
name|forThreshold
argument_list|(
literal|0.3
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|TextObjectFactory
argument_list|(
operator|new
name|MultiTextFilter
argument_list|(
name|textFilters
argument_list|)
argument_list|,
name|MAX_TEXT_LENGTH
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Optional
argument_list|<
name|LdLocale
argument_list|>
name|detect
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|detector
operator|.
name|detect
argument_list|(
name|textObjectFactory
operator|.
name|forText
argument_list|(
name|s
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|DetectedLanguage
argument_list|>
name|getProbabilities
parameter_list|(
name|String
name|s
parameter_list|)
block|{
name|TextObject
name|textObject
init|=
name|textObjectFactory
operator|.
name|forText
argument_list|(
name|s
argument_list|)
decl_stmt|;
return|return
name|detector
operator|.
name|getProbabilities
argument_list|(
name|textObject
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|void
name|setMaxTextLength
parameter_list|(
name|int
name|maxTextLength
parameter_list|)
block|{
name|MAX_TEXT_LENGTH
operator|=
name|maxTextLength
expr_stmt|;
block|}
specifier|private
specifier|static
class|class
name|TikasUrlTextFilter
implements|implements
name|TextFilter
block|{
comment|//use this custom copy/paste of optimaize to avoid long, long hang with mail_regex
comment|//TIKA-2777
specifier|private
specifier|static
specifier|final
name|Pattern
name|URL_REGEX
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"https?://[-_.?&~;+=/#0-9A-Za-z]{10,10000}"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Pattern
name|MAIL_REGEX
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"[-_.0-9A-Za-z]{1,100}@[-_0-9A-Za-z]{1,100}[-_.0-9A-Za-z]{1,100}"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|TikasUrlTextFilter
name|INSTANCE
init|=
operator|new
name|TikasUrlTextFilter
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|TikasUrlTextFilter
name|getInstance
parameter_list|()
block|{
return|return
name|INSTANCE
return|;
block|}
specifier|private
name|TikasUrlTextFilter
parameter_list|()
block|{         }
specifier|public
name|String
name|filter
parameter_list|(
name|CharSequence
name|text
parameter_list|)
block|{
name|String
name|modified
init|=
name|URL_REGEX
operator|.
name|matcher
argument_list|(
name|text
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
return|return
name|MAIL_REGEX
operator|.
name|matcher
argument_list|(
name|modified
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|" "
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

