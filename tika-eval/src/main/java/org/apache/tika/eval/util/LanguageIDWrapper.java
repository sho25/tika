begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|DetectedLanguage
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|LanguageDetector
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|LanguageDetectorBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|i18n
operator|.
name|LdLocale
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|ngram
operator|.
name|NgramExtractors
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|profiles
operator|.
name|LanguageProfile
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|profiles
operator|.
name|LanguageProfileReader
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|CommonTextObjectFactories
import|;
end_import

begin_import
import|import
name|com
operator|.
name|optimaize
operator|.
name|langdetect
operator|.
name|text
operator|.
name|TextObjectFactory
import|;
end_import

begin_class
specifier|public
class|class
name|LanguageIDWrapper
block|{
specifier|static
name|List
argument_list|<
name|LanguageProfile
argument_list|>
name|languageProfiles
decl_stmt|;
specifier|static
name|LanguageDetector
name|detector
decl_stmt|;
specifier|static
name|TextObjectFactory
name|textObjectFactory
decl_stmt|;
specifier|public
specifier|static
name|void
name|loadBuiltInModels
parameter_list|()
throws|throws
name|IOException
block|{
name|languageProfiles
operator|=
operator|new
name|LanguageProfileReader
argument_list|()
operator|.
name|readAllBuiltIn
argument_list|()
expr_stmt|;
name|detector
operator|=
name|LanguageDetectorBuilder
operator|.
name|create
argument_list|(
name|NgramExtractors
operator|.
name|standard
argument_list|()
argument_list|)
operator|.
name|withProfiles
argument_list|(
name|languageProfiles
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|textObjectFactory
operator|=
name|CommonTextObjectFactories
operator|.
name|forDetectingOnLargeText
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|loadModels
parameter_list|(
name|Path
name|path
parameter_list|)
throws|throws
name|IOException
block|{
name|languageProfiles
operator|=
operator|new
name|LanguageProfileReader
argument_list|()
operator|.
name|readAll
argument_list|(
name|path
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|detector
operator|=
name|LanguageDetectorBuilder
operator|.
name|create
argument_list|(
name|NgramExtractors
operator|.
name|standard
argument_list|()
argument_list|)
operator|.
name|withProfiles
argument_list|(
name|languageProfiles
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|textObjectFactory
operator|=
name|CommonTextObjectFactories
operator|.
name|forDetectingOnLargeText
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|static
name|Optional
argument_list|<
name|LdLocale
argument_list|>
name|detect
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|detector
operator|.
name|detect
argument_list|(
name|textObjectFactory
operator|.
name|forText
argument_list|(
name|s
argument_list|)
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|List
argument_list|<
name|DetectedLanguage
argument_list|>
name|getProbabilities
parameter_list|(
name|String
name|s
parameter_list|)
block|{
return|return
name|detector
operator|.
name|getProbabilities
argument_list|(
name|textObjectFactory
operator|.
name|forText
argument_list|(
name|s
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

