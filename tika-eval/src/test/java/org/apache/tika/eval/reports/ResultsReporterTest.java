begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|reports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
operator|.
name|db
operator|.
name|H2Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ResultsReporterTest
block|{
specifier|private
name|Path
name|configFile
decl_stmt|;
specifier|private
name|Path
name|tmpDir
decl_stmt|;
specifier|private
name|String
name|dbName
init|=
literal|"test-db"
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|configFile
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"/reports.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
name|tmpDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-eval-report-test-"
argument_list|)
expr_stmt|;
name|connection
operator|=
operator|new
name|H2Util
argument_list|(
name|tmpDir
operator|.
name|resolve
argument_list|(
name|dbName
argument_list|)
argument_list|)
operator|.
name|getConnection
argument_list|()
expr_stmt|;
name|String
name|sql
init|=
literal|"CREATE TABLE test_table (ID LONG PRIMARY KEY, STRING VARCHAR(32))"
decl_stmt|;
name|Statement
name|st
init|=
name|connection
operator|.
name|createStatement
argument_list|()
decl_stmt|;
name|st
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
expr_stmt|;
name|sql
operator|=
literal|"INSERT into test_table values ( 100000, 'the quick brown')"
expr_stmt|;
name|st
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
expr_stmt|;
name|sql
operator|=
literal|"INSERT into test_table values (123456789, 'fox jumped over')"
expr_stmt|;
name|st
operator|.
name|execute
argument_list|(
name|sql
argument_list|)
expr_stmt|;
name|connection
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"add a real test here"
argument_list|)
specifier|public
name|void
name|testBuilder
parameter_list|()
throws|throws
name|Exception
block|{
name|ResultsReporter
name|r
init|=
name|ResultsReporter
operator|.
name|build
argument_list|(
name|configFile
argument_list|)
decl_stmt|;
name|r
operator|.
name|execute
argument_list|(
name|connection
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
literal|"reports"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"finished: "
operator|+
name|tmpDir
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

