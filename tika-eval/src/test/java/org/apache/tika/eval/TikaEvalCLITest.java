begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|eval
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileVisitResult
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileVisitor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|attribute
operator|.
name|BasicFileAttributes
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|utils
operator|.
name|ProcessUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TikaEvalCLITest
extends|extends
name|TikaTest
block|{
comment|//TODO: these barely reach the minimal acceptable stage for unit tests
specifier|private
specifier|static
name|Path
name|extractsDir
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/test-dirs"
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|Path
name|compareDBDir
decl_stmt|;
specifier|private
specifier|static
name|Path
name|profileDBDir
decl_stmt|;
specifier|private
specifier|static
name|Path
name|compareReportsDir
decl_stmt|;
specifier|private
specifier|static
name|Path
name|profileReportsDir
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|dbName
init|=
literal|"testdb"
decl_stmt|;
annotation|@
name|BeforeClass
specifier|public
specifier|static
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|compareDBDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-eval-cli-compare-db-"
argument_list|)
expr_stmt|;
name|profileDBDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-eval-cli-profile-db-"
argument_list|)
expr_stmt|;
name|compareReportsDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-eval-cli-compare-reports-"
argument_list|)
expr_stmt|;
name|profileReportsDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-eval-cli-profile-reports-"
argument_list|)
expr_stmt|;
name|compare
argument_list|()
expr_stmt|;
name|profile
argument_list|()
expr_stmt|;
name|reportCompare
argument_list|()
expr_stmt|;
name|reportProfile
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterClass
specifier|public
specifier|static
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|compareDBDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|profileDBDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|compareReportsDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|profileReportsDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicCompare
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|fNames
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|File
name|f
range|:
name|compareDBDir
operator|.
name|toFile
argument_list|()
operator|.
name|listFiles
argument_list|()
control|)
block|{
name|fNames
operator|.
name|add
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertContains
argument_list|(
name|dbName
operator|+
literal|".mv.db"
argument_list|,
name|fNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicProfile
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|fNames
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|File
name|f
range|:
name|profileDBDir
operator|.
name|toFile
argument_list|()
operator|.
name|listFiles
argument_list|()
control|)
block|{
name|fNames
operator|.
name|add
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertContains
argument_list|(
name|dbName
operator|+
literal|".mv.db"
argument_list|,
name|fNames
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testProfileReports
parameter_list|()
throws|throws
name|Exception
block|{
name|CachingFileVisitor
name|v
init|=
operator|new
name|CachingFileVisitor
argument_list|()
decl_stmt|;
name|Files
operator|.
name|walkFileTree
argument_list|(
name|profileReportsDir
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Path
name|report
range|:
name|v
operator|.
name|getPaths
argument_list|()
control|)
block|{
if|if
condition|(
name|report
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".xlsx"
argument_list|)
condition|)
block|{
name|cnt
operator|++
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|cnt
operator|>
literal|5
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testComparisonReports
parameter_list|()
throws|throws
name|Exception
block|{
name|CachingFileVisitor
name|v
init|=
operator|new
name|CachingFileVisitor
argument_list|()
decl_stmt|;
name|Files
operator|.
name|walkFileTree
argument_list|(
name|compareReportsDir
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Path
name|report
range|:
name|v
operator|.
name|getPaths
argument_list|()
control|)
block|{
if|if
condition|(
name|report
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".xlsx"
argument_list|)
condition|)
block|{
name|cnt
operator|++
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|cnt
operator|>
literal|33
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|compare
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"Compare"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-extractsA"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|extractsDir
operator|.
name|resolve
argument_list|(
literal|"extractsA"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-extractsB"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|extractsDir
operator|.
name|resolve
argument_list|(
literal|"extractsB"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//add these just to confirm this info doesn't cause problems w cli
name|args
operator|.
name|add
argument_list|(
literal|"-maxTokens"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"10000000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-maxContentLength"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"100000000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-maxContentLengthForLangId"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"100000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-db"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|compareDBDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
literal|60000
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|profile
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"Profile"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-extracts"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|extractsDir
operator|.
name|resolve
argument_list|(
literal|"extractsA"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//add these just to confirm this info doesn't cause problems w cli
name|args
operator|.
name|add
argument_list|(
literal|"-maxTokens"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"10000000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-maxContentLength"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"100000000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-maxContentLengthForLangId"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"100000"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-db"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|profileDBDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
literal|60000
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|reportProfile
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"Report"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-db"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|profileDBDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-rd"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|profileReportsDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
literal|60000
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|reportCompare
parameter_list|()
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"Report"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-db"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|compareDBDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-rd"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|compareReportsDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
literal|60000
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"use this for development"
argument_list|)
specifier|public
name|void
name|testOneOff
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"Compare"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-extractsA"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|extractsDir
operator|.
name|resolve
argument_list|(
literal|"extractsA"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-extractsB"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|extractsDir
operator|.
name|resolve
argument_list|(
literal|"extractsB"
argument_list|)
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-db"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|ProcessUtils
operator|.
name|escapeCommandLine
argument_list|(
name|compareDBDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
operator|+
literal|"/"
operator|+
name|dbName
argument_list|)
argument_list|)
expr_stmt|;
name|execute
argument_list|(
name|args
argument_list|,
literal|60000
argument_list|)
expr_stmt|;
comment|//      args.add("-drop");
comment|//        args.add("-jdbc");
comment|//        args.add("jdbc:postgresql:tika_eval?user=user&password=password");
block|}
specifier|private
specifier|static
name|void
name|execute
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|incomingArgs
parameter_list|,
name|long
name|maxMillis
parameter_list|)
throws|throws
name|IOException
block|{
name|List
argument_list|<
name|String
argument_list|>
name|args
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|cp
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.class.path"
argument_list|)
decl_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"java"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-Djava.awt.headless=true"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"-cp"
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
name|cp
argument_list|)
expr_stmt|;
name|args
operator|.
name|add
argument_list|(
literal|"org.apache.tika.eval.TikaEvalCLI"
argument_list|)
expr_stmt|;
name|args
operator|.
name|addAll
argument_list|(
name|incomingArgs
argument_list|)
expr_stmt|;
name|ProcessBuilder
name|pb
init|=
operator|new
name|ProcessBuilder
argument_list|(
name|args
argument_list|)
decl_stmt|;
name|pb
operator|.
name|redirectOutput
argument_list|(
name|ProcessBuilder
operator|.
name|Redirect
operator|.
name|INHERIT
argument_list|)
expr_stmt|;
name|pb
operator|.
name|redirectError
argument_list|(
name|ProcessBuilder
operator|.
name|Redirect
operator|.
name|INHERIT
argument_list|)
expr_stmt|;
name|Process
name|process
init|=
name|pb
operator|.
name|start
argument_list|()
decl_stmt|;
name|long
name|started
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|long
name|elapsed
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|started
decl_stmt|;
name|int
name|exitValue
init|=
name|Integer
operator|.
name|MIN_VALUE
decl_stmt|;
while|while
condition|(
name|elapsed
operator|<
name|maxMillis
operator|&&
name|exitValue
operator|==
name|Integer
operator|.
name|MIN_VALUE
condition|)
block|{
try|try
block|{
name|exitValue
operator|=
name|process
operator|.
name|exitValue
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalThreadStateException
name|e
parameter_list|)
block|{              }
name|elapsed
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|-
name|started
expr_stmt|;
block|}
if|if
condition|(
name|exitValue
operator|==
name|Integer
operator|.
name|MIN_VALUE
condition|)
block|{
name|process
operator|.
name|destroy
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Process never exited within the allowed amount of time.\n"
operator|+
literal|"I needed to destroy it"
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|final
specifier|static
class|class
name|CachingFileVisitor
implements|implements
name|FileVisitor
argument_list|<
name|Path
argument_list|>
block|{
name|Set
argument_list|<
name|Path
argument_list|>
name|paths
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|FileVisitResult
name|preVisitDirectory
parameter_list|(
name|Path
name|dir
parameter_list|,
name|BasicFileAttributes
name|attrs
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|FileVisitResult
operator|.
name|CONTINUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|FileVisitResult
name|visitFile
parameter_list|(
name|Path
name|file
parameter_list|,
name|BasicFileAttributes
name|attrs
parameter_list|)
throws|throws
name|IOException
block|{
name|paths
operator|.
name|add
argument_list|(
name|file
argument_list|)
expr_stmt|;
return|return
name|FileVisitResult
operator|.
name|CONTINUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|FileVisitResult
name|visitFileFailed
parameter_list|(
name|Path
name|file
parameter_list|,
name|IOException
name|exc
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|FileVisitResult
operator|.
name|CONTINUE
return|;
block|}
annotation|@
name|Override
specifier|public
name|FileVisitResult
name|postVisitDirectory
parameter_list|(
name|Path
name|dir
parameter_list|,
name|IOException
name|exc
parameter_list|)
throws|throws
name|IOException
block|{
return|return
name|FileVisitResult
operator|.
name|CONTINUE
return|;
block|}
name|Set
argument_list|<
name|Path
argument_list|>
name|getPaths
parameter_list|()
block|{
return|return
name|paths
return|;
block|}
block|}
block|}
end_class

end_unit

