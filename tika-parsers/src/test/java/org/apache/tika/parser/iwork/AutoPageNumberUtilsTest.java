begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|iwork
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Test class for the<code>AutoPageNumberUtils</code> helper class.  */
end_comment

begin_class
specifier|public
class|class
name|AutoPageNumberUtilsTest
extends|extends
name|TestCase
block|{
comment|/** 	 * Check upper-case alpha-numeric numbers are generated based on the  	 * input page number. 	 */
specifier|public
name|void
name|testAlphaUpper
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Z"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|26
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AA"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|27
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZZ"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|52
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|53
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZZZ"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumeric
argument_list|(
literal|78
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Check lower-case alpha-numeric numbers are generated based on the  	 * input page number. 	 */
specifier|public
name|void
name|testAlphaLower
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"z"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|26
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aa"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|27
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zz"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|52
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaa"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|53
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"zzz"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asAlphaNumericLower
argument_list|(
literal|78
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Check upper-case Roman numerals numbers are generated based on the  	 * input page number. 	 */
specifier|public
name|void
name|testRomanUpper
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"I"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumerals
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XXVI"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumerals
argument_list|(
literal|26
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XXVII"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumerals
argument_list|(
literal|27
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Check lower-case Roman numerals numbers are generated based on the  	 * input page number. 	 */
specifier|public
name|void
name|testRomanLower
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"i"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumeralsLower
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxvi"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumeralsLower
argument_list|(
literal|26
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxvii"
argument_list|,
name|AutoPageNumberUtils
operator|.
name|asRomanNumeralsLower
argument_list|(
literal|27
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

