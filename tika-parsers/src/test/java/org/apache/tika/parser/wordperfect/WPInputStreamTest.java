begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|wordperfect
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|EOFException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|WPInputStreamTest
block|{
comment|//These test that we guarantee that a byte is read/skipped with the readWPX calls
comment|//but not with the regular read(), read(..), etc.
annotation|@
name|Test
specifier|public
name|void
name|testReadByte
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPByte
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadShort
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPShort
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadChar
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPChar
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadHex
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPHex
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadHexString
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPHexString
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadLong
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPLong
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadString
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|wpInputStream
operator|.
name|readWPString
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"should have thrown EOF"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{          }
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadArr
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
name|wpInputStream
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"should not have thrown EOF"
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testReadArrOffset
parameter_list|()
throws|throws
name|Exception
block|{
name|WPInputStream
name|wpInputStream
init|=
operator|new
name|WPInputStream
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|10
index|]
decl_stmt|;
name|wpInputStream
operator|.
name|read
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|EOFException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"should not have thrown EOF"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

