begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *   *     http://www.apache.org/licenses/LICENSE-2.0  *   * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|strings
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|strings
operator|.
name|StringsParser
operator|.
name|getStringsProg
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assume
operator|.
name|assumeTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|external
operator|.
name|ExternalParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BodyContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_class
specifier|public
class|class
name|StringsParserTest
block|{
specifier|public
specifier|static
name|boolean
name|canRun
parameter_list|()
block|{
name|StringsConfig
name|config
init|=
operator|new
name|StringsConfig
argument_list|()
decl_stmt|;
name|String
index|[]
name|checkCmd
init|=
block|{
name|config
operator|.
name|getStringsPath
argument_list|()
operator|+
name|getStringsProg
argument_list|()
block|,
literal|"--version"
block|}
decl_stmt|;
name|boolean
name|hasStrings
init|=
name|ExternalParser
operator|.
name|check
argument_list|(
name|checkCmd
argument_list|)
decl_stmt|;
return|return
name|hasStrings
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParse
parameter_list|()
throws|throws
name|Exception
block|{
name|assumeTrue
argument_list|(
name|canRun
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|resource
init|=
literal|"/test-documents/testOCTET_header.dbase3"
decl_stmt|;
name|String
index|[]
name|content
init|=
block|{
literal|"CLASSNO"
block|,
literal|"TITLE"
block|,
literal|"ITEMNO"
block|,
literal|"LISTNO"
block|,
literal|"LISTDATE"
block|}
decl_stmt|;
name|StringsConfig
name|stringsConfig
init|=
operator|new
name|StringsConfig
argument_list|()
decl_stmt|;
name|FileConfig
name|fileConfig
init|=
operator|new
name|FileConfig
argument_list|()
decl_stmt|;
name|Parser
name|parser
init|=
operator|new
name|StringsParser
argument_list|()
decl_stmt|;
name|ContentHandler
name|handler
init|=
operator|new
name|BodyContentHandler
argument_list|()
decl_stmt|;
name|ParseContext
name|context
init|=
operator|new
name|ParseContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|set
argument_list|(
name|StringsConfig
operator|.
name|class
argument_list|,
name|stringsConfig
argument_list|)
expr_stmt|;
name|context
operator|.
name|set
argument_list|(
name|FileConfig
operator|.
name|class
argument_list|,
name|fileConfig
argument_list|)
expr_stmt|;
name|InputStream
name|stream
init|=
name|StringsParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|resource
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|parse
argument_list|(
name|stream
argument_list|,
name|handler
argument_list|,
operator|new
name|Metadata
argument_list|()
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
for|for
control|(
name|String
name|word
range|:
name|content
control|)
block|{
name|assertTrue
argument_list|(
name|handler
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
name|word
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

