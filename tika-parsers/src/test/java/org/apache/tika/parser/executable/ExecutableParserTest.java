begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|executable
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ExecutableParserTest
extends|extends
name|TikaTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testWin32Parser
parameter_list|()
throws|throws
name|Exception
block|{
name|XMLResult
name|r
init|=
name|getXML
argument_list|(
literal|"testWindows-x86-32.exe"
argument_list|)
decl_stmt|;
name|Metadata
name|metadata
init|=
name|r
operator|.
name|metadata
decl_stmt|;
name|assertEquals
argument_list|(
literal|"application/x-msdownload"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2012-05-13T13:40:11Z"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CREATION_DATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExecutableParser
operator|.
name|MACHINE_x86_32
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|MACHINE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Little"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|ENDIAN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"32"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|ARCHITECTURE_BITS
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Windows"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|PLATFORM
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"<body />"
argument_list|,
name|r
operator|.
name|xml
argument_list|)
expr_stmt|;
comment|//no text yet
block|}
annotation|@
name|Test
specifier|public
name|void
name|testElfParser_x86_32
parameter_list|()
throws|throws
name|Exception
block|{
name|XMLResult
name|r
init|=
name|getXML
argument_list|(
literal|"testLinux-x86-32"
argument_list|)
decl_stmt|;
name|Metadata
name|metadata
init|=
name|r
operator|.
name|metadata
decl_stmt|;
name|assertEquals
argument_list|(
literal|"application/x-executable"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|ExecutableParser
operator|.
name|MACHINE_x86_32
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|MACHINE_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Little"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|ENDIAN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"32"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|ExecutableParser
operator|.
name|ARCHITECTURE_BITS
argument_list|)
argument_list|)
expr_stmt|;
comment|//         assertEquals("Linux",
comment|//               metadata.get(ExecutableParser.PLATFORM));
name|assertContains
argument_list|(
literal|"<body />"
argument_list|,
name|r
operator|.
name|xml
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

