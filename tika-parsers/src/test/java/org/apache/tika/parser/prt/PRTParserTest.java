begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|prt
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BodyContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_class
specifier|public
class|class
name|PRTParserTest
extends|extends
name|TikaTest
block|{
comment|/**      * Try with a simple file      */
specifier|public
name|void
name|testPRTParserBasics
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|input
init|=
name|getResourceAsStream
argument_list|(
literal|"/test-documents/testCADKEY.prt"
argument_list|)
decl_stmt|;
try|try
block|{
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|ContentHandler
name|handler
init|=
operator|new
name|BodyContentHandler
argument_list|()
decl_stmt|;
operator|new
name|PRTParser
argument_list|()
operator|.
name|parse
argument_list|(
name|input
argument_list|,
name|handler
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/x-prt"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
comment|// This file has a date
name|assertEquals
argument_list|(
literal|"2011-06-20T16:54:00"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|DATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"2011-06-20T16:54:00"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CREATION_DATE
argument_list|)
argument_list|)
expr_stmt|;
comment|// But no description
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|contents
init|=
name|handler
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertContains
argument_list|(
literal|"Front View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Back View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Bottom View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Right View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Left View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
comment|//assertContains("Isometric View", contents); // Can't detect yet
name|assertContains
argument_list|(
literal|"Axonometric View"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"You've managed to extract all the text!"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"This is more text"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Text Inside a PRT file"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|input
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Now a more complex one      */
specifier|public
name|void
name|testPRTParserComplex
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|input
init|=
name|getResourceAsStream
argument_list|(
literal|"/test-documents/testCADKEY2.prt"
argument_list|)
decl_stmt|;
try|try
block|{
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|ContentHandler
name|handler
init|=
operator|new
name|BodyContentHandler
argument_list|()
decl_stmt|;
operator|new
name|PRTParser
argument_list|()
operator|.
name|parse
argument_list|(
name|input
argument_list|,
name|handler
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"application/x-prt"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
comment|// File has both a date and a description
name|assertEquals
argument_list|(
literal|"1997-04-01T08:59:00"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|DATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1997-04-01T08:59:00"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CREATION_DATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TIKA TEST PART DESCRIPTION INFORMATION\r\n"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|contents
init|=
name|handler
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertContains
argument_list|(
literal|"ITEM"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"REQ."
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"DESCRIPTION"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"MAT'L"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"TOLERANCES UNLESS"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"FRACTIONS"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"ANGLES"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Acme Corporation"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"DATE"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"CHANGE"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"DRAWN BY"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"SCALE"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"TIKA TEST DRAWING"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"TIKA LETTERS"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"5.82"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"112"
operator|+
literal|'\u00b0'
argument_list|,
name|contents
argument_list|)
expr_stmt|;
comment|// Degrees
name|assertContains
argument_list|(
literal|"TIKA TEST LETTER"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"17.11"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|'\u00d8'
operator|+
literal|"\ufffd2.000"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
comment|// Diameter
name|assertContains
argument_list|(
literal|"Diameter"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"The Apache Tika toolkit"
argument_list|,
name|contents
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|input
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

