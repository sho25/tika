begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ocr
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
specifier|public
class|class
name|TesseractOCRConfigTest
extends|extends
name|TikaTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testNoConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|TesseractOCRConfig
name|config
init|=
operator|new
name|TesseractOCRConfig
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default tesseractPath value"
argument_list|,
literal|""
argument_list|,
name|config
operator|.
name|getTesseractPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default language value"
argument_list|,
literal|"eng"
argument_list|,
name|config
operator|.
name|getLanguage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default pageSegMode value"
argument_list|,
literal|"1"
argument_list|,
name|config
operator|.
name|getPageSegMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default minFileSizeToOcr value"
argument_list|,
literal|0
argument_list|,
name|config
operator|.
name|getMinFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default maxFileSizeToOcr value"
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
name|config
operator|.
name|getMaxFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default timeout value"
argument_list|,
literal|120
argument_list|,
name|config
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPartialConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|stream
init|=
name|TesseractOCRConfigTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-properties/TesseractOCRConfig-partial.properties"
argument_list|)
decl_stmt|;
name|TesseractOCRConfig
name|config
init|=
operator|new
name|TesseractOCRConfig
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default tesseractPath value"
argument_list|,
literal|""
argument_list|,
name|config
operator|.
name|getTesseractPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden language value"
argument_list|,
literal|"fra+deu"
argument_list|,
name|config
operator|.
name|getLanguage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default pageSegMode value"
argument_list|,
literal|"1"
argument_list|,
name|config
operator|.
name|getPageSegMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden minFileSizeToOcr value"
argument_list|,
literal|1
argument_list|,
name|config
operator|.
name|getMinFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid default maxFileSizeToOcr value"
argument_list|,
name|Integer
operator|.
name|MAX_VALUE
argument_list|,
name|config
operator|.
name|getMaxFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden timeout value"
argument_list|,
literal|240
argument_list|,
name|config
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testFullConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|stream
init|=
name|TesseractOCRConfigTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-properties/TesseractOCRConfig-full.properties"
argument_list|)
decl_stmt|;
name|TesseractOCRConfig
name|config
init|=
operator|new
name|TesseractOCRConfig
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden tesseractPath value"
argument_list|,
literal|"/opt/tesseract"
operator|+
name|File
operator|.
name|separator
argument_list|,
name|config
operator|.
name|getTesseractPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden language value"
argument_list|,
literal|"fra+deu"
argument_list|,
name|config
operator|.
name|getLanguage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden pageSegMode value"
argument_list|,
literal|"2"
argument_list|,
name|config
operator|.
name|getPageSegMode
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden minFileSizeToOcr value"
argument_list|,
literal|1
argument_list|,
name|config
operator|.
name|getMinFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden maxFileSizeToOcr value"
argument_list|,
literal|2000000
argument_list|,
name|config
operator|.
name|getMaxFileSizeToOcr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Invalid overridden timeout value"
argument_list|,
literal|240
argument_list|,
name|config
operator|.
name|getTimeout
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testValidateLanguage
parameter_list|()
block|{
name|TesseractOCRConfig
name|config
init|=
operator|new
name|TesseractOCRConfig
argument_list|()
decl_stmt|;
name|config
operator|.
name|setLanguage
argument_list|(
literal|"eng"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setLanguage
argument_list|(
literal|"eng+fra"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Couldn't set valid values"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setLanguage
argument_list|(
literal|"rm -Rf *"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testValidatePageSegMode
parameter_list|()
block|{
name|TesseractOCRConfig
name|config
init|=
operator|new
name|TesseractOCRConfig
argument_list|()
decl_stmt|;
name|config
operator|.
name|setPageSegMode
argument_list|(
literal|"0"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPageSegMode
argument_list|(
literal|"10"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Couldn't set valid values"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setPageSegMode
argument_list|(
literal|"11"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

