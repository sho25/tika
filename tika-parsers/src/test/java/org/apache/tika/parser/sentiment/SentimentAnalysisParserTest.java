begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|sentiment
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|Tika
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|TikaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaConfigException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * Test case for {@link SentimentAnalysisParser}  */
end_comment

begin_class
specifier|public
class|class
name|SentimentAnalysisParserTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|endToEndTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Tika
name|tika
init|=
name|getTika
argument_list|(
literal|"tika-config-sentiment-opennlp.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|tika
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|String
name|text
init|=
literal|"What a wonderful thought it is that"
operator|+
literal|" some of the best days of our lives haven't happened yet."
decl_stmt|;
name|ByteArrayInputStream
name|stream
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|text
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Metadata
name|md
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|tika
operator|.
name|parse
argument_list|(
name|stream
argument_list|,
name|md
argument_list|)
expr_stmt|;
name|String
name|sentiment
init|=
name|md
operator|.
name|get
argument_list|(
literal|"Sentiment"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|sentiment
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"positive"
argument_list|,
name|sentiment
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCategorical
parameter_list|()
throws|throws
name|Exception
block|{
name|Tika
name|tika
init|=
name|getTika
argument_list|(
literal|"tika-config-sentiment-opennlp-cat.xml"
argument_list|)
decl_stmt|;
if|if
condition|(
name|tika
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|String
name|text
init|=
literal|"Whatever, I need some cooling off time!"
decl_stmt|;
name|ByteArrayInputStream
name|stream
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|text
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Metadata
name|md
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|tika
operator|.
name|parse
argument_list|(
name|stream
argument_list|,
name|md
argument_list|)
expr_stmt|;
name|String
name|sentiment
init|=
name|md
operator|.
name|get
argument_list|(
literal|"Sentiment"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|sentiment
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"angry"
argument_list|,
name|sentiment
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Tika
name|getTika
parameter_list|(
name|String
name|configXml
parameter_list|)
throws|throws
name|TikaException
throws|,
name|SAXException
throws|,
name|IOException
block|{
try|try
init|(
name|InputStream
name|confStream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|configXml
argument_list|)
init|)
block|{
assert|assert
name|confStream
operator|!=
literal|null
assert|;
name|TikaConfig
name|config
init|=
operator|new
name|TikaConfig
argument_list|(
name|confStream
argument_list|)
decl_stmt|;
return|return
operator|new
name|Tika
argument_list|(
name|config
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|TikaConfigException
name|e
parameter_list|)
block|{
comment|//if can't connect to pull sentiment model...ignore test
if|if
condition|(
name|e
operator|.
name|getCause
argument_list|()
operator|!=
literal|null
operator|&&
name|e
operator|.
name|getCause
argument_list|()
operator|instanceof
name|IOException
condition|)
block|{
return|return
literal|null
return|;
block|}
throw|throw
name|e
throw|;
block|}
block|}
block|}
end_class

end_unit

