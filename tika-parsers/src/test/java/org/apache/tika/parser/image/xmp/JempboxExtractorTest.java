begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|image
operator|.
name|xmp
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|TikaCoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|image
operator|.
name|xmp
operator|.
name|JempboxExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JempboxExtractorTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testParseJpeg
parameter_list|()
throws|throws
name|IOException
throws|,
name|TikaException
block|{
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-documents/testJPEG_commented.jpg"
argument_list|)
decl_stmt|;
comment|// set some values before extraction to see that they are overridden
name|metadata
operator|.
name|set
argument_list|(
name|TikaCoreProperties
operator|.
name|TITLE
argument_list|,
literal|"old title"
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
name|TikaCoreProperties
operator|.
name|DESCRIPTION
argument_list|,
literal|"old description"
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATOR
argument_list|,
literal|"previous author"
argument_list|)
expr_stmt|;
comment|// ... or kept in case the field is multi-value
name|metadata
operator|.
name|add
argument_list|(
name|TikaCoreProperties
operator|.
name|KEYWORDS
argument_list|,
literal|"oldkeyword"
argument_list|)
expr_stmt|;
name|JempboxExtractor
name|extractor
init|=
operator|new
name|JempboxExtractor
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
name|extractor
operator|.
name|parse
argument_list|(
name|stream
argument_list|)
expr_stmt|;
comment|// DublinCore fields
name|assertEquals
argument_list|(
literal|"Tosteberga \u00C4ngar"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|TITLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bird site in north eastern Sk\u00E5ne, Sweden.\n(new line)"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Some Tourist"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATOR
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|keywords
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|metadata
operator|.
name|getValues
argument_list|(
name|TikaCoreProperties
operator|.
name|KEYWORDS
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"oldkeyword"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"grazelands"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"nature reserve"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"bird watching"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"coast"
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|subject
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|metadata
operator|.
name|getValues
argument_list|(
name|Metadata
operator|.
name|SUBJECT
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|contains
argument_list|(
literal|"oldkeyword"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|contains
argument_list|(
literal|"grazelands"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|contains
argument_list|(
literal|"nature reserve"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|contains
argument_list|(
literal|"bird watching"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|subject
operator|.
name|contains
argument_list|(
literal|"coast"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseJpegPhotoshop
parameter_list|()
throws|throws
name|IOException
throws|,
name|TikaException
block|{
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-documents/testJPEG_commented_pspcs2mac.jpg"
argument_list|)
decl_stmt|;
name|JempboxExtractor
name|extractor
init|=
operator|new
name|JempboxExtractor
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
name|extractor
operator|.
name|parse
argument_list|(
name|stream
argument_list|)
expr_stmt|;
comment|// DublinCore fields
name|assertEquals
argument_list|(
literal|"Tosteberga \u00C4ngar"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|TITLE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bird site in north eastern Sk\u00E5ne, Sweden.\n(new line)"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Some Tourist"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATOR
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|keywords
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|metadata
operator|.
name|getValues
argument_list|(
name|TikaCoreProperties
operator|.
name|KEYWORDS
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"bird watching"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"coast"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testParseJpegXnviewmp
parameter_list|()
throws|throws
name|IOException
throws|,
name|TikaException
block|{
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-documents/testJPEG_commented_xnviewmp026.jpg"
argument_list|)
decl_stmt|;
name|JempboxExtractor
name|extractor
init|=
operator|new
name|JempboxExtractor
argument_list|(
name|metadata
argument_list|)
decl_stmt|;
name|extractor
operator|.
name|parse
argument_list|(
name|stream
argument_list|)
expr_stmt|;
comment|// XnViewMp fields not understood by Jempbox
name|assertEquals
argument_list|(
literal|"Bird site in north eastern Sk\u00E5ne, Sweden.\n(new line)"
argument_list|,
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|keywords
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|metadata
operator|.
name|getValues
argument_list|(
name|TikaCoreProperties
operator|.
name|KEYWORDS
argument_list|)
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"coast"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|keywords
operator|.
name|contains
argument_list|(
literal|"nature reserve"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJoinCreators
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"Mr B"
argument_list|,
operator|new
name|JempboxExtractor
argument_list|(
literal|null
argument_list|)
operator|.
name|joinCreators
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Mr B"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO use multi-value property instead?
name|assertEquals
argument_list|(
literal|"Mr B, Mr A"
argument_list|,
operator|new
name|JempboxExtractor
argument_list|(
literal|null
argument_list|)
operator|.
name|joinCreators
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"Mr B"
argument_list|,
literal|"Mr A"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

