begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|recognition
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|Tika
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|TikaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|CompositeParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|edu
operator|.
name|usc
operator|.
name|irds
operator|.
name|agepredictor
operator|.
name|authorage
operator|.
name|AgePredicterLocal
import|;
end_import

begin_class
specifier|public
class|class
name|AgeRecogniserTest
extends|extends
name|TikaTest
block|{
specifier|private
specifier|static
specifier|final
name|String
name|CONFIG_FILE
init|=
literal|"tika-config-age.xml"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TEST_TEXT
init|=
literal|"I am student at University of Southern California (USC),"
operator|+
literal|" located in Los Angeles . USC's football team is called by name Trojans."
operator|+
literal|" Mr. John McKay was a head coach of the team from 1960 - 1975"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|double
name|TEST_AGE
init|=
literal|26.4
decl_stmt|;
static|static
block|{
comment|/**     	 * Injecting mock AgeClassifer into AgeParser to generate test response     	 */
name|AgePredicterLocal
name|mockAgeClassifier
init|=
name|mock
argument_list|(
name|AgePredicterLocal
operator|.
name|class
argument_list|)
decl_stmt|;
try|try
block|{
name|when
argument_list|(
name|mockAgeClassifier
operator|.
name|predictAge
argument_list|(
name|TEST_TEXT
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TEST_AGE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAgeRecogniser
parameter_list|()
throws|throws
name|Exception
block|{
comment|//test config is added to resources directory
name|TikaConfig
name|config
init|=
operator|new
name|TikaConfig
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|CONFIG_FILE
argument_list|)
argument_list|)
decl_stmt|;
name|Tika
name|tika
init|=
operator|new
name|Tika
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|Metadata
name|md
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|tika
operator|.
name|parse
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|TEST_TEXT
operator|.
name|getBytes
argument_list|(
name|Charset
operator|.
name|defaultCharset
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|md
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
literal|"Age Parser not invoked."
argument_list|,
operator|new
name|String
index|[]
block|{
name|CompositeParser
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
block|,
name|AgeRecogniser
operator|.
name|class
operator|.
name|getCanonicalName
argument_list|()
block|}
argument_list|,
name|md
operator|.
name|getValues
argument_list|(
literal|"X-Parsed-By"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
literal|"Wrong age predicted."
argument_list|,
operator|new
name|String
index|[]
block|{
name|Double
operator|.
name|toString
argument_list|(
name|TEST_AGE
argument_list|)
block|}
argument_list|,
name|md
operator|.
name|getValues
argument_list|(
name|AgeRecogniser
operator|.
name|MD_KEY_ESTIMATED_AGE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

