begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|mail
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Message
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|MailUtilTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBasic
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|s
init|=
literal|"Julien Nioche (JIRA)<jira@apache.org>"
decl_stmt|;
name|assertExtracted
argument_list|(
literal|"Julien Nioche (JIRA)"
argument_list|,
literal|"jira@apache.org"
argument_list|,
name|s
argument_list|)
expr_stmt|;
name|s
operator|=
literal|"\"Julien Nioche (JIRA)\"<jira@apache.org>"
expr_stmt|;
name|assertExtracted
argument_list|(
literal|"Julien Nioche (JIRA)"
argument_list|,
literal|"jira@apache.org"
argument_list|,
name|s
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertExtracted
parameter_list|(
name|String
name|person
parameter_list|,
name|String
name|email
parameter_list|,
name|String
name|string
parameter_list|)
block|{
name|Metadata
name|m
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|MailUtil
operator|.
name|setPersonAndEmail
argument_list|(
name|string
argument_list|,
name|Message
operator|.
name|MESSAGE_FROM_NAME
argument_list|,
name|Message
operator|.
name|MESSAGE_FROM_EMAIL
argument_list|,
name|m
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|person
operator|+
literal|" : "
operator|+
name|m
operator|.
name|get
argument_list|(
name|Message
operator|.
name|MESSAGE_FROM_NAME
argument_list|)
argument_list|,
name|person
argument_list|,
name|m
operator|.
name|get
argument_list|(
name|Message
operator|.
name|MESSAGE_FROM_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|email
operator|+
literal|" : "
operator|+
name|m
operator|.
name|get
argument_list|(
name|Message
operator|.
name|MESSAGE_FROM_EMAIL
argument_list|)
argument_list|,
name|email
argument_list|,
name|m
operator|.
name|get
argument_list|(
name|Message
operator|.
name|MESSAGE_FROM_EMAIL
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

