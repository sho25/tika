begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *<p>  * http://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|epub
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|TikaCoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|EpubParserTest
extends|extends
name|TikaTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testXMLParser
parameter_list|()
throws|throws
name|Exception
block|{
name|XMLResult
name|xmlResult
init|=
name|getXML
argument_list|(
literal|"testEPUB.epub"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"application/epub+zip"
argument_list|,
name|xmlResult
operator|.
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en"
argument_list|,
name|xmlResult
operator|.
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|LANGUAGE
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"This is an ePub test publication for Tika."
argument_list|,
name|xmlResult
operator|.
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|DESCRIPTION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Apache"
argument_list|,
name|xmlResult
operator|.
name|metadata
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|PUBLISHER
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|content
init|=
name|xmlResult
operator|.
name|xml
decl_stmt|;
name|assertContains
argument_list|(
literal|"Plus a simple div"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"First item"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"The previous headings were<strong>subchapters</strong>"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Table data"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"This is the text for chapter Two"
argument_list|,
name|content
argument_list|)
expr_stmt|;
comment|//make sure style/script elements aren't extracted
name|assertNotContained
argument_list|(
literal|"nothing to see here"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertNotContained
argument_list|(
literal|"nor here"
argument_list|,
name|content
argument_list|)
expr_stmt|;
name|assertNotContained
argument_list|(
literal|"font-style"
argument_list|,
name|content
argument_list|)
expr_stmt|;
comment|//make sure that there is only one of each
name|assertContainsCount
argument_list|(
literal|"<html"
argument_list|,
name|content
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertContainsCount
argument_list|(
literal|"<head"
argument_list|,
name|content
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|assertContainsCount
argument_list|(
literal|"<body"
argument_list|,
name|content
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

