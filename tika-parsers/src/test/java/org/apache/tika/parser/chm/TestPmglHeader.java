begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
operator|.
name|TestContainerAwareDetector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|accessor
operator|.
name|ChmPmglHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|core
operator|.
name|ChmCommons
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|core
operator|.
name|ChmConstants
import|;
end_import

begin_class
specifier|public
class|class
name|TestPmglHeader
extends|extends
name|TestCase
block|{
name|ChmPmglHeader
name|chmPmglHeader
init|=
literal|null
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|TikaInputStream
name|stream
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
name|TestContainerAwareDetector
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|TestParameters
operator|.
name|chmFile
argument_list|)
argument_list|)
decl_stmt|;
name|byte
index|[]
name|data
init|=
name|ChmCommons
operator|.
name|toByteArray
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|chmPmglHeader
operator|=
operator|new
name|ChmPmglHeader
argument_list|()
expr_stmt|;
name|chmPmglHeader
operator|.
name|parse
argument_list|(
name|Arrays
operator|.
name|copyOfRange
argument_list|(
name|data
argument_list|,
name|ChmConstants
operator|.
name|START_PMGL
argument_list|,
name|ChmConstants
operator|.
name|START_PMGL
operator|+
name|ChmConstants
operator|.
name|CHM_PMGL_LEN
operator|+
literal|10
argument_list|)
argument_list|,
name|chmPmglHeader
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
operator|(
name|chmPmglHeader
operator|!=
literal|null
operator|)
operator|&&
name|chmPmglHeader
operator|.
name|toString
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChmPmglHeaderGet
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestParameters
operator|.
name|VP_PMGL_SIGNATURE
argument_list|,
operator|new
name|String
argument_list|(
name|chmPmglHeader
operator|.
name|getSignature
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetBlockNext
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestParameters
operator|.
name|VP_PMGL_BLOCK_NEXT
argument_list|,
name|chmPmglHeader
operator|.
name|getBlockNext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetBlockPrev
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestParameters
operator|.
name|VP_PMGL_BLOCK_PREV
argument_list|,
name|chmPmglHeader
operator|.
name|getBlockPrev
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetFreeSpace
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestParameters
operator|.
name|VP_PMGL_FREE_SPACE
argument_list|,
name|chmPmglHeader
operator|.
name|getFreeSpace
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testGetUnknown0008
parameter_list|()
block|{
name|Assert
operator|.
name|assertEquals
argument_list|(
name|TestParameters
operator|.
name|VP_PMGL_UNKNOWN_008
argument_list|,
name|chmPmglHeader
operator|.
name|getUnknown0008
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{ 	}
block|}
end_class

end_unit

