begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|poifs
operator|.
name|filesystem
operator|.
name|POIFSFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|OfficeParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|OfficeParser
operator|.
name|POIFSDocumentType
import|;
end_import

begin_comment
comment|/**  * A detector that works on a POIFS OLE2 document  *  to figure out exactly what the file is  */
end_comment

begin_class
specifier|public
class|class
name|POIFSContainerDetector
implements|implements
name|Detector
block|{
specifier|public
name|MediaType
name|detect
parameter_list|(
name|InputStream
name|input
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
block|{
name|POIFSFileSystem
name|fs
init|=
operator|new
name|POIFSFileSystem
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|POIFSDocumentType
name|type
init|=
name|OfficeParser
operator|.
name|POIFSDocumentType
operator|.
name|detectType
argument_list|(
name|fs
argument_list|)
decl_stmt|;
if|if
condition|(
name|input
operator|instanceof
name|TikaInputStream
condition|)
block|{
operator|(
operator|(
name|TikaInputStream
operator|)
name|input
operator|)
operator|.
name|setOpenContainer
argument_list|(
name|fs
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|fs
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|type
operator|.
name|getType
argument_list|()
return|;
block|}
block|}
end_class

end_unit

