begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|mp3
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Takes an array of {@link ID3Tags} in preference order, and when asked for  * a given tag, will return it from the first {@link ID3Tags} that has it.  */
end_comment

begin_class
specifier|public
class|class
name|CompositeTagHandler
implements|implements
name|ID3Tags
block|{
specifier|private
name|ID3Tags
index|[]
name|tags
decl_stmt|;
specifier|public
name|CompositeTagHandler
parameter_list|(
name|ID3Tags
index|[]
name|tags
parameter_list|)
block|{
name|this
operator|.
name|tags
operator|=
name|tags
expr_stmt|;
block|}
specifier|public
name|boolean
name|getTagsPresent
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getTagsPresent
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getTitle
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getArtist
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getArtist
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getArtist
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getAlbum
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getAlbum
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getAlbum
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getComposer
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getComposer
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getComposer
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getYear
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getYear
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getYear
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|ID3Comment
argument_list|>
name|getComments
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
name|List
argument_list|<
name|ID3Comment
argument_list|>
name|comments
init|=
name|tag
operator|.
name|getComments
argument_list|()
decl_stmt|;
if|if
condition|(
name|comments
operator|!=
literal|null
operator|&&
name|comments
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
name|comments
return|;
block|}
block|}
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
specifier|public
name|String
name|getGenre
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getGenre
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getGenre
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getTrackNumber
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getTrackNumber
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getTrackNumber
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getAlbumArtist
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getAlbumArtist
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getAlbumArtist
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getDisc
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getDisc
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getDisc
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getCompilation
parameter_list|()
block|{
for|for
control|(
name|ID3Tags
name|tag
range|:
name|tags
control|)
block|{
if|if
condition|(
name|tag
operator|.
name|getCompilation
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|tag
operator|.
name|getCompilation
argument_list|()
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

