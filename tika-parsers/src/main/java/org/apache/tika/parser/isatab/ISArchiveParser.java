begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|isatab
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FilenameFilter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TemporaryResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|ISArchiveParser
implements|implements
name|Parser
block|{
comment|/** 	 * Serial version UID 	 */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|3640809327541300229L
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|MediaType
argument_list|>
name|SUPPORTED_TYPES
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|MediaType
operator|.
name|application
argument_list|(
literal|"x-isatab"
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
name|String
name|studyAssayFileNameField
init|=
literal|"Study Assay File Name"
decl_stmt|;
specifier|private
name|String
name|location
init|=
literal|null
decl_stmt|;
specifier|private
name|String
name|studyFileName
init|=
literal|null
decl_stmt|;
comment|/** 	 * Default constructor. 	 */
specifier|public
name|ISArchiveParser
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Constructor that accepts the pathname of ISArchive folder. 	 * @param location pathname of ISArchive folder including ISA-Tab files 	 */
specifier|public
name|ISArchiveParser
parameter_list|(
name|String
name|location
parameter_list|)
block|{
if|if
condition|(
name|location
operator|!=
literal|null
operator|&&
operator|!
name|location
operator|.
name|endsWith
argument_list|(
name|File
operator|.
name|separator
argument_list|)
condition|)
block|{
name|location
operator|+=
name|File
operator|.
name|separator
expr_stmt|;
block|}
name|this
operator|.
name|location
operator|=
name|location
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|MediaType
argument_list|>
name|getSupportedTypes
parameter_list|(
name|ParseContext
name|context
parameter_list|)
block|{
return|return
name|SUPPORTED_TYPES
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|TemporaryResources
name|tmp
init|=
name|TikaInputStream
operator|.
name|isTikaInputStream
argument_list|(
name|stream
argument_list|)
condition|?
literal|null
else|:
operator|new
name|TemporaryResources
argument_list|()
decl_stmt|;
name|TikaInputStream
name|tis
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
name|stream
argument_list|,
name|tmp
argument_list|)
decl_stmt|;
try|try
block|{
if|if
condition|(
name|this
operator|.
name|location
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|location
operator|=
name|tis
operator|.
name|getFile
argument_list|()
operator|.
name|getParent
argument_list|()
operator|+
name|File
operator|.
name|separator
expr_stmt|;
block|}
name|this
operator|.
name|studyFileName
operator|=
name|tis
operator|.
name|getFile
argument_list|()
operator|.
name|getName
argument_list|()
expr_stmt|;
name|File
name|locationFile
init|=
operator|new
name|File
argument_list|(
name|location
argument_list|)
decl_stmt|;
name|String
index|[]
name|investigationList
init|=
name|locationFile
operator|.
name|list
argument_list|(
operator|new
name|FilenameFilter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|dir
parameter_list|,
name|String
name|name
parameter_list|)
block|{
return|return
name|name
operator|.
name|matches
argument_list|(
literal|"i_.+\\.txt"
argument_list|)
return|;
block|}
block|}
argument_list|)
decl_stmt|;
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|parseInvestigation
argument_list|(
name|investigationList
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|parseStudy
argument_list|(
name|stream
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|parseAssay
argument_list|(
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|tmp
operator|!=
literal|null
condition|)
block|{
name|tmp
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|parseInvestigation
parameter_list|(
name|String
index|[]
name|investigationList
parameter_list|,
name|XHTMLContentHandler
name|xhtml
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
if|if
condition|(
operator|(
name|investigationList
operator|==
literal|null
operator|)
operator|||
operator|(
name|investigationList
operator|.
name|length
operator|==
literal|0
operator|)
condition|)
block|{
comment|// TODO warning
return|return;
block|}
if|if
condition|(
name|investigationList
operator|.
name|length
operator|>
literal|1
condition|)
block|{
comment|// TODO warning
return|return;
block|}
name|String
name|investigation
init|=
name|investigationList
index|[
literal|0
index|]
decl_stmt|;
comment|// TODO add to metadata?
try|try
init|(
name|InputStream
name|stream
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
operator|new
name|File
argument_list|(
name|this
operator|.
name|location
operator|+
name|investigation
argument_list|)
argument_list|)
init|)
block|{
name|ISATabUtils
operator|.
name|parseInvestigation
argument_list|(
name|stream
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|,
name|this
operator|.
name|studyFileName
argument_list|)
expr_stmt|;
block|}
name|xhtml
operator|.
name|element
argument_list|(
literal|"h1"
argument_list|,
literal|"INVESTIGATION "
operator|+
name|metadata
operator|.
name|get
argument_list|(
literal|"Investigation Identifier"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|parseStudy
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|XHTMLContentHandler
name|xhtml
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|xhtml
operator|.
name|element
argument_list|(
literal|"h2"
argument_list|,
literal|"STUDY "
operator|+
name|metadata
operator|.
name|get
argument_list|(
literal|"Study Identifier"
argument_list|)
argument_list|)
expr_stmt|;
name|ISATabUtils
operator|.
name|parseStudy
argument_list|(
name|stream
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|parseAssay
parameter_list|(
name|XHTMLContentHandler
name|xhtml
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
for|for
control|(
name|String
name|assayFileName
range|:
name|metadata
operator|.
name|getValues
argument_list|(
name|studyAssayFileNameField
argument_list|)
control|)
block|{
name|xhtml
operator|.
name|startElement
argument_list|(
literal|"div"
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|element
argument_list|(
literal|"h3"
argument_list|,
literal|"ASSAY "
operator|+
name|assayFileName
argument_list|)
expr_stmt|;
name|InputStream
name|stream
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
operator|new
name|File
argument_list|(
name|this
operator|.
name|location
operator|+
name|assayFileName
argument_list|)
argument_list|)
decl_stmt|;
name|ISATabUtils
operator|.
name|parseAssay
argument_list|(
name|stream
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
name|xhtml
operator|.
name|endElement
argument_list|(
literal|"div"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

