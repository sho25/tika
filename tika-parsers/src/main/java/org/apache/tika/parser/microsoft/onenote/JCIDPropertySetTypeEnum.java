begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|onenote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * The JCID property set type enum from section 2.1.13 of MS-ONE  * specification.  */
end_comment

begin_enum
enum|enum
name|JCIDPropertySetTypeEnum
block|{
name|jcidReadOnlyPersistablePropertyContainerForAuthor
argument_list|(
literal|0x00120001
argument_list|)
block|,
name|jcidPersistablePropertyContainerForTOC
argument_list|(
literal|0x00020001
argument_list|)
block|,
name|jcidPersistablePropertyContainerForTOCSection
argument_list|(
literal|0x00020001
argument_list|)
block|,
name|jcidSectionNode
argument_list|(
literal|0x00060007
argument_list|)
block|,
name|jcidPageSeriesNode
argument_list|(
literal|0x00060008
argument_list|)
block|,
name|jcidPageNode
argument_list|(
literal|0x0006000B
argument_list|)
block|,
name|jcidOutlineNode
argument_list|(
literal|0x0006000C
argument_list|)
block|,
name|jcidOutlineElementNode
argument_list|(
literal|0x0006000D
argument_list|)
block|,
name|jcidRichTextOENode
argument_list|(
literal|0x0006000E
argument_list|)
block|,
name|jcidImageNode
argument_list|(
literal|0x00060011
argument_list|)
block|,
name|jcidNumberListNode
argument_list|(
literal|0x00060012
argument_list|)
block|,
name|jcidOutlineGroup
argument_list|(
literal|0x00060019
argument_list|)
block|,
name|jcidTableNode
argument_list|(
literal|0x00060022
argument_list|)
block|,
name|jcidTableRowNode
argument_list|(
literal|0x00060023
argument_list|)
block|,
name|jcidTableCellNode
argument_list|(
literal|0x00060024
argument_list|)
block|,
name|jcidTitleNode
argument_list|(
literal|0x0006002C
argument_list|)
block|,
name|jcidPageMetaData
argument_list|(
literal|0x00020030
argument_list|)
block|,
name|jcidSectionMetaData
argument_list|(
literal|0x00020031
argument_list|)
block|,
name|jcidEmbeddedFileNode
argument_list|(
literal|0x00060035
argument_list|)
block|,
name|jcidPageManifestNode
argument_list|(
literal|0x00060037
argument_list|)
block|,
name|jcidConflictPageMetaData
argument_list|(
literal|0x00020038
argument_list|)
block|,
name|jcidVersionHistoryContent
argument_list|(
literal|0x0006003C
argument_list|)
block|,
name|jcidVersionProxy
argument_list|(
literal|0x0006003D
argument_list|)
block|,
name|jcidNoteTagSharedDefinitionContainer
argument_list|(
literal|0x00120043
argument_list|)
block|,
name|jcidRevisionMetaData
argument_list|(
literal|0x00020044
argument_list|)
block|,
name|jcidVersionHistoryMetaData
argument_list|(
literal|0x00020046
argument_list|)
block|,
name|jcidParagraphStyleObject
argument_list|(
literal|0x0012004D
argument_list|)
block|,
name|jcidParagraphStyleObjectForText
argument_list|(
literal|0x0012004D
argument_list|)
block|,
name|unknown
argument_list|(
literal|0x0
argument_list|)
block|;
specifier|private
name|long
name|jcid
decl_stmt|;
name|JCIDPropertySetTypeEnum
parameter_list|(
name|long
name|jcid
parameter_list|)
block|{
name|this
operator|.
name|jcid
operator|=
name|jcid
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|Long
argument_list|,
name|JCIDPropertySetTypeEnum
argument_list|>
name|BY_ID
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
static|static
block|{
for|for
control|(
name|JCIDPropertySetTypeEnum
name|e
range|:
name|values
argument_list|()
control|)
block|{
name|BY_ID
operator|.
name|put
argument_list|(
name|e
operator|.
name|jcid
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|JCIDPropertySetTypeEnum
name|of
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|JCIDPropertySetTypeEnum
name|result
init|=
name|BY_ID
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
return|return
name|unknown
return|;
block|}
return|return
name|result
return|;
block|}
block|}
end_enum

end_unit

