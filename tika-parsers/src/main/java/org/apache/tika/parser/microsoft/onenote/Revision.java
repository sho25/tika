begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|onenote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
class|class
name|Revision
block|{
name|Map
argument_list|<
name|Long
argument_list|,
name|GUID
argument_list|>
name|globalId
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FileNodePtr
argument_list|>
name|manifestList
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ExtendedGUID
name|gosid
init|=
name|ExtendedGUID
operator|.
name|nil
argument_list|()
decl_stmt|;
name|ExtendedGUID
name|dependent
init|=
name|ExtendedGUID
operator|.
name|nil
argument_list|()
decl_stmt|;
specifier|public
name|Map
argument_list|<
name|Long
argument_list|,
name|GUID
argument_list|>
name|getGlobalId
parameter_list|()
block|{
return|return
name|globalId
return|;
block|}
specifier|public
name|void
name|setGlobalId
parameter_list|(
name|Map
argument_list|<
name|Long
argument_list|,
name|GUID
argument_list|>
name|globalId
parameter_list|)
block|{
name|this
operator|.
name|globalId
operator|=
name|globalId
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|FileNodePtr
argument_list|>
name|getManifestList
parameter_list|()
block|{
return|return
name|manifestList
return|;
block|}
specifier|public
name|void
name|setManifestList
parameter_list|(
name|List
argument_list|<
name|FileNodePtr
argument_list|>
name|manifestList
parameter_list|)
block|{
name|this
operator|.
name|manifestList
operator|=
name|manifestList
expr_stmt|;
block|}
specifier|public
name|ExtendedGUID
name|getGosid
parameter_list|()
block|{
return|return
name|gosid
return|;
block|}
specifier|public
name|void
name|setGosid
parameter_list|(
name|ExtendedGUID
name|gosid
parameter_list|)
block|{
name|this
operator|.
name|gosid
operator|=
name|gosid
expr_stmt|;
block|}
specifier|public
name|ExtendedGUID
name|getDependent
parameter_list|()
block|{
return|return
name|dependent
return|;
block|}
specifier|public
name|void
name|setDependent
parameter_list|(
name|ExtendedGUID
name|dependent
parameter_list|)
block|{
name|this
operator|.
name|dependent
operator|=
name|dependent
expr_stmt|;
block|}
specifier|public
name|Revision
parameter_list|()
block|{      }
specifier|public
name|Revision
parameter_list|(
name|Map
argument_list|<
name|Long
argument_list|,
name|GUID
argument_list|>
name|globalId
parameter_list|,
name|List
argument_list|<
name|FileNodePtr
argument_list|>
name|manifestList
parameter_list|,
name|ExtendedGUID
name|gosid
parameter_list|,
name|ExtendedGUID
name|dependent
parameter_list|)
block|{
name|this
operator|.
name|globalId
operator|=
name|globalId
expr_stmt|;
name|this
operator|.
name|manifestList
operator|=
name|manifestList
expr_stmt|;
name|this
operator|.
name|gosid
operator|=
name|gosid
expr_stmt|;
name|this
operator|.
name|dependent
operator|=
name|dependent
expr_stmt|;
block|}
block|}
end_class

end_unit

