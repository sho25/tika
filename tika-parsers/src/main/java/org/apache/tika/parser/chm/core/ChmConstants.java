begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|core
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_class
specifier|public
class|class
name|ChmConstants
block|{
comment|/* Prevents instantiation */
specifier|private
name|ChmConstants
parameter_list|()
block|{     }
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_CHARSET
init|=
name|IOUtils
operator|.
name|UTF_8
operator|.
name|name
argument_list|()
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ITSF
init|=
literal|"ITSF"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ITSP
init|=
literal|"ITSP"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PMGL
init|=
literal|"PMGL"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LZXC
init|=
literal|"LZXC"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CHM_PMGI_MARKER
init|=
literal|"PMGI"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|BYTE_ARRAY_LENGHT
init|=
literal|16
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_ITSF_V2_LEN
init|=
literal|0x58
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_ITSF_V3_LEN
init|=
literal|0x60
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_ITSP_V1_LEN
init|=
literal|0x54
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_PMGL_LEN
init|=
literal|0x14
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_PMGI_LEN
init|=
literal|0x08
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_LZXC_RESETTABLE_V1_LEN
init|=
literal|0x28
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_LZXC_MIN_LEN
init|=
literal|0x18
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_LZXC_V2_LEN
init|=
literal|0x1c
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_SIGNATURE_LEN
init|=
literal|4
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_VER_2
init|=
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_VER_3
init|=
literal|3
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_VER_1
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|CHM_WINDOW_SIZE_BLOCK
init|=
literal|0x8000
decl_stmt|;
comment|/* my hacking */
specifier|public
specifier|static
specifier|final
name|int
name|START_PMGL
init|=
literal|0xCC
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CONTROL_DATA
init|=
literal|"ControlData"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|RESET_TABLE
init|=
literal|"ResetTable"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CONTENT
init|=
literal|"Content"
decl_stmt|;
comment|/* some constants defined by the LZX specification */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_MIN_MATCH
init|=
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_MAX_MATCH
init|=
literal|257
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_NUM_CHARS
init|=
literal|256
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_BLOCKTYPE_INVALID
init|=
literal|0
decl_stmt|;
comment|/*                                                         * also blocktypes 4-7                                                         * invalid                                                         */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_BLOCKTYPE_VERBATIM
init|=
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_BLOCKTYPE_ALIGNED
init|=
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_BLOCKTYPE_UNCOMPRESSED
init|=
literal|3
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_PRETREE_NUM_ELEMENTS_BITS
init|=
literal|4
decl_stmt|;
comment|/* ??? */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_PRETREE_NUM_ELEMENTS
init|=
literal|20
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_ALIGNED_NUM_ELEMENTS
init|=
literal|8
decl_stmt|;
comment|/*                                                            * aligned offset tree                                                            * #elements                                                            */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_NUM_PRIMARY_LENGTHS
init|=
literal|7
decl_stmt|;
comment|/*                                                           * this one missing                                                           * from spec!                                                           */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_NUM_SECONDARY_LENGTHS
init|=
literal|249
decl_stmt|;
comment|/*                                                               * length tree                                                               * #elements                                                               */
comment|/* LZX huffman defines: tweak tablebits as desired */
specifier|public
specifier|static
specifier|final
name|int
name|LZX_PRETREE_MAXSYMBOLS
init|=
name|LZX_PRETREE_NUM_ELEMENTS
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_PRETREE_TABLEBITS
init|=
literal|6
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_MAINTREE_MAXSYMBOLS
init|=
name|LZX_NUM_CHARS
operator|+
literal|50
operator|*
literal|8
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_MAIN_MAXSYMBOLS
init|=
name|LZX_NUM_CHARS
operator|*
literal|2
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_MAINTREE_TABLEBITS
init|=
literal|12
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_LENGTH_MAXSYMBOLS
init|=
name|LZX_NUM_SECONDARY_LENGTHS
operator|+
literal|1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_LENGTH_TABLEBITS
init|=
literal|12
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_ALIGNED_MAXSYMBOLS
init|=
name|LZX_ALIGNED_NUM_ELEMENTS
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_ALIGNED_TABLEBITS
init|=
literal|7
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|int
name|LZX_LENTABLE_SAFETY
init|=
literal|64
decl_stmt|;
specifier|public
specifier|static
name|short
index|[]
name|EXTRA_BITS
init|=
block|{
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|1
block|,
literal|1
block|,
literal|2
block|,
literal|2
block|,
literal|3
block|,
literal|3
block|,
literal|4
block|,
literal|4
block|,
literal|5
block|,
literal|5
block|,
literal|6
block|,
literal|6
block|,
literal|7
block|,
literal|7
block|,
literal|8
block|,
literal|8
block|,
literal|9
block|,
literal|9
block|,
literal|10
block|,
literal|10
block|,
literal|11
block|,
literal|11
block|,
literal|12
block|,
literal|12
block|,
literal|13
block|,
literal|13
block|,
literal|14
block|,
literal|14
block|,
literal|15
block|,
literal|15
block|,
literal|16
block|,
literal|16
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|,
literal|17
block|}
decl_stmt|;
specifier|public
specifier|static
name|int
index|[]
name|POSITION_BASE
init|=
block|{
literal|0
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,
literal|4
block|,
literal|6
block|,
literal|8
block|,
literal|12
block|,
literal|16
block|,
literal|24
block|,
literal|32
block|,
literal|48
block|,
literal|64
block|,
literal|96
block|,
literal|128
block|,
literal|192
block|,
literal|256
block|,
literal|384
block|,
literal|512
block|,
literal|768
block|,
literal|1024
block|,
literal|1536
block|,
literal|2048
block|,
literal|3072
block|,
literal|4096
block|,
literal|6144
block|,
literal|8192
block|,
literal|12288
block|,
literal|16384
block|,
literal|24576
block|,
literal|32768
block|,
literal|49152
block|,
literal|65536
block|,
literal|98304
block|,
literal|131072
block|,
literal|196608
block|,
literal|262144
block|,
literal|393216
block|,
literal|524288
block|,
literal|655360
block|,
literal|786432
block|,
literal|917504
block|,
literal|1048576
block|,
literal|1179648
block|,
literal|1310720
block|,
literal|1441792
block|,
literal|1572864
block|,
literal|1703936
block|,
literal|1835008
block|,
literal|1966080
block|,
literal|2097152
block|}
decl_stmt|;
block|}
end_class

end_unit

