begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|xslf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|POIXMLDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|POIXMLProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|POIXMLTextExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|exceptions
operator|.
name|OpenXML4JException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|opc
operator|.
name|OPCPackage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|opc
operator|.
name|PackageAccess
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|OOXMLWordAndPowerPointTextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|ParagraphProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|RunProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|xwpf
operator|.
name|XWPFEventBasedWordExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlException
import|;
end_import

begin_class
specifier|public
class|class
name|XSLFEventBasedPowerPointExtractor
extends|extends
name|POIXMLTextExtractor
block|{
specifier|private
name|OPCPackage
name|container
decl_stmt|;
specifier|private
name|POIXMLProperties
name|properties
decl_stmt|;
specifier|public
name|XSLFEventBasedPowerPointExtractor
parameter_list|(
name|String
name|path
parameter_list|)
throws|throws
name|XmlException
throws|,
name|OpenXML4JException
throws|,
name|IOException
block|{
name|this
argument_list|(
name|OPCPackage
operator|.
name|open
argument_list|(
name|path
argument_list|,
name|PackageAccess
operator|.
name|READ
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|XSLFEventBasedPowerPointExtractor
parameter_list|(
name|OPCPackage
name|container
parameter_list|)
throws|throws
name|XmlException
throws|,
name|OpenXML4JException
throws|,
name|IOException
block|{
name|super
argument_list|(
operator|(
name|POIXMLDocument
operator|)
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|container
operator|=
name|container
expr_stmt|;
name|this
operator|.
name|properties
operator|=
operator|new
name|POIXMLProperties
argument_list|(
name|container
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|<
literal|1
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Use:"
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"  XSLFEventBasedPowerPointExtractor<filename.pptx>"
argument_list|)
expr_stmt|;
name|System
operator|.
name|exit
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
name|XWPFEventBasedWordExtractor
name|extractor
init|=
operator|new
name|XWPFEventBasedWordExtractor
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|extractor
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|extractor
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|OPCPackage
name|getPackage
parameter_list|()
block|{
return|return
name|this
operator|.
name|container
return|;
block|}
specifier|public
name|POIXMLProperties
operator|.
name|CoreProperties
name|getCoreProperties
parameter_list|()
block|{
return|return
name|this
operator|.
name|properties
operator|.
name|getCoreProperties
argument_list|()
return|;
block|}
specifier|public
name|POIXMLProperties
operator|.
name|ExtendedProperties
name|getExtendedProperties
parameter_list|()
block|{
return|return
name|this
operator|.
name|properties
operator|.
name|getExtendedProperties
argument_list|()
return|;
block|}
specifier|public
name|POIXMLProperties
operator|.
name|CustomProperties
name|getCustomProperties
parameter_list|()
block|{
return|return
name|this
operator|.
name|properties
operator|.
name|getCustomProperties
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getText
parameter_list|()
block|{
comment|//TODO
return|return
literal|""
return|;
block|}
specifier|private
class|class
name|XSLFToTextContentHandler
implements|implements
name|OOXMLWordAndPowerPointTextHandler
operator|.
name|XWPFBodyContentsHandler
block|{
specifier|private
specifier|final
name|StringBuilder
name|buffer
decl_stmt|;
specifier|public
name|XSLFToTextContentHandler
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|)
block|{
name|this
operator|.
name|buffer
operator|=
name|buffer
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|(
name|RunProperties
name|runProperties
parameter_list|,
name|String
name|contents
parameter_list|)
block|{
name|buffer
operator|.
name|append
argument_list|(
name|contents
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|hyperlinkStart
parameter_list|(
name|String
name|link
parameter_list|)
block|{
comment|//no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|hyperlinkEnd
parameter_list|()
block|{
comment|//no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|startParagraph
parameter_list|(
name|ParagraphProperties
name|paragraphProperties
parameter_list|)
block|{
comment|//no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|endParagraph
parameter_list|()
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startTable
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endTable
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|startTableRow
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endTableRow
parameter_list|()
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startTableCell
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endTableCell
parameter_list|()
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"\t"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startSDT
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endSDT
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|startEditedSection
parameter_list|(
name|String
name|editor
parameter_list|,
name|Date
name|date
parameter_list|,
name|OOXMLWordAndPowerPointTextHandler
operator|.
name|EditType
name|editType
parameter_list|)
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endEditedSection
parameter_list|()
block|{          }
annotation|@
name|Override
specifier|public
name|boolean
name|getIncludeDeletedText
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|footnoteReference
parameter_list|(
name|String
name|id
parameter_list|)
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endnoteReference
parameter_list|(
name|String
name|id
parameter_list|)
block|{          }
annotation|@
name|Override
specifier|public
name|boolean
name|getIncludeMoveFromText
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|embeddedOLERef
parameter_list|(
name|String
name|refId
parameter_list|)
block|{
comment|//no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|embeddedPicRef
parameter_list|(
name|String
name|picFileName
parameter_list|,
name|String
name|picDescription
parameter_list|)
block|{
comment|//no-op
block|}
annotation|@
name|Override
specifier|public
name|void
name|startBookmark
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|name
parameter_list|)
block|{          }
annotation|@
name|Override
specifier|public
name|void
name|endBookmark
parameter_list|(
name|String
name|id
parameter_list|)
block|{          }
block|}
block|}
end_class

end_unit

