begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hslf
operator|.
name|extractor
operator|.
name|PowerPointExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hslf
operator|.
name|model
operator|.
name|OLEShape
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hslf
operator|.
name|usermodel
operator|.
name|ObjectData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|poifs
operator|.
name|filesystem
operator|.
name|NPOIFSFileSystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|HSLFExtractor
extends|extends
name|AbstractPOIFSExtractor
block|{
specifier|public
name|HSLFExtractor
parameter_list|(
name|ParseContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|parse
parameter_list|(
name|NPOIFSFileSystem
name|filesystem
parameter_list|,
name|XHTMLContentHandler
name|xhtml
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|PowerPointExtractor
name|powerPointExtractor
init|=
operator|new
name|PowerPointExtractor
argument_list|(
name|filesystem
argument_list|)
decl_stmt|;
name|powerPointExtractor
operator|.
name|setSlidesByDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|powerPointExtractor
operator|.
name|setNotesByDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|powerPointExtractor
operator|.
name|setCommentsByDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|powerPointExtractor
operator|.
name|setMasterByDefault
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|element
argument_list|(
literal|"p"
argument_list|,
name|powerPointExtractor
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|OLEShape
argument_list|>
name|shapeList
init|=
name|powerPointExtractor
operator|.
name|getOLEShapes
argument_list|()
decl_stmt|;
for|for
control|(
name|OLEShape
name|shape
range|:
name|shapeList
control|)
block|{
name|ObjectData
name|data
init|=
name|shape
operator|.
name|getObjectData
argument_list|()
decl_stmt|;
if|if
condition|(
name|data
operator|!=
literal|null
condition|)
block|{
name|TikaInputStream
name|stream
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
name|data
operator|.
name|getData
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|String
name|mediaType
init|=
literal|null
decl_stmt|;
if|if
condition|(
literal|"Excel.Chart.8"
operator|.
name|equals
argument_list|(
name|shape
operator|.
name|getProgID
argument_list|()
argument_list|)
condition|)
block|{
name|mediaType
operator|=
literal|"application/vnd.ms-excel"
expr_stmt|;
block|}
name|handleEmbeddedResource
argument_list|(
name|stream
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|shape
operator|.
name|getObjectID
argument_list|()
argument_list|)
argument_list|,
name|mediaType
argument_list|,
name|xhtml
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
end_class

end_unit

