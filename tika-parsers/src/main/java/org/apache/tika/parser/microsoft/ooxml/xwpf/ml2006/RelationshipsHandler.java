begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
operator|.
name|xwpf
operator|.
name|ml2006
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|opc
operator|.
name|ContentTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|opc
operator|.
name|TargetMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
class|class
name|RelationshipsHandler
extends|extends
name|AbstractPartHandler
block|{
specifier|final
specifier|static
name|String
name|REL_NS
init|=
literal|"http://schemas.openxmlformats.org/package/2006/relationships"
decl_stmt|;
specifier|private
specifier|final
name|RelationshipsManager
name|relationshipsManager
decl_stmt|;
specifier|public
name|RelationshipsHandler
parameter_list|(
name|RelationshipsManager
name|relationshipsManager
parameter_list|)
block|{
name|this
operator|.
name|relationshipsManager
operator|=
name|relationshipsManager
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startDocument
parameter_list|()
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|endDocument
parameter_list|()
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|startPrefixMapping
parameter_list|(
name|String
name|prefix
parameter_list|,
name|String
name|uri
parameter_list|)
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|endPrefixMapping
parameter_list|(
name|String
name|prefix
parameter_list|)
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|uri
operator|.
name|equals
argument_list|(
name|REL_NS
argument_list|)
condition|)
block|{
if|if
condition|(
name|localName
operator|.
name|equals
argument_list|(
literal|"Relationship"
argument_list|)
condition|)
block|{
name|String
name|id
init|=
name|atts
operator|.
name|getValue
argument_list|(
literal|""
argument_list|,
literal|"Id"
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|atts
operator|.
name|getValue
argument_list|(
literal|""
argument_list|,
literal|"Type"
argument_list|)
decl_stmt|;
name|String
name|target
init|=
name|atts
operator|.
name|getValue
argument_list|(
literal|""
argument_list|,
literal|"Target"
argument_list|)
decl_stmt|;
name|String
name|targetModeString
init|=
name|atts
operator|.
name|getValue
argument_list|(
literal|""
argument_list|,
literal|"TargetMode"
argument_list|)
decl_stmt|;
name|TargetMode
name|targetMode
init|=
literal|"EXTERNAL"
operator|.
name|equals
argument_list|(
name|targetModeString
argument_list|)
condition|?
name|TargetMode
operator|.
name|EXTERNAL
else|:
name|TargetMode
operator|.
name|INTERNAL
decl_stmt|;
name|relationshipsManager
operator|.
name|addRelationship
argument_list|(
name|getName
argument_list|()
argument_list|,
name|id
argument_list|,
name|type
argument_list|,
name|target
argument_list|,
name|targetMode
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|)
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|ignorableWhitespace
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{      }
annotation|@
name|Override
specifier|public
name|String
name|getContentType
parameter_list|()
block|{
return|return
name|ContentTypes
operator|.
name|RELATIONSHIPS_PART
return|;
block|}
block|}
end_class

end_unit

