begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|ooxml
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|openxml4j
operator|.
name|opc
operator|.
name|PackagePart
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|xslf
operator|.
name|XSLFSlideShow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|xslf
operator|.
name|extractor
operator|.
name|XSLFPowerPointExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|xslf
operator|.
name|usermodel
operator|.
name|XMLSlideShow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|xslf
operator|.
name|usermodel
operator|.
name|XSLFSlide
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|xmlbeans
operator|.
name|XmlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|drawingml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTRegularTextRun
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|drawingml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTTextBody
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|drawingml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTTextParagraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTComment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTCommentList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTGroupShape
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTNotesSlide
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTShape
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTSlide
import|;
end_import

begin_import
import|import
name|org
operator|.
name|openxmlformats
operator|.
name|schemas
operator|.
name|presentationml
operator|.
name|x2006
operator|.
name|main
operator|.
name|CTSlideIdListEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|XSLFPowerPointExtractorDecorator
extends|extends
name|AbstractOOXMLExtractor
block|{
specifier|public
name|XSLFPowerPointExtractorDecorator
parameter_list|(
name|XSLFPowerPointExtractor
name|extractor
parameter_list|)
block|{
name|super
argument_list|(
name|extractor
argument_list|,
literal|"application/vnd.openxmlformats-officedocument.presentationml.presentation"
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see org.apache.poi.xslf.extractor.XSLFPowerPointExtractor#getText()      */
annotation|@
name|Override
specifier|protected
name|void
name|buildXHTML
parameter_list|(
name|XHTMLContentHandler
name|xhtml
parameter_list|)
throws|throws
name|SAXException
throws|,
name|XmlException
throws|,
name|IOException
block|{
name|XSLFSlideShow
name|slideShow
init|=
operator|(
name|XSLFSlideShow
operator|)
name|extractor
operator|.
name|getDocument
argument_list|()
decl_stmt|;
name|XMLSlideShow
name|xmlSlideShow
init|=
operator|new
name|XMLSlideShow
argument_list|(
name|slideShow
argument_list|)
decl_stmt|;
name|XSLFSlide
index|[]
name|slides
init|=
name|xmlSlideShow
operator|.
name|getSlides
argument_list|()
decl_stmt|;
for|for
control|(
name|XSLFSlide
name|slide
range|:
name|slides
control|)
block|{
name|CTSlide
name|rawSlide
init|=
name|slide
operator|.
name|_getCTSlide
argument_list|()
decl_stmt|;
name|CTSlideIdListEntry
name|slideId
init|=
name|slide
operator|.
name|_getCTSlideId
argument_list|()
decl_stmt|;
name|CTNotesSlide
name|notes
init|=
name|xmlSlideShow
operator|.
name|_getXSLFSlideShow
argument_list|()
operator|.
name|getNotes
argument_list|(
name|slideId
argument_list|)
decl_stmt|;
name|CTCommentList
name|comments
init|=
name|xmlSlideShow
operator|.
name|_getXSLFSlideShow
argument_list|()
operator|.
name|getSlideComments
argument_list|(
name|slideId
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startElement
argument_list|(
literal|"div"
argument_list|)
expr_stmt|;
name|extractShapeContent
argument_list|(
name|rawSlide
operator|.
name|getCSld
argument_list|()
operator|.
name|getSpTree
argument_list|()
argument_list|,
name|xhtml
argument_list|)
expr_stmt|;
if|if
condition|(
name|comments
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|CTComment
name|comment
range|:
name|comments
operator|.
name|getCmArray
argument_list|()
control|)
block|{
name|xhtml
operator|.
name|element
argument_list|(
literal|"p"
argument_list|,
name|comment
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|notes
operator|!=
literal|null
condition|)
block|{
name|extractShapeContent
argument_list|(
name|notes
operator|.
name|getCSld
argument_list|()
operator|.
name|getSpTree
argument_list|()
argument_list|,
name|xhtml
argument_list|)
expr_stmt|;
block|}
name|xhtml
operator|.
name|endElement
argument_list|(
literal|"div"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|extractShapeContent
parameter_list|(
name|CTGroupShape
name|gs
parameter_list|,
name|XHTMLContentHandler
name|xhtml
parameter_list|)
throws|throws
name|SAXException
block|{
name|CTShape
index|[]
name|shapes
init|=
name|gs
operator|.
name|getSpArray
argument_list|()
decl_stmt|;
for|for
control|(
name|CTShape
name|shape
range|:
name|shapes
control|)
block|{
name|CTTextBody
name|textBody
init|=
name|shape
operator|.
name|getTxBody
argument_list|()
decl_stmt|;
if|if
condition|(
name|textBody
operator|!=
literal|null
condition|)
block|{
name|CTTextParagraph
index|[]
name|paras
init|=
name|textBody
operator|.
name|getPArray
argument_list|()
decl_stmt|;
for|for
control|(
name|CTTextParagraph
name|textParagraph
range|:
name|paras
control|)
block|{
name|CTRegularTextRun
index|[]
name|textRuns
init|=
name|textParagraph
operator|.
name|getRArray
argument_list|()
decl_stmt|;
for|for
control|(
name|CTRegularTextRun
name|textRun
range|:
name|textRuns
control|)
block|{
name|xhtml
operator|.
name|element
argument_list|(
literal|"p"
argument_list|,
name|textRun
operator|.
name|getT
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|PackagePart
argument_list|>
name|getMainDocumentParts
parameter_list|()
block|{
comment|// TODO
return|return
operator|new
name|ArrayList
argument_list|<
name|PackagePart
argument_list|>
argument_list|()
return|;
block|}
block|}
end_class

end_unit

