begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|journal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
specifier|public
class|class
name|GrobidConfig
block|{
specifier|public
specifier|static
specifier|final
name|String
name|GROBID_PREFIX
init|=
literal|"grobid:"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|HEADER_METADATA_PREFIX
init|=
literal|"header_"
decl_stmt|;
specifier|private
name|String
name|grobidHome
decl_stmt|;
specifier|private
name|String
name|grobidProperties
decl_stmt|;
specifier|public
name|GrobidConfig
parameter_list|()
block|{
name|init
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"GrobidExtractor.properties"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|init
parameter_list|(
name|InputStream
name|in
parameter_list|)
block|{
if|if
condition|(
name|in
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
block|{
name|props
operator|.
name|load
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
try|try
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|setGrobidHome
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
literal|"grobid.home"
argument_list|,
name|getGrobidHome
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|setGrobidProperties
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
literal|"grobid.properties"
argument_list|,
name|getGrobidProperties
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getGrobidHome
parameter_list|()
block|{
return|return
name|grobidHome
return|;
block|}
specifier|public
name|void
name|setGrobidHome
parameter_list|(
name|String
name|grobidHome
parameter_list|)
block|{
name|this
operator|.
name|grobidHome
operator|=
name|grobidHome
expr_stmt|;
block|}
specifier|public
name|String
name|getGrobidProperties
parameter_list|()
block|{
return|return
name|grobidProperties
return|;
block|}
specifier|public
name|void
name|setGrobidProperties
parameter_list|(
name|String
name|grobidProperties
parameter_list|)
block|{
name|this
operator|.
name|grobidProperties
operator|=
name|grobidProperties
expr_stmt|;
block|}
block|}
end_class

end_unit

