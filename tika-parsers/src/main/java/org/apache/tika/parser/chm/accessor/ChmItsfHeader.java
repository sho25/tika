begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|accessor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|assertion
operator|.
name|ChmAssert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|core
operator|.
name|ChmConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|chm
operator|.
name|exception
operator|.
name|ChmParsingException
import|;
end_import

begin_comment
comment|/**  * The Header 0000: char[4] 'ITSF' 0004: DWORD 3 (Version number) 0008: DWORD  * Total header length, including header section table and following data. 000C:  * DWORD 1 (unknown) 0010: DWORD a timestamp 0014: DWORD Windows Language ID  * 0018: GUID {7C01FD10-7BAA-11D0-9E0C-00A0-C922-E6EC} 0028: GUID  * {7C01FD11-7BAA-11D0-9E0C-00A0-C922-E6EC} Note: a GUID is $10 bytes, arranged  * as 1 DWORD, 2 WORDs, and 8 BYTEs. 0000: QWORD Offset of section from  * beginning of file 0008: QWORD Length of section Following the header section  * table is 8 bytes of additional header data. In Version 2 files, this data is  * not there and the content section starts immediately after the directory.  *   * {@link http  * ://translated.by/you/microsoft-s-html-help-chm-format-incomplete/original  * /?show-translation-form=1}  *   */
end_comment

begin_comment
comment|/* structure of ITSF headers */
end_comment

begin_class
specifier|public
class|class
name|ChmItsfHeader
implements|implements
name|ChmAccessor
argument_list|<
name|ChmItsfHeader
argument_list|>
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|2215291838533213826L
decl_stmt|;
specifier|private
name|byte
index|[]
name|signature
init|=
operator|new
name|String
argument_list|(
literal|"ITSF"
argument_list|)
operator|.
name|getBytes
argument_list|()
decl_stmt|;
comment|/* 0 (ITSF) */
specifier|private
name|int
name|version
decl_stmt|;
comment|/* 4 */
specifier|private
name|int
name|header_len
decl_stmt|;
comment|/* 8 */
specifier|private
name|int
name|unknown_000c
decl_stmt|;
comment|/* c */
specifier|private
name|long
name|last_modified
decl_stmt|;
comment|/* 10 */
specifier|private
name|long
name|lang_id
decl_stmt|;
comment|/* 14 */
specifier|private
name|byte
index|[]
name|dir_uuid
init|=
operator|new
name|byte
index|[
name|ChmConstants
operator|.
name|BYTE_ARRAY_LENGHT
index|]
decl_stmt|;
comment|/* 18 */
specifier|private
name|byte
index|[]
name|stream_uuid
init|=
operator|new
name|byte
index|[
name|ChmConstants
operator|.
name|BYTE_ARRAY_LENGHT
index|]
decl_stmt|;
comment|/* 28 */
specifier|private
name|long
name|unknown_offset
decl_stmt|;
comment|/* 38 */
specifier|private
name|long
name|unknown_len
decl_stmt|;
comment|/* 40 */
specifier|private
name|long
name|dir_offset
decl_stmt|;
comment|/* 48 */
specifier|private
name|long
name|dir_len
decl_stmt|;
comment|/* 50 */
specifier|private
name|long
name|data_offset
decl_stmt|;
comment|/* 58 (Not present before V3) */
comment|/* local usage */
specifier|private
name|int
name|dataRemained
decl_stmt|;
specifier|private
name|int
name|currentPlace
init|=
literal|0
decl_stmt|;
comment|/**      * Prints the values of ChmfHeader      */
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
operator|new
name|String
argument_list|(
name|getSignature
argument_list|()
argument_list|)
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getVersion
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getHeaderLen
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getUnknown_000c
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getLastModified
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getLangId
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getDir_uuid
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getStream_uuid
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getUnknownOffset
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getUnknownLen
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getDirOffset
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getDirLen
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|getDataOffset
argument_list|()
operator|+
literal|" "
argument_list|)
expr_stmt|;
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * Returns a signature of itsf header      *       * @return itsf header      */
specifier|public
name|byte
index|[]
name|getSignature
parameter_list|()
block|{
return|return
name|signature
return|;
block|}
comment|/**      * Sets itsf header signature      *       * @param signature      */
specifier|protected
name|void
name|setSignature
parameter_list|(
name|byte
index|[]
name|signature
parameter_list|)
block|{
name|this
operator|.
name|signature
operator|=
name|signature
expr_stmt|;
block|}
comment|/**      * Returns itsf header version      *       * @return itsf version      */
specifier|public
name|int
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
comment|/**      * Sets itsf version      *       * @param version      */
specifier|protected
name|void
name|setVersion
parameter_list|(
name|int
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
comment|/**      * Returns itsf header length      *       * @return length      */
specifier|public
name|int
name|getHeaderLen
parameter_list|()
block|{
return|return
name|header_len
return|;
block|}
comment|/**      * Sets itsf header length      *       * @param header_len      */
specifier|protected
name|void
name|setHeaderLen
parameter_list|(
name|int
name|header_len
parameter_list|)
block|{
name|this
operator|.
name|header_len
operator|=
name|header_len
expr_stmt|;
block|}
comment|/**      * Returns unknown_00c value      *       * @return unknown_00c      */
specifier|public
name|int
name|getUnknown_000c
parameter_list|()
block|{
return|return
name|unknown_000c
return|;
block|}
comment|/**      * Sets unknown_00c      *       * @param unknown_000c      */
specifier|protected
name|void
name|setUnknown_000c
parameter_list|(
name|int
name|unknown_000c
parameter_list|)
block|{
name|this
operator|.
name|unknown_000c
operator|=
name|unknown_000c
expr_stmt|;
block|}
comment|/**      * Returns last modified date of the chm file      *       * @return last modified date as long      */
specifier|public
name|long
name|getLastModified
parameter_list|()
block|{
return|return
name|last_modified
return|;
block|}
comment|/**      * Sets last modified date of the chm file      *       * @param last_modified      */
specifier|protected
name|void
name|setLastModified
parameter_list|(
name|long
name|last_modified
parameter_list|)
block|{
name|this
operator|.
name|last_modified
operator|=
name|last_modified
expr_stmt|;
block|}
comment|/**      * Returns language ID      *       * @return language_id      */
specifier|public
name|long
name|getLangId
parameter_list|()
block|{
return|return
name|lang_id
return|;
block|}
comment|/**      * Sets language_id      *       * @param lang_id      */
specifier|protected
name|void
name|setLangId
parameter_list|(
name|long
name|lang_id
parameter_list|)
block|{
name|this
operator|.
name|lang_id
operator|=
name|lang_id
expr_stmt|;
block|}
comment|/**      * Returns directory uuid      *       * @return dir_uuid      */
specifier|public
name|byte
index|[]
name|getDir_uuid
parameter_list|()
block|{
return|return
name|dir_uuid
return|;
block|}
comment|/**      * Sets directory uuid      *       * @param dir_uuid      */
specifier|protected
name|void
name|setDir_uuid
parameter_list|(
name|byte
index|[]
name|dir_uuid
parameter_list|)
block|{
name|this
operator|.
name|dir_uuid
operator|=
name|dir_uuid
expr_stmt|;
block|}
comment|/**      * Returns stream uuid      *       * @return stream_uuid      */
specifier|public
name|byte
index|[]
name|getStream_uuid
parameter_list|()
block|{
return|return
name|stream_uuid
return|;
block|}
comment|/**      * Sets stream uuid      *       * @param stream_uuid      */
specifier|protected
name|void
name|setStream_uuid
parameter_list|(
name|byte
index|[]
name|stream_uuid
parameter_list|)
block|{
name|this
operator|.
name|stream_uuid
operator|=
name|stream_uuid
expr_stmt|;
block|}
comment|/**      * Returns unknown offset      *       * @return unknown_offset      */
specifier|public
name|long
name|getUnknownOffset
parameter_list|()
block|{
return|return
name|unknown_offset
return|;
block|}
comment|/**      * Sets unknown offset      *       * @param unknown_offset      */
specifier|protected
name|void
name|setUnknownOffset
parameter_list|(
name|long
name|unknown_offset
parameter_list|)
block|{
name|this
operator|.
name|unknown_offset
operator|=
name|unknown_offset
expr_stmt|;
block|}
comment|/**      * Returns unknown length      *       * @return unknown_length      */
specifier|public
name|long
name|getUnknownLen
parameter_list|()
block|{
return|return
name|unknown_len
return|;
block|}
comment|/**      * Sets unknown length      *       * @param unknown_len      */
specifier|protected
name|void
name|setUnknownLen
parameter_list|(
name|long
name|unknown_len
parameter_list|)
block|{
name|this
operator|.
name|unknown_len
operator|=
name|unknown_len
expr_stmt|;
block|}
comment|/**      * Returns directory offset      *       * @return directory_offset      */
specifier|public
name|long
name|getDirOffset
parameter_list|()
block|{
return|return
name|dir_offset
return|;
block|}
comment|/**      * Sets directory offset      *       * @param dir_offset      */
specifier|protected
name|void
name|setDirOffset
parameter_list|(
name|long
name|dir_offset
parameter_list|)
block|{
name|this
operator|.
name|dir_offset
operator|=
name|dir_offset
expr_stmt|;
block|}
comment|/**      * Returns directory length      *       * @return directory_offset      */
specifier|public
name|long
name|getDirLen
parameter_list|()
block|{
return|return
name|dir_len
return|;
block|}
comment|/**      * Sets directory length      *       * @param dir_len      */
specifier|protected
name|void
name|setDirLen
parameter_list|(
name|long
name|dir_len
parameter_list|)
block|{
name|this
operator|.
name|dir_len
operator|=
name|dir_len
expr_stmt|;
block|}
comment|/**      * Returns data offset      *       * @return data_offset      */
specifier|public
name|long
name|getDataOffset
parameter_list|()
block|{
return|return
name|data_offset
return|;
block|}
comment|/**      * Sets data offset      *       * @param data_offset      */
specifier|protected
name|void
name|setDataOffset
parameter_list|(
name|long
name|data_offset
parameter_list|)
block|{
name|this
operator|.
name|data_offset
operator|=
name|data_offset
expr_stmt|;
block|}
comment|/**      * Copies 4 first bytes of the byte[]      *       * @param data      * @param chmItsfHeader      * @param count      */
specifier|private
name|void
name|unmarshalCharArray
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|ChmItsfHeader
name|chmItsfHeader
parameter_list|,
name|int
name|count
parameter_list|)
block|{
name|ChmAssert
operator|.
name|assertChmAccessorParameters
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|data
argument_list|,
literal|0
argument_list|,
name|chmItsfHeader
operator|.
name|signature
argument_list|,
literal|0
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCurrentPlace
argument_list|(
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|setDataRemained
argument_list|(
name|this
operator|.
name|getDataRemained
argument_list|()
operator|-
name|count
argument_list|)
expr_stmt|;
block|}
comment|/**      * Copies X bytes of source byte[] to the dest byte[]      *       * @param data      * @param dest      * @param count      * @return      */
specifier|private
name|byte
index|[]
name|unmarshalUuid
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|byte
index|[]
name|dest
parameter_list|,
name|int
name|count
parameter_list|)
block|{
name|System
operator|.
name|arraycopy
argument_list|(
name|data
argument_list|,
name|this
operator|.
name|getCurrentPlace
argument_list|()
argument_list|,
name|dest
argument_list|,
literal|0
argument_list|,
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCurrentPlace
argument_list|(
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
name|count
argument_list|)
expr_stmt|;
name|this
operator|.
name|setDataRemained
argument_list|(
name|this
operator|.
name|getDataRemained
argument_list|()
operator|-
name|count
argument_list|)
expr_stmt|;
return|return
name|dest
return|;
block|}
comment|/**      * Takes 8 bytes and reverses them      *       * @param data      * @param dest      * @return      */
specifier|private
name|long
name|unmarshalUint64
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|long
name|dest
parameter_list|)
block|{
name|byte
index|[]
name|temp
init|=
operator|new
name|byte
index|[
literal|8
index|]
decl_stmt|;
name|int
name|i
decl_stmt|,
name|j
decl_stmt|;
if|if
condition|(
literal|8
operator|>
name|this
operator|.
name|getDataRemained
argument_list|()
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"8> this.getDataRemained()"
argument_list|)
throw|;
for|for
control|(
name|i
operator|=
literal|8
operator|,
name|j
operator|=
literal|7
init|;
name|i
operator|>
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|temp
index|[
name|j
operator|--
index|]
operator|=
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
index|]
expr_stmt|;
name|this
operator|.
name|setCurrentPlace
argument_list|(
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
name|dest
operator|=
operator|new
name|BigInteger
argument_list|(
name|temp
argument_list|)
operator|.
name|longValue
argument_list|()
expr_stmt|;
name|this
operator|.
name|setDataRemained
argument_list|(
name|this
operator|.
name|getDataRemained
argument_list|()
operator|-
literal|8
argument_list|)
expr_stmt|;
return|return
name|dest
return|;
block|}
specifier|private
name|int
name|unmarshalInt32
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|int
name|dest
parameter_list|)
block|{
name|ChmAssert
operator|.
name|assertByteArrayNotNull
argument_list|(
name|data
argument_list|)
expr_stmt|;
if|if
condition|(
literal|4
operator|>
name|this
operator|.
name|getDataRemained
argument_list|()
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"4> dataLenght"
argument_list|)
throw|;
name|dest
operator|=
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
index|]
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|1
index|]
operator|<<
literal|8
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|2
index|]
operator|<<
literal|16
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|3
index|]
operator|<<
literal|24
expr_stmt|;
name|this
operator|.
name|setCurrentPlace
argument_list|(
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
name|this
operator|.
name|setDataRemained
argument_list|(
name|this
operator|.
name|getDataRemained
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
return|return
name|dest
return|;
block|}
specifier|private
name|long
name|unmarshalUInt32
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|long
name|dest
parameter_list|)
block|{
name|ChmAssert
operator|.
name|assertByteArrayNotNull
argument_list|(
name|data
argument_list|)
expr_stmt|;
if|if
condition|(
literal|4
operator|>
name|getDataRemained
argument_list|()
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"4> dataLenght"
argument_list|)
throw|;
name|dest
operator|=
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
index|]
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|1
index|]
operator|<<
literal|8
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|2
index|]
operator|<<
literal|16
operator||
name|data
index|[
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|3
index|]
operator|<<
literal|24
expr_stmt|;
name|setDataRemained
argument_list|(
name|this
operator|.
name|getDataRemained
argument_list|()
operator|-
literal|4
argument_list|)
expr_stmt|;
name|this
operator|.
name|setCurrentPlace
argument_list|(
name|this
operator|.
name|getCurrentPlace
argument_list|()
operator|+
literal|4
argument_list|)
expr_stmt|;
return|return
name|dest
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{     }
comment|/**      * Sets data remained to be processed      *       * @param dataRemained      */
specifier|private
name|void
name|setDataRemained
parameter_list|(
name|int
name|dataRemained
parameter_list|)
block|{
name|this
operator|.
name|dataRemained
operator|=
name|dataRemained
expr_stmt|;
block|}
comment|/**      * Returns data remained      *       * @return data_remainned      */
specifier|private
name|int
name|getDataRemained
parameter_list|()
block|{
return|return
name|dataRemained
return|;
block|}
comment|/**      * Sets current place in the byte[]      *       * @param currentPlace      */
specifier|private
name|void
name|setCurrentPlace
parameter_list|(
name|int
name|currentPlace
parameter_list|)
block|{
name|this
operator|.
name|currentPlace
operator|=
name|currentPlace
expr_stmt|;
block|}
comment|/**      * Returns current place in the byte[]      *       * @return current place      */
specifier|private
name|int
name|getCurrentPlace
parameter_list|()
block|{
return|return
name|currentPlace
return|;
block|}
comment|// @Override
specifier|public
name|void
name|parse
parameter_list|(
name|byte
index|[]
name|data
parameter_list|,
name|ChmItsfHeader
name|chmItsfHeader
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|length
argument_list|<
name|ChmConstants
operator|.
name|CHM_ITSF_V2_LEN
operator|||
name|data
operator|.
name|length
argument_list|>
name|ChmConstants
operator|.
name|CHM_ITSF_V3_LEN
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"we only know how to deal with the 0x58 and 0x60 byte structures"
argument_list|)
throw|;
name|chmItsfHeader
operator|.
name|setDataRemained
argument_list|(
name|data
operator|.
name|length
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|unmarshalCharArray
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
argument_list|,
name|ChmConstants
operator|.
name|CHM_SIGNATURE_LEN
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setVersion
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalInt32
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getVersion
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setHeaderLen
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalInt32
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getHeaderLen
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setUnknown_000c
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalInt32
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getUnknown_000c
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setLastModified
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUInt32
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getLastModified
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setLangId
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUInt32
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getLangId
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setDir_uuid
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUuid
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getDir_uuid
argument_list|()
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setStream_uuid
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUuid
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getStream_uuid
argument_list|()
argument_list|,
literal|16
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setUnknownOffset
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUint64
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getUnknownOffset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setUnknownLen
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUint64
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getUnknownLen
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setDirOffset
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUint64
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getDirOffset
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|chmItsfHeader
operator|.
name|setDirLen
argument_list|(
name|chmItsfHeader
operator|.
name|unmarshalUint64
argument_list|(
name|data
argument_list|,
name|chmItsfHeader
operator|.
name|getDirLen
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
operator|new
name|String
argument_list|(
name|chmItsfHeader
operator|.
name|getSignature
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|ChmConstants
operator|.
name|ITSF
argument_list|)
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"seems not valid file"
argument_list|)
throw|;
if|if
condition|(
name|chmItsfHeader
operator|.
name|getVersion
argument_list|()
operator|==
name|ChmConstants
operator|.
name|CHM_VER_2
condition|)
block|{
if|if
condition|(
name|chmItsfHeader
operator|.
name|getHeaderLen
argument_list|()
operator|<
name|ChmConstants
operator|.
name|CHM_ITSF_V2_LEN
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"something wrong with header"
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|chmItsfHeader
operator|.
name|getVersion
argument_list|()
operator|==
name|ChmConstants
operator|.
name|CHM_VER_3
condition|)
block|{
if|if
condition|(
name|chmItsfHeader
operator|.
name|getHeaderLen
argument_list|()
operator|<
name|ChmConstants
operator|.
name|CHM_ITSF_V3_LEN
condition|)
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"unknown v3 header lenght"
argument_list|)
throw|;
block|}
else|else
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"unsupported chm format"
argument_list|)
throw|;
comment|/*          * now, if we have a V3 structure, unmarshal the rest, otherwise,          * compute it          */
if|if
condition|(
name|chmItsfHeader
operator|.
name|getVersion
argument_list|()
operator|==
name|ChmConstants
operator|.
name|CHM_VER_3
condition|)
block|{
if|if
condition|(
name|chmItsfHeader
operator|.
name|getDataRemained
argument_list|()
operator|>=
literal|0
condition|)
name|chmItsfHeader
operator|.
name|setDataOffset
argument_list|(
name|chmItsfHeader
operator|.
name|getDirOffset
argument_list|()
operator|+
name|chmItsfHeader
operator|.
name|getDirLen
argument_list|()
argument_list|)
expr_stmt|;
else|else
throw|throw
operator|new
name|ChmParsingException
argument_list|(
literal|"cannot set data offset, no data remained"
argument_list|)
throw|;
block|}
else|else
name|chmItsfHeader
operator|.
name|setDataOffset
argument_list|(
name|chmItsfHeader
operator|.
name|getDirOffset
argument_list|()
operator|+
name|chmItsfHeader
operator|.
name|getDirLen
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

