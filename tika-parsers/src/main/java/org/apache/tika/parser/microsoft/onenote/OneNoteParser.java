begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|onenote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang3
operator|.
name|tuple
operator|.
name|Pair
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TemporaryResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AbstractParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|Instant
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * OneNote tika parser capable of parsing Microsoft OneNote files.  *<p>  * Based on the Microsoft specs MS-ONE and MS-ONESTORE.  */
end_comment

begin_class
specifier|public
class|class
name|OneNoteParser
extends|extends
name|AbstractParser
block|{
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|MediaType
argument_list|,
name|List
argument_list|<
name|String
argument_list|>
argument_list|>
name|typesMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * Serial version UID      */
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
operator|-
literal|5504243905998074168L
decl_stmt|;
static|static
block|{
comment|// All types should be 4 bytes long, space padded as needed
name|typesMap
operator|.
name|put
argument_list|(
name|MediaType
operator|.
name|application
argument_list|(
literal|"onenote; format=one"
argument_list|)
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"ONE "
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO - add onetoc and other onenote mime types
block|}
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|MediaType
argument_list|>
name|SUPPORTED_TYPES
init|=
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|typesMap
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|MediaType
argument_list|>
name|getSupportedTypes
parameter_list|(
name|ParseContext
name|context
parameter_list|)
block|{
return|return
name|SUPPORTED_TYPES
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|context
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
try|try
init|(
name|TemporaryResources
name|temporaryResources
init|=
operator|new
name|TemporaryResources
argument_list|()
init|;
name|TikaInputStream
name|tikaInputStream
operator|=
name|TikaInputStream
operator|.
name|get
argument_list|(
name|stream
argument_list|,
name|temporaryResources
argument_list|)
init|;
name|OneNoteDirectFileResource
name|oneNoteDirectFileResource
operator|=
operator|new
name|OneNoteDirectFileResource
argument_list|(
name|tikaInputStream
operator|.
name|getFile
argument_list|()
argument_list|)
init|)
block|{
name|temporaryResources
operator|.
name|addResource
argument_list|(
name|oneNoteDirectFileResource
argument_list|)
expr_stmt|;
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|OneNoteDocument
name|oneNoteDocument
init|=
name|createOneNoteDocumentFromDirectFileResource
argument_list|(
name|oneNoteDirectFileResource
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"buildNumberCreated"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|buildNumberCreated
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"buildNumberLastWroteToFile"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|buildNumberLastWroteToFile
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"buildNumberNewestWritten"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|buildNumberNewestWritten
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"buildNumberOldestWritten"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|buildNumberOldestWritten
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"cbExpectedFileLength"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|cbExpectedFileLength
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"cbFreeSpaceInFreeChunkList"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|cbFreeSpaceInFreeChunkList
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"cbLegacyExpectedFileLength"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|cbLegacyExpectedFileLength
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"cbLegacyFreeSpaceInFreeChunkList"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|cbLegacyFreeSpaceInFreeChunkList
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"crcName"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|crcName
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"cTransactionsInLog"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|cTransactionsInLog
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"ffvLastCode"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|ffvLastCode
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"ffvNewestCode"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|ffvNewestCode
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"ffvOldestReader"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|ffvOldestReader
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"grfDebugLogFlags"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|grfDebugLogFlags
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"nFileVersionGeneration"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|nFileVersionGeneration
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"rgbPlaceholder"
argument_list|,
literal|"0x"
operator|+
name|Long
operator|.
name|toHexString
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|rgbPlaceholder
argument_list|)
argument_list|)
expr_stmt|;
name|Pair
argument_list|<
name|Long
argument_list|,
name|ExtendedGUID
argument_list|>
name|roleAndContext
init|=
name|Pair
operator|.
name|of
argument_list|(
literal|1L
argument_list|,
name|ExtendedGUID
operator|.
name|nil
argument_list|()
argument_list|)
decl_stmt|;
name|OneNoteTreeWalker
name|oneNoteTreeWalker
init|=
operator|new
name|OneNoteTreeWalker
argument_list|(
operator|new
name|OneNoteTreeWalkerOptions
argument_list|()
argument_list|,
name|oneNoteDocument
argument_list|,
name|oneNoteDirectFileResource
argument_list|,
name|xhtml
argument_list|,
name|metadata
argument_list|,
name|context
argument_list|,
name|roleAndContext
argument_list|)
decl_stmt|;
name|oneNoteTreeWalker
operator|.
name|walkTree
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|oneNoteTreeWalker
operator|.
name|getAuthors
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|Property
operator|.
name|externalTextBag
argument_list|(
literal|"authors"
argument_list|)
argument_list|,
name|oneNoteTreeWalker
operator|.
name|getAuthors
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|oneNoteTreeWalker
operator|.
name|getMostRecentAuthors
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|Property
operator|.
name|externalTextBag
argument_list|(
literal|"mostRecentAuthors"
argument_list|)
argument_list|,
name|oneNoteTreeWalker
operator|.
name|getMostRecentAuthors
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|oneNoteTreeWalker
operator|.
name|getOriginalAuthors
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|Property
operator|.
name|externalTextBag
argument_list|(
literal|"originalAuthors"
argument_list|)
argument_list|,
name|oneNoteTreeWalker
operator|.
name|getOriginalAuthors
argument_list|()
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|Instant
operator|.
name|MAX
operator|.
name|equals
argument_list|(
name|oneNoteTreeWalker
operator|.
name|getCreationTimestamp
argument_list|()
argument_list|)
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
literal|"creationTimestamp"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|oneNoteTreeWalker
operator|.
name|getCreationTimestamp
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|Instant
operator|.
name|MIN
operator|.
name|equals
argument_list|(
name|oneNoteTreeWalker
operator|.
name|getLastModifiedTimestamp
argument_list|()
argument_list|)
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
literal|"lastModifiedTimestamp"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|oneNoteTreeWalker
operator|.
name|getLastModifiedTimestamp
argument_list|()
operator|.
name|toEpochMilli
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|oneNoteTreeWalker
operator|.
name|getLastModified
argument_list|()
operator|>
name|Long
operator|.
name|MIN_VALUE
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
literal|"lastModified"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|oneNoteTreeWalker
operator|.
name|getLastModified
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Create a OneNoteDocument object.      *<p>      * This won't actually have the binary data of any of the sections, but it's more of a metadata structure that contains      * the general structure of the container and contains offset positions of where to find the binary data we care about.      *<p>      * OneNote files are of format:      *<p>      * The header (section 2.3.1 in MS-ONESTORE) is the first 1024 bytes of the file. It contains references to the other structures in the      * file as well as metadata about the file.      * The free chunk list (section 2.3.2 in MS-ONESTORE) defines where there are free spaces in the file where data can be written.      * The transaction log (section 2.3.3 in MS-ONESTORE) stores the state and length of each file node list (section 2.4 in MS-ONESTORE)      * in the file.      * The hashed chunk list (section 2.3.4 in MS-ONESTORE) stores read-only objects in the file that can be referenced by multiple      * revisions (section 2.1.8 in MS-ONESTORE).      * The root file node list (section 2.1.14 in MS-ONESTORE) is the file node list that is the root of the tree of all file node lists in      * the file.      *<p>      * In this method we first parse the header.      *<p>      * After parsing the header, this results in header.fcrFileNodeListRoot that points to the first      *      * @param oneNoteDirectFileResource A random access file resource used as the source of the content.      * @return A parsed one note document. This document does not contain any of the binary data, rather it just contains      * the data pointers and metadata.      * @throws IOException Will throw IOException in typical IO issue situations.      */
specifier|public
name|OneNoteDocument
name|createOneNoteDocumentFromDirectFileResource
parameter_list|(
name|OneNoteDirectFileResource
name|oneNoteDirectFileResource
parameter_list|)
throws|throws
name|IOException
throws|,
name|TikaException
block|{
name|OneNoteDocument
name|oneNoteDocument
init|=
operator|new
name|OneNoteDocument
argument_list|()
decl_stmt|;
name|OneNotePtr
name|oneNotePtr
init|=
operator|new
name|OneNotePtr
argument_list|(
name|oneNoteDocument
argument_list|,
name|oneNoteDirectFileResource
argument_list|)
decl_stmt|;
comment|// First parse out the header.
name|oneNoteDocument
operator|.
name|header
operator|=
name|oneNotePtr
operator|.
name|deserializeHeader
argument_list|()
expr_stmt|;
comment|// Now that we parsed the header, the "root file node list"
name|oneNotePtr
operator|.
name|reposition
argument_list|(
name|oneNoteDocument
operator|.
name|header
operator|.
name|fcrFileNodeListRoot
argument_list|)
expr_stmt|;
name|FileNodePtr
name|curPath
init|=
operator|new
name|FileNodePtr
argument_list|()
decl_stmt|;
name|oneNotePtr
operator|.
name|deserializeFileNodeList
argument_list|(
name|oneNoteDocument
operator|.
name|root
argument_list|,
name|curPath
argument_list|)
expr_stmt|;
return|return
name|oneNoteDocument
return|;
block|}
block|}
end_class

end_unit

