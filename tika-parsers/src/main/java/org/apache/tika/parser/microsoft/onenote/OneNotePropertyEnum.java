begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
operator|.
name|onenote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_enum
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
enum|enum
name|OneNotePropertyEnum
block|{
name|LayoutTightLayout
argument_list|(
literal|0x08001C00
argument_list|)
block|,
name|PageWidth
argument_list|(
literal|0x14001C01
argument_list|)
block|,
name|PageHeight
argument_list|(
literal|0x14001C02
argument_list|)
block|,
name|OutlineElementChildLevel
argument_list|(
literal|0x0C001C03
argument_list|)
block|,
name|Bold
argument_list|(
literal|0x08001C04
argument_list|)
block|,
name|Italic
argument_list|(
literal|0x08001C05
argument_list|)
block|,
name|Underline
argument_list|(
literal|0x08001C06
argument_list|)
block|,
name|Strikethrough
argument_list|(
literal|0x08001C07
argument_list|)
block|,
name|Superscript
argument_list|(
literal|0x08001C08
argument_list|)
block|,
name|Subscript
argument_list|(
literal|0x08001C09
argument_list|)
block|,
name|Font
argument_list|(
literal|0x1C001C0A
argument_list|)
block|,
name|FontSize
argument_list|(
literal|0x10001C0B
argument_list|)
block|,
name|FontColor
argument_list|(
literal|0x14001C0C
argument_list|)
block|,
name|Highlight
argument_list|(
literal|0x14001C0D
argument_list|)
block|,
name|RgOutlineIndentDistance
argument_list|(
literal|0x1C001C12
argument_list|)
block|,
name|BodyTextAlignment
argument_list|(
literal|0x0C001C13
argument_list|)
block|,
name|OffsetFromParentHoriz
argument_list|(
literal|0x14001C14
argument_list|)
block|,
name|OffsetFromParentVert
argument_list|(
literal|0x14001C15
argument_list|)
block|,
name|NumberListFormat
argument_list|(
literal|0x1C001C1A
argument_list|)
block|,
name|LayoutMaxWidth
argument_list|(
literal|0x14001C1B
argument_list|)
block|,
name|LayoutMaxHeight
argument_list|(
literal|0x14001C1C
argument_list|)
block|,
name|ContentChildNodesOfOutlineElement
argument_list|(
literal|0x24001C1F
argument_list|)
block|,
name|ContentChildNodesOfPageManifest
argument_list|(
literal|0x24001C1F
argument_list|)
block|,
name|ElementChildNodesOfSection
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfPage
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfTitle
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfOutline
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfOutlineElement
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfTable
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfTableRow
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfTableCell
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|ElementChildNodesOfVersionHistory
argument_list|(
literal|0x24001C20
argument_list|)
block|,
name|EnableHistory
argument_list|(
literal|0x08001E1E
argument_list|)
block|,
name|RichEditTextUnicode
argument_list|(
literal|0x1C001C22
argument_list|)
block|,
name|ListNodes
argument_list|(
literal|0x24001C26
argument_list|)
block|,
name|NotebookManagementEntityGuid
argument_list|(
literal|0x1C001C30
argument_list|)
block|,
name|OutlineElementRTL
argument_list|(
literal|0x08001C34
argument_list|)
block|,
name|LanguageID
argument_list|(
literal|0x14001C3B
argument_list|)
block|,
name|LayoutAlignmentInParent
argument_list|(
literal|0x14001C3E
argument_list|)
block|,
name|PictureContainer
argument_list|(
literal|0x20001C3F
argument_list|)
block|,
name|PageMarginTop
argument_list|(
literal|0x14001C4C
argument_list|)
block|,
name|PageMarginBottom
argument_list|(
literal|0x14001C4D
argument_list|)
block|,
name|PageMarginLeft
argument_list|(
literal|0x14001C4E
argument_list|)
block|,
name|PageMarginRight
argument_list|(
literal|0x14001C4F
argument_list|)
block|,
name|ListFont
argument_list|(
literal|0x1C001C52
argument_list|)
block|,
name|TopologyCreationTimeStamp
argument_list|(
literal|0x18001C65
argument_list|)
block|,
name|LayoutAlignmentSelf
argument_list|(
literal|0x14001C84
argument_list|)
block|,
name|IsTitleTime
argument_list|(
literal|0x08001C87
argument_list|)
block|,
name|IsBoilerText
argument_list|(
literal|0x08001C88
argument_list|)
block|,
name|PageSize
argument_list|(
literal|0x14001C8B
argument_list|)
block|,
name|PortraitPage
argument_list|(
literal|0x08001C8E
argument_list|)
block|,
name|EnforceOutlineStructure
argument_list|(
literal|0x08001C91
argument_list|)
block|,
name|EditRootRTL
argument_list|(
literal|0x08001C92
argument_list|)
block|,
name|CannotBeSelected
argument_list|(
literal|0x08001CB2
argument_list|)
block|,
name|IsTitleText
argument_list|(
literal|0x08001CB4
argument_list|)
block|,
name|IsTitleDate
argument_list|(
literal|0x08001CB5
argument_list|)
block|,
name|ListRestart
argument_list|(
literal|0x14001CB7
argument_list|)
block|,
name|IsLayoutSizeSetByUser
argument_list|(
literal|0x08001CBD
argument_list|)
block|,
name|ListSpacingMu
argument_list|(
literal|0x14001CCB
argument_list|)
block|,
name|LayoutOutlineReservedWidth
argument_list|(
literal|0x14001CDB
argument_list|)
block|,
name|LayoutResolveChildCollisions
argument_list|(
literal|0x08001CDC
argument_list|)
block|,
name|IsReadOnly
argument_list|(
literal|0x08001CDE
argument_list|)
block|,
name|LayoutMinimumOutlineWidth
argument_list|(
literal|0x14001CEC
argument_list|)
block|,
name|LayoutCollisionPriority
argument_list|(
literal|0x14001CF1
argument_list|)
block|,
name|CachedTitleString
argument_list|(
literal|0x1C001CF3
argument_list|)
block|,
name|DescendantsCannotBeMoved
argument_list|(
literal|0x08001CF9
argument_list|)
block|,
name|RichEditTextLangID
argument_list|(
literal|0x10001CFE
argument_list|)
block|,
name|LayoutTightAlignment
argument_list|(
literal|0x08001CFF
argument_list|)
block|,
name|Charset
argument_list|(
literal|0x0C001D01
argument_list|)
block|,
name|CreationTimeStamp
argument_list|(
literal|0x14001D09
argument_list|)
block|,
name|Deletable
argument_list|(
literal|0x08001D0C
argument_list|)
block|,
name|ListMSAAIndex
argument_list|(
literal|0x10001D0E
argument_list|)
block|,
name|IsBackground
argument_list|(
literal|0x08001D13
argument_list|)
block|,
name|IRecordMedia
argument_list|(
literal|0x14001D24
argument_list|)
block|,
name|CachedTitleStringFromPage
argument_list|(
literal|0x1C001D3C
argument_list|)
block|,
name|RowCount
argument_list|(
literal|0x14001D57
argument_list|)
block|,
name|ColumnCount
argument_list|(
literal|0x14001D58
argument_list|)
block|,
name|TableBordersVisible
argument_list|(
literal|0x08001D5E
argument_list|)
block|,
name|StructureElementChildNodes
argument_list|(
literal|0x24001D5F
argument_list|)
block|,
name|ChildGraphSpaceElementNodes
argument_list|(
literal|0x2C001D63
argument_list|)
block|,
name|TableColumnWidths
argument_list|(
literal|0x1C001D66
argument_list|)
block|,
name|Author
argument_list|(
literal|0x1C001D75
argument_list|)
block|,
name|LastModifiedTimeStamp
argument_list|(
literal|0x18001D77
argument_list|)
block|,
name|AuthorOriginal
argument_list|(
literal|0x20001D78
argument_list|)
block|,
name|AuthorMostRecent
argument_list|(
literal|0x20001D79
argument_list|)
block|,
name|LastModifiedTime
argument_list|(
literal|0x14001D7A
argument_list|)
block|,
name|IsConflictPage
argument_list|(
literal|0x08001D7C
argument_list|)
block|,
name|TableColumnsLocked
argument_list|(
literal|0x1C001D7D
argument_list|)
block|,
name|SchemaRevisionInOrderToRead
argument_list|(
literal|0x14001D82
argument_list|)
block|,
name|IsConflictObjectForRender
argument_list|(
literal|0x08001D96
argument_list|)
block|,
name|EmbeddedFileContainer
argument_list|(
literal|0x20001D9B
argument_list|)
block|,
name|EmbeddedFileName
argument_list|(
literal|0x1C001D9C
argument_list|)
block|,
name|SourceFilepath
argument_list|(
literal|0x1C001D9D
argument_list|)
block|,
name|ConflictingUserName
argument_list|(
literal|0x1C001D9E
argument_list|)
block|,
name|ImageFilename
argument_list|(
literal|0x1C001DD7
argument_list|)
block|,
name|IsConflictObjectForSelection
argument_list|(
literal|0x08001DDB
argument_list|)
block|,
name|PageLevel
argument_list|(
literal|0x14001DFF
argument_list|)
block|,
name|TextRunIndex
argument_list|(
literal|0x1C001E12
argument_list|)
block|,
name|TextRunFormatting
argument_list|(
literal|0x24001E13
argument_list|)
block|,
name|Hyperlink
argument_list|(
literal|0x08001E14
argument_list|)
block|,
name|UnderlineType
argument_list|(
literal|0x0C001E15
argument_list|)
block|,
name|Hidden
argument_list|(
literal|0x08001E16
argument_list|)
block|,
name|HyperlinkProtected
argument_list|(
literal|0x08001E19
argument_list|)
block|,
name|TextRunIsEmbeddedObject
argument_list|(
literal|0x08001E22
argument_list|)
block|,
name|ImageAltText
argument_list|(
literal|0x1C001E58
argument_list|)
block|,
name|MathFormatting
argument_list|(
literal|0x08003401
argument_list|)
block|,
name|ParagraphStyle
argument_list|(
literal|0x2000342C
argument_list|)
block|,
name|ParagraphSpaceBefore
argument_list|(
literal|0x1400342E
argument_list|)
block|,
name|ParagraphSpaceAfter
argument_list|(
literal|0x1400342F
argument_list|)
block|,
name|ParagraphLineSpacingExact
argument_list|(
literal|0x14003430
argument_list|)
block|,
name|MetaDataObjectsAboveGraphSpace
argument_list|(
literal|0x24003442
argument_list|)
block|,
name|TextRunDataObject
argument_list|(
literal|0x24003458
argument_list|)
block|,
name|TextRunData
argument_list|(
literal|0x40003499
argument_list|)
block|,
name|ParagraphStyleId
argument_list|(
literal|0x1C00345A
argument_list|)
block|,
name|HasVersionPages
argument_list|(
literal|0x08003462
argument_list|)
block|,
name|ActionItemType
argument_list|(
literal|0x10003463
argument_list|)
block|,
name|NoteTagShape
argument_list|(
literal|0x10003464
argument_list|)
block|,
name|NoteTagHighlightColor
argument_list|(
literal|0x14003465
argument_list|)
block|,
name|NoteTagTextColor
argument_list|(
literal|0x14003466
argument_list|)
block|,
name|NoteTagPropertyStatus
argument_list|(
literal|0x14003467
argument_list|)
block|,
name|NoteTagLabel
argument_list|(
literal|0x1C003468
argument_list|)
block|,
name|NoteTagCreated
argument_list|(
literal|0x1400346E
argument_list|)
block|,
name|NoteTagCompleted
argument_list|(
literal|0x1400346F
argument_list|)
block|,
name|NoteTagDefinitionOid
argument_list|(
literal|0x20003488
argument_list|)
block|,
name|NoteTagStates
argument_list|(
literal|0x04003489
argument_list|)
block|,
name|ActionItemStatus
argument_list|(
literal|0x10003470
argument_list|)
block|,
name|ActionItemSchemaVersion
argument_list|(
literal|0x0C003473
argument_list|)
block|,
name|ReadingOrderRTL
argument_list|(
literal|0x08003476
argument_list|)
block|,
name|ParagraphAlignment
argument_list|(
literal|0x0C003477
argument_list|)
block|,
name|VersionHistoryGraphSpaceContextNodes
argument_list|(
literal|0x3400347B
argument_list|)
block|,
name|DisplayedPageNumber
argument_list|(
literal|0x14003480
argument_list|)
block|,
name|SectionDisplayName
argument_list|(
literal|0x1C00349B
argument_list|)
block|,
name|NextStyle
argument_list|(
literal|0x1C00348A
argument_list|)
block|,
name|WebPictureContainer14
argument_list|(
literal|0x200034C8
argument_list|)
block|,
name|ImageUploadState
argument_list|(
literal|0x140034CB
argument_list|)
block|,
name|TextExtendedAscii
argument_list|(
literal|0x1C003498
argument_list|)
block|,
name|PictureWidth
argument_list|(
literal|0x140034CD
argument_list|)
block|,
name|PictureHeight
argument_list|(
literal|0x140034CE
argument_list|)
block|,
name|PageMarginOriginX
argument_list|(
literal|0x14001D0F
argument_list|)
block|,
name|PageMarginOriginY
argument_list|(
literal|0x14001D10
argument_list|)
block|,
name|WzHyperlinkUrl
argument_list|(
literal|0x1C001E20
argument_list|)
block|,
name|TaskTagDueDate
argument_list|(
literal|0x1400346B
argument_list|)
block|,
name|Unknown
argument_list|(
literal|0x00000000
argument_list|)
block|;
specifier|private
name|long
name|id
decl_stmt|;
name|OneNotePropertyEnum
parameter_list|(
name|long
name|id
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
block|}
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|Long
argument_list|,
name|OneNotePropertyEnum
argument_list|>
name|BY_ID
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
static|static
block|{
for|for
control|(
name|OneNotePropertyEnum
name|e
range|:
name|values
argument_list|()
control|)
block|{
name|BY_ID
operator|.
name|put
argument_list|(
name|e
operator|.
name|id
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
name|OneNotePropertyEnum
name|of
parameter_list|(
name|Long
name|id
parameter_list|)
block|{
name|OneNotePropertyEnum
name|result
init|=
name|BY_ID
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
return|return
name|Unknown
return|;
block|}
return|return
name|result
return|;
block|}
specifier|public
specifier|static
name|long
name|getType
parameter_list|(
name|OneNotePropertyEnum
name|propertyEnum
parameter_list|)
block|{
name|long
name|pid
init|=
name|propertyEnum
operator|.
name|id
decl_stmt|;
name|long
name|id
init|=
operator|(
name|pid
operator|&
literal|0x3ffffff
operator|)
decl_stmt|;
return|return
name|pid
operator|>>
literal|26
operator|&
literal|0x1f
return|;
block|}
specifier|public
specifier|static
name|boolean
name|getInlineBool
parameter_list|(
name|OneNotePropertyEnum
name|propertyEnum
parameter_list|)
block|{
name|long
name|pid
init|=
name|propertyEnum
operator|.
name|id
decl_stmt|;
name|long
name|id
init|=
operator|(
name|pid
operator|&
literal|0x3ffffff
operator|)
decl_stmt|;
name|long
name|type
init|=
name|pid
operator|>>
literal|26
operator|&
literal|0x1f
decl_stmt|;
name|boolean
name|inlineBool
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|0x2
condition|)
block|{
name|inlineBool
operator|=
operator|(
operator|(
name|pid
operator|>>
literal|31
operator|)
operator|&
literal|0x1
operator|)
operator|>
literal|0
expr_stmt|;
comment|// set the bool value from header
block|}
else|else
block|{
if|if
condition|(
operator|(
operator|(
name|pid
operator|>>
literal|31
operator|)
operator|&
literal|0x1
operator|)
operator|>
literal|0
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Reserved non-zero"
argument_list|)
throw|;
block|}
block|}
return|return
name|inlineBool
return|;
block|}
block|}
end_enum

end_unit

