begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|geoinfo
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|internal
operator|.
name|util
operator|.
name|CheckedArrayList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|internal
operator|.
name|util
operator|.
name|CheckedHashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|DefaultMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|DefaultMetadataScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|constraint
operator|.
name|DefaultLegalConstraints
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|extent
operator|.
name|DefaultGeographicBoundingBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|extent
operator|.
name|DefaultGeographicDescription
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|metadata
operator|.
name|iso
operator|.
name|identification
operator|.
name|DefaultDataIdentification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|storage
operator|.
name|DataStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|storage
operator|.
name|DataStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|storage
operator|.
name|DataStores
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|storage
operator|.
name|UnsupportedStorageException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sis
operator|.
name|util
operator|.
name|collection
operator|.
name|CodeListSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TemporaryResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|TikaInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AbstractParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|utils
operator|.
name|DateUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|Identifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|citation
operator|.
name|Citation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|citation
operator|.
name|CitationDate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|citation
operator|.
name|OnlineResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|citation
operator|.
name|ResponsibleParty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|constraint
operator|.
name|Restriction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|distribution
operator|.
name|DigitalTransferOptions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|distribution
operator|.
name|Distribution
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|distribution
operator|.
name|Distributor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|distribution
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|extent
operator|.
name|Extent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|extent
operator|.
name|GeographicExtent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|identification
operator|.
name|Identification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|identification
operator|.
name|Keywords
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|identification
operator|.
name|Progress
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|metadata
operator|.
name|identification
operator|.
name|TopicCategory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|opengis
operator|.
name|util
operator|.
name|InternationalString
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|GeographicInformationParser
extends|extends
name|AbstractParser
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOG
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|GeographicInformationParser
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|geoInfoType
init|=
literal|"text/iso19139+xml"
decl_stmt|;
specifier|private
specifier|final
name|Set
argument_list|<
name|MediaType
argument_list|>
name|SUPPORTED_TYPES
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|MediaType
operator|.
name|text
argument_list|(
literal|"iso19139+xml"
argument_list|)
argument_list|)
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|MediaType
argument_list|>
name|getSupportedTypes
parameter_list|(
name|ParseContext
name|parseContext
parameter_list|)
block|{
return|return
name|SUPPORTED_TYPES
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|inputStream
parameter_list|,
name|ContentHandler
name|contentHandler
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|ParseContext
name|parseContext
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|metadata
operator|.
name|set
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|,
name|geoInfoType
argument_list|)
expr_stmt|;
name|DataStore
name|dataStore
init|=
literal|null
decl_stmt|;
name|DefaultMetadata
name|defaultMetadata
init|=
literal|null
decl_stmt|;
name|XHTMLContentHandler
name|xhtmlContentHandler
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|contentHandler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|TemporaryResources
name|tmp
init|=
name|TikaInputStream
operator|.
name|isTikaInputStream
argument_list|(
name|inputStream
argument_list|)
condition|?
literal|null
else|:
operator|new
name|TemporaryResources
argument_list|()
decl_stmt|;
try|try
block|{
name|TikaInputStream
name|tikaInputStream
init|=
name|TikaInputStream
operator|.
name|get
argument_list|(
name|inputStream
argument_list|,
name|tmp
argument_list|)
decl_stmt|;
name|File
name|file
init|=
name|tikaInputStream
operator|.
name|getFile
argument_list|()
decl_stmt|;
name|dataStore
operator|=
name|DataStores
operator|.
name|open
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|defaultMetadata
operator|=
operator|new
name|DefaultMetadata
argument_list|(
name|dataStore
operator|.
name|getMetadata
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|defaultMetadata
operator|!=
literal|null
condition|)
name|extract
argument_list|(
name|xhtmlContentHandler
argument_list|,
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|UnsupportedStorageException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TikaException
argument_list|(
literal|"UnsupportedStorageException"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|DataStoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TikaException
argument_list|(
literal|"DataStoreException"
argument_list|,
name|e
argument_list|)
throw|;
block|}
finally|finally
block|{
if|if
condition|(
name|tmp
operator|!=
literal|null
condition|)
block|{
name|tmp
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|extract
parameter_list|(
name|XHTMLContentHandler
name|xhtmlContentHandler
parameter_list|,
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetadata
parameter_list|)
throws|throws
name|SAXException
block|{
name|getMetaDataCharacterSet
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataContact
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataIdentificationInfo
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataDistributionInfo
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataDateInfo
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataResourceScope
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataParentMetaDataTitle
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataIdetifierCode
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|getMetaDataStandard
argument_list|(
name|metadata
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
name|extractContent
argument_list|(
name|xhtmlContentHandler
argument_list|,
name|defaultMetadata
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|extractContent
parameter_list|(
name|XHTMLContentHandler
name|xhtmlContentHandler
parameter_list|,
name|DefaultMetadata
name|defaultMetadata
parameter_list|)
throws|throws
name|SAXException
block|{
name|xhtmlContentHandler
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|ArrayList
argument_list|<
name|Identification
argument_list|>
name|identifications
init|=
operator|(
name|ArrayList
argument_list|<
name|Identification
argument_list|>
operator|)
name|defaultMetadata
operator|.
name|getIdentificationInfo
argument_list|()
decl_stmt|;
for|for
control|(
name|Identification
name|i
range|:
name|identifications
control|)
block|{
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"h1"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"h1"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|ArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
name|responsiblePartyArrayList
init|=
operator|(
name|ArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
operator|)
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getCitedResponsibleParties
argument_list|()
decl_stmt|;
for|for
control|(
name|ResponsibleParty
name|r
range|:
name|responsiblePartyArrayList
control|)
block|{
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"h3"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"CitedResponsiblePartyRole "
operator|+
name|r
operator|.
name|getRole
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"CitedResponsiblePartyName "
operator|+
name|r
operator|.
name|getIndividualName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"h3"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
block|}
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"p"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"IdentificationInfoAbstract "
operator|+
name|i
operator|.
name|getAbstract
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"p"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|Collection
argument_list|<
name|Extent
argument_list|>
name|extentList
init|=
operator|(
operator|(
name|DefaultDataIdentification
operator|)
name|i
operator|)
operator|.
name|getExtents
argument_list|()
decl_stmt|;
for|for
control|(
name|Extent
name|e
range|:
name|extentList
control|)
block|{
name|ArrayList
argument_list|<
name|GeographicExtent
argument_list|>
name|geoElements
init|=
operator|(
name|ArrayList
argument_list|<
name|GeographicExtent
argument_list|>
operator|)
name|e
operator|.
name|getGeographicElements
argument_list|()
decl_stmt|;
for|for
control|(
name|GeographicExtent
name|g
range|:
name|geoElements
control|)
block|{
if|if
condition|(
name|g
operator|instanceof
name|DefaultGeographicBoundingBox
condition|)
block|{
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"GeographicElementWestBoundLatitude"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
operator|(
operator|(
name|DefaultGeographicBoundingBox
operator|)
name|g
operator|)
operator|.
name|getWestBoundLongitude
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"GeographicElementEastBoundLatitude"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
operator|(
operator|(
name|DefaultGeographicBoundingBox
operator|)
name|g
operator|)
operator|.
name|getEastBoundLongitude
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"GeographicElementNorthBoundLatitude"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
operator|(
operator|(
name|DefaultGeographicBoundingBox
operator|)
name|g
operator|)
operator|.
name|getNorthBoundLatitude
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
literal|"GeographicElementSouthBoundLatitude"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|startElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|characters
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
operator|(
operator|(
name|DefaultGeographicBoundingBox
operator|)
name|g
operator|)
operator|.
name|getSouthBoundLatitude
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"td"
argument_list|)
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endElement
argument_list|(
literal|"tr"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|xhtmlContentHandler
operator|.
name|newline
argument_list|()
expr_stmt|;
name|xhtmlContentHandler
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|getMetaDataCharacterSet
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|Map
argument_list|<
name|Locale
argument_list|,
name|Charset
argument_list|>
name|charsetMap
init|=
name|defaultMetaData
operator|.
name|getLocalesAndCharsets
argument_list|()
decl_stmt|;
for|for
control|(
name|Charset
name|c
range|:
name|charsetMap
operator|.
name|values
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"CharacterSet"
argument_list|,
name|c
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|getMetaDataContact
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|CheckedArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
name|contactSet
init|=
operator|(
name|CheckedArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
operator|)
name|defaultMetaData
operator|.
name|getContacts
argument_list|()
decl_stmt|;
for|for
control|(
name|ResponsibleParty
name|rparty
range|:
name|contactSet
control|)
block|{
if|if
condition|(
name|rparty
operator|.
name|getRole
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ContactRole"
argument_list|,
name|rparty
operator|.
name|getRole
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|rparty
operator|.
name|getOrganisationName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ContactPartyName-"
argument_list|,
name|rparty
operator|.
name|getOrganisationName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|getMetaDataIdentificationInfo
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Identification
argument_list|>
name|identifications
init|=
operator|(
name|ArrayList
argument_list|<
name|Identification
argument_list|>
operator|)
name|defaultMetaData
operator|.
name|getIdentificationInfo
argument_list|()
decl_stmt|;
for|for
control|(
name|Identification
name|i
range|:
name|identifications
control|)
block|{
name|DefaultDataIdentification
name|defaultDataIdentification
init|=
operator|(
name|DefaultDataIdentification
operator|)
name|i
decl_stmt|;
if|if
condition|(
name|i
operator|.
name|getCitation
argument_list|()
operator|!=
literal|null
operator|&&
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"IdentificationInfoCitationTitle "
argument_list|,
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
name|dateArrayList
init|=
operator|(
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
operator|)
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getDates
argument_list|()
decl_stmt|;
for|for
control|(
name|CitationDate
name|d
range|:
name|dateArrayList
control|)
block|{
if|if
condition|(
name|d
operator|.
name|getDateType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|date
init|=
name|DateUtils
operator|.
name|formatDate
argument_list|(
name|d
operator|.
name|getDate
argument_list|()
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"CitationDate "
argument_list|,
name|d
operator|.
name|getDateType
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"-->"
operator|+
name|date
argument_list|)
expr_stmt|;
block|}
block|}
name|ArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
name|responsiblePartyArrayList
init|=
operator|(
name|ArrayList
argument_list|<
name|ResponsibleParty
argument_list|>
operator|)
name|i
operator|.
name|getCitation
argument_list|()
operator|.
name|getCitedResponsibleParties
argument_list|()
decl_stmt|;
for|for
control|(
name|ResponsibleParty
name|r
range|:
name|responsiblePartyArrayList
control|)
block|{
if|if
condition|(
name|r
operator|.
name|getRole
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"CitedResponsiblePartyRole "
argument_list|,
name|r
operator|.
name|getRole
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|getIndividualName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"CitedResponsiblePartyName "
argument_list|,
name|r
operator|.
name|getIndividualName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|getOrganisationName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"CitedResponsiblePartyOrganizationName "
argument_list|,
name|r
operator|.
name|getOrganisationName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|getPositionName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"CitedResponsiblePartyPositionName "
argument_list|,
name|r
operator|.
name|getPositionName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|r
operator|.
name|getContactInfo
argument_list|()
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|s
range|:
name|r
operator|.
name|getContactInfo
argument_list|()
operator|.
name|getAddress
argument_list|()
operator|.
name|getElectronicMailAddresses
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"CitedResponsiblePartyEMail "
argument_list|,
name|s
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|i
operator|.
name|getAbstract
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"IdentificationInfoAbstract "
argument_list|,
name|i
operator|.
name|getAbstract
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Progress
name|p
range|:
name|i
operator|.
name|getStatus
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"IdentificationInfoStatus "
argument_list|,
name|p
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|Format
argument_list|>
name|formatArrayList
init|=
operator|(
name|ArrayList
argument_list|<
name|Format
argument_list|>
operator|)
name|i
operator|.
name|getResourceFormats
argument_list|()
decl_stmt|;
for|for
control|(
name|Format
name|f
range|:
name|formatArrayList
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ResourceFormatSpecificationAlternativeTitle "
argument_list|,
name|f
operator|.
name|getName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|Locale
argument_list|,
name|Charset
argument_list|>
name|localeCharsetMap
init|=
name|defaultDataIdentification
operator|.
name|getLocalesAndCharsets
argument_list|()
decl_stmt|;
for|for
control|(
name|Locale
name|l
range|:
name|localeCharsetMap
operator|.
name|keySet
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"IdentificationInfoLanguage-->"
argument_list|,
name|l
operator|.
name|getDisplayLanguage
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|CodeListSet
argument_list|<
name|TopicCategory
argument_list|>
name|categoryList
init|=
operator|(
name|CodeListSet
argument_list|<
name|TopicCategory
argument_list|>
operator|)
name|defaultDataIdentification
operator|.
name|getTopicCategories
argument_list|()
decl_stmt|;
for|for
control|(
name|TopicCategory
name|t
range|:
name|categoryList
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"IdentificationInfoTopicCategory-->"
argument_list|,
name|t
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|Keywords
argument_list|>
name|keywordList
init|=
operator|(
name|ArrayList
argument_list|<
name|Keywords
argument_list|>
operator|)
name|i
operator|.
name|getDescriptiveKeywords
argument_list|()
decl_stmt|;
name|int
name|j
init|=
literal|1
decl_stmt|;
for|for
control|(
name|Keywords
name|k
range|:
name|keywordList
control|)
block|{
name|j
operator|++
expr_stmt|;
name|ArrayList
argument_list|<
name|InternationalString
argument_list|>
name|stringList
init|=
operator|(
name|ArrayList
argument_list|<
name|InternationalString
argument_list|>
operator|)
name|k
operator|.
name|getKeywords
argument_list|()
decl_stmt|;
for|for
control|(
name|InternationalString
name|s
range|:
name|stringList
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"Keywords "
operator|+
name|j
argument_list|,
name|s
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|k
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"KeywordsType "
operator|+
name|j
argument_list|,
name|k
operator|.
name|getType
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|!=
literal|null
operator|&&
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ThesaurusNameTitle "
operator|+
name|j
argument_list|,
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|!=
literal|null
operator|&&
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|.
name|getAlternateTitles
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ThesaurusNameAlternativeTitle "
operator|+
name|j
argument_list|,
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|.
name|getAlternateTitles
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
name|citationDates
init|=
operator|(
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
operator|)
name|k
operator|.
name|getThesaurusName
argument_list|()
operator|.
name|getDates
argument_list|()
decl_stmt|;
for|for
control|(
name|CitationDate
name|cd
range|:
name|citationDates
control|)
block|{
if|if
condition|(
name|cd
operator|.
name|getDateType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|date
init|=
name|DateUtils
operator|.
name|formatDate
argument_list|(
name|cd
operator|.
name|getDate
argument_list|()
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"ThesaurusNameDate "
argument_list|,
name|cd
operator|.
name|getDateType
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|"-->"
operator|+
name|date
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|ArrayList
argument_list|<
name|DefaultLegalConstraints
argument_list|>
name|constraintList
init|=
operator|(
name|ArrayList
argument_list|<
name|DefaultLegalConstraints
argument_list|>
operator|)
name|i
operator|.
name|getResourceConstraints
argument_list|()
decl_stmt|;
for|for
control|(
name|DefaultLegalConstraints
name|c
range|:
name|constraintList
control|)
block|{
for|for
control|(
name|Restriction
name|r
range|:
name|c
operator|.
name|getAccessConstraints
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"AccessContraints "
argument_list|,
name|r
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|InternationalString
name|s
range|:
name|c
operator|.
name|getOtherConstraints
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"OtherConstraints "
argument_list|,
name|s
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Restriction
name|r
range|:
name|c
operator|.
name|getUseConstraints
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"UserConstraints "
argument_list|,
name|r
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|Collection
argument_list|<
name|Extent
argument_list|>
name|extentList
init|=
operator|(
operator|(
name|DefaultDataIdentification
operator|)
name|i
operator|)
operator|.
name|getExtents
argument_list|()
decl_stmt|;
for|for
control|(
name|Extent
name|e
range|:
name|extentList
control|)
block|{
name|ArrayList
argument_list|<
name|GeographicExtent
argument_list|>
name|geoElements
init|=
operator|(
name|ArrayList
argument_list|<
name|GeographicExtent
argument_list|>
operator|)
name|e
operator|.
name|getGeographicElements
argument_list|()
decl_stmt|;
for|for
control|(
name|GeographicExtent
name|g
range|:
name|geoElements
control|)
block|{
if|if
condition|(
name|g
operator|instanceof
name|DefaultGeographicDescription
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getCode
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"GeographicIdentifierCode "
argument_list|,
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getCode
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getAuthority
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getAuthority
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"GeographicIdentifierAuthorityTitle "
argument_list|,
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getAuthority
argument_list|()
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|InternationalString
name|s
range|:
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getAuthority
argument_list|()
operator|.
name|getAlternateTitles
argument_list|()
control|)
block|{
name|metadata
operator|.
name|add
argument_list|(
literal|"GeographicIdentifierAuthorityAlternativeTitle "
argument_list|,
name|s
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|CitationDate
name|cd
range|:
operator|(
operator|(
name|DefaultGeographicDescription
operator|)
name|g
operator|)
operator|.
name|getGeographicIdentifier
argument_list|()
operator|.
name|getAuthority
argument_list|()
operator|.
name|getDates
argument_list|()
control|)
block|{
if|if
condition|(
name|cd
operator|.
name|getDateType
argument_list|()
operator|!=
literal|null
operator|&&
name|cd
operator|.
name|getDate
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|date
init|=
name|DateUtils
operator|.
name|formatDate
argument_list|(
name|cd
operator|.
name|getDate
argument_list|()
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"GeographicIdentifierAuthorityDate "
argument_list|,
name|cd
operator|.
name|getDateType
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|" "
operator|+
name|date
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
block|}
specifier|private
name|void
name|getMetaDataDistributionInfo
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|Distribution
name|distribution
init|=
name|defaultMetaData
operator|.
name|getDistributionInfo
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|Format
argument_list|>
name|distributionFormat
init|=
operator|(
name|ArrayList
argument_list|<
name|Format
argument_list|>
operator|)
name|distribution
operator|.
name|getDistributionFormats
argument_list|()
decl_stmt|;
for|for
control|(
name|Format
name|f
range|:
name|distributionFormat
control|)
block|{
if|if
condition|(
name|f
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"DistributionFormatSpecificationAlternativeTitle "
argument_list|,
name|f
operator|.
name|getName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|Distributor
argument_list|>
name|distributorList
init|=
operator|(
name|ArrayList
argument_list|<
name|Distributor
argument_list|>
operator|)
name|distribution
operator|.
name|getDistributors
argument_list|()
decl_stmt|;
for|for
control|(
name|Distributor
name|d
range|:
name|distributorList
control|)
block|{
if|if
condition|(
name|d
operator|!=
literal|null
operator|&&
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|!=
literal|null
operator|&&
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|.
name|getRole
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"Distributor Contact "
argument_list|,
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|.
name|getRole
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|d
operator|!=
literal|null
operator|&&
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|!=
literal|null
operator|&&
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|.
name|getOrganisationName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"Distributor Organization Name "
argument_list|,
name|d
operator|.
name|getDistributorContact
argument_list|()
operator|.
name|getOrganisationName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ArrayList
argument_list|<
name|DigitalTransferOptions
argument_list|>
name|transferOptionsList
init|=
operator|(
name|ArrayList
argument_list|<
name|DigitalTransferOptions
argument_list|>
operator|)
name|distribution
operator|.
name|getTransferOptions
argument_list|()
decl_stmt|;
for|for
control|(
name|DigitalTransferOptions
name|d
range|:
name|transferOptionsList
control|)
block|{
name|ArrayList
argument_list|<
name|OnlineResource
argument_list|>
name|onlineResourceList
init|=
operator|(
name|ArrayList
argument_list|<
name|OnlineResource
argument_list|>
operator|)
name|d
operator|.
name|getOnLines
argument_list|()
decl_stmt|;
for|for
control|(
name|OnlineResource
name|or
range|:
name|onlineResourceList
control|)
block|{
if|if
condition|(
name|or
operator|.
name|getLinkage
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineLinkage "
argument_list|,
name|or
operator|.
name|getLinkage
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|or
operator|.
name|getProtocol
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineProtocol "
argument_list|,
name|or
operator|.
name|getProtocol
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|or
operator|.
name|getApplicationProfile
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineProfile "
argument_list|,
name|or
operator|.
name|getApplicationProfile
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|or
operator|.
name|getName
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineName "
argument_list|,
name|or
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|or
operator|.
name|getDescription
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineDescription "
argument_list|,
name|or
operator|.
name|getDescription
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|or
operator|.
name|getFunction
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"TransferOptionsOnlineFunction "
argument_list|,
name|or
operator|.
name|getFunction
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|getMetaDataDateInfo
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
name|citationDateList
init|=
operator|(
name|ArrayList
argument_list|<
name|CitationDate
argument_list|>
operator|)
name|defaultMetaData
operator|.
name|getDateInfo
argument_list|()
decl_stmt|;
for|for
control|(
name|CitationDate
name|c
range|:
name|citationDateList
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getDateType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|String
name|date
init|=
name|DateUtils
operator|.
name|formatDate
argument_list|(
name|c
operator|.
name|getDate
argument_list|()
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"DateInfo "
argument_list|,
name|c
operator|.
name|getDateType
argument_list|()
operator|.
name|name
argument_list|()
operator|+
literal|" "
operator|+
name|date
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|getMetaDataResourceScope
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|DefaultMetadataScope
argument_list|>
name|scopeList
init|=
operator|(
name|ArrayList
argument_list|<
name|DefaultMetadataScope
argument_list|>
operator|)
name|defaultMetaData
operator|.
name|getMetadataScopes
argument_list|()
decl_stmt|;
for|for
control|(
name|DefaultMetadataScope
name|d
range|:
name|scopeList
control|)
block|{
if|if
condition|(
name|d
operator|.
name|getResourceScope
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"MetaDataResourceScope "
argument_list|,
name|d
operator|.
name|getResourceScope
argument_list|()
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|getMetaDataParentMetaDataTitle
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|Citation
name|parentMetaData
init|=
name|defaultMetaData
operator|.
name|getParentMetadata
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentMetaData
operator|!=
literal|null
operator|&&
name|parentMetaData
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"ParentMetaDataTitle"
argument_list|,
name|parentMetaData
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getMetaDataIdetifierCode
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|Identifier
name|identifier
init|=
name|defaultMetaData
operator|.
name|getMetadataIdentifier
argument_list|()
decl_stmt|;
if|if
condition|(
name|identifier
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"MetaDataIdentifierCode"
argument_list|,
name|identifier
operator|.
name|getCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|getMetaDataStandard
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|DefaultMetadata
name|defaultMetaData
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|Citation
argument_list|>
name|citationList
init|=
operator|(
name|ArrayList
argument_list|<
name|Citation
argument_list|>
operator|)
name|defaultMetaData
operator|.
name|getMetadataStandards
argument_list|()
decl_stmt|;
for|for
control|(
name|Citation
name|c
range|:
name|citationList
control|)
block|{
if|if
condition|(
name|c
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"MetaDataStandardTitle "
argument_list|,
name|c
operator|.
name|getTitle
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|c
operator|.
name|getEdition
argument_list|()
operator|!=
literal|null
condition|)
name|metadata
operator|.
name|add
argument_list|(
literal|"MetaDataStandardEdition "
argument_list|,
name|c
operator|.
name|getEdition
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

