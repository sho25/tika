begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|log
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Level
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|PropertyConfigurator
import|;
end_import

begin_comment
comment|/**  * Tika Logger    */
end_comment

begin_class
specifier|public
class|class
name|TikaLogger
block|{
specifier|static
name|Logger
name|logger
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
literal|"TikaLogger"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|void
name|setLoggerConfigFile
parameter_list|(
name|String
name|loggerConfigPath
parameter_list|)
block|{
name|PropertyConfigurator
operator|.
name|configure
argument_list|(
name|loggerConfigPath
argument_list|)
expr_stmt|;
name|logger
operator|.
name|setLevel
argument_list|(
operator|(
operator|(
name|Level
operator|)
name|Level
operator|.
name|ERROR
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

