begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|mspowerpoint
package|;
end_package

begin_comment
comment|// JDK imports
end_comment

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|utils
operator|.
name|MSExtractor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|poifs
operator|.
name|eventfilesystem
operator|.
name|POIFSReader
import|;
end_import

begin_comment
comment|/**  * Converts the Powerpoint document content to plain text.  *   *   */
end_comment

begin_class
class|class
name|PPTExtractor
extends|extends
name|MSExtractor
block|{
specifier|static
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getRootLogger
argument_list|()
decl_stmt|;
specifier|private
name|StringBuffer
name|text
init|=
literal|null
decl_stmt|;
specifier|private
name|POIFSReader
name|reader
init|=
literal|null
decl_stmt|;
specifier|public
name|String
name|extractText
parameter_list|(
name|InputStream
name|input
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|reader
operator|=
operator|new
name|POIFSReader
argument_list|()
expr_stmt|;
name|this
operator|.
name|text
operator|=
operator|new
name|StringBuffer
argument_list|()
expr_stmt|;
name|reader
operator|.
name|registerListener
argument_list|(
operator|new
name|ContentReaderListener
argument_list|(
name|this
operator|.
name|text
argument_list|)
argument_list|,
name|PPTConstants
operator|.
name|POWERPOINT_DOCUMENT
argument_list|)
expr_stmt|;
comment|// input.reset();
if|if
condition|(
name|input
operator|.
name|available
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|reader
operator|.
name|read
argument_list|(
name|input
argument_list|)
expr_stmt|;
name|LOG
operator|.
name|warn
argument_list|(
literal|"Input<=0 :"
operator|+
name|input
operator|.
name|available
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|this
operator|.
name|text
operator|!=
literal|null
operator|)
condition|?
name|text
operator|.
name|toString
argument_list|()
else|:
literal|null
return|;
block|}
block|}
end_class

end_unit

