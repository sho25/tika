begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|opendocument
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|ZipInputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|xml
operator|.
name|XMLParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|log4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|JDOMException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Namespace
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|input
operator|.
name|SAXBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * OpenOffice parser  */
end_comment

begin_class
specifier|public
class|class
name|OpenOfficeParser
implements|implements
name|Parser
block|{
specifier|static
name|Logger
name|logger
init|=
name|Logger
operator|.
name|getRootLogger
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Namespace
name|NS_DC
init|=
name|Namespace
operator|.
name|getNamespace
argument_list|(
literal|"dc"
argument_list|,
literal|"http://purl.org/dc/elements/1.1/"
argument_list|)
decl_stmt|;
specifier|public
name|org
operator|.
name|jdom
operator|.
name|Document
name|parse
parameter_list|(
name|InputStream
name|is
parameter_list|)
block|{
name|Document
name|xmlDoc
init|=
operator|new
name|org
operator|.
name|jdom
operator|.
name|Document
argument_list|()
decl_stmt|;
name|org
operator|.
name|jdom
operator|.
name|Document
name|xmlMeta
init|=
operator|new
name|org
operator|.
name|jdom
operator|.
name|Document
argument_list|()
decl_stmt|;
try|try
block|{
name|List
name|files
init|=
name|unzip
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|SAXBuilder
name|builder
init|=
operator|new
name|SAXBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|setEntityResolver
argument_list|(
operator|new
name|OpenOfficeEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setValidation
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|xmlDoc
operator|=
name|builder
operator|.
name|build
argument_list|(
operator|(
name|InputStream
operator|)
name|files
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|xmlMeta
operator|=
name|builder
operator|.
name|build
argument_list|(
operator|(
name|InputStream
operator|)
name|files
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|Element
name|rootMeta
init|=
name|xmlMeta
operator|.
name|getRootElement
argument_list|()
decl_stmt|;
name|Element
name|meta
init|=
literal|null
decl_stmt|;
name|List
name|ls
init|=
name|rootMeta
operator|.
name|getChildren
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|ls
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|meta
operator|=
operator|(
name|Element
operator|)
name|ls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
name|xmlDoc
operator|.
name|getRootElement
argument_list|()
operator|.
name|addContent
argument_list|(
name|meta
operator|.
name|detach
argument_list|()
argument_list|)
expr_stmt|;
name|xmlDoc
operator|.
name|getRootElement
argument_list|()
operator|.
name|addNamespaceDeclaration
argument_list|(
name|NS_DC
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|xmlDoc
return|;
block|}
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|Document
name|xmlDoc
init|=
name|parse
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|XMLParser
name|xp
init|=
operator|new
name|XMLParser
argument_list|()
decl_stmt|;
name|xp
operator|.
name|getAllDocumentNs
argument_list|(
name|xmlDoc
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|TITLE
argument_list|,
literal|"//dc:title"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|SUBJECT
argument_list|,
literal|"//dc:subject"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|CREATOR
argument_list|,
literal|"//dc:creator"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|DESCRIPTION
argument_list|,
literal|"//dc:description"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|LANGUAGE
argument_list|,
literal|"//dc:language"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|KEYWORDS
argument_list|,
literal|"//meta:keyword"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
name|Metadata
operator|.
name|DATE
argument_list|,
literal|"//dc:date"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbTab"
argument_list|,
literal|"//meta:document-statistic/@meta:table-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbObject"
argument_list|,
literal|"//meta:document-statistic/@meta:object-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbImg"
argument_list|,
literal|"//meta:document-statistic/@meta:image-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbPage"
argument_list|,
literal|"//meta:document-statistic/@meta:page-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbPara"
argument_list|,
literal|"//meta:document-statistic/@meta:paragraph-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbWord"
argument_list|,
literal|"//meta:document-statistic/@meta:word-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|xp
operator|.
name|extractContent
argument_list|(
name|xmlDoc
argument_list|,
literal|"nbcharacter"
argument_list|,
literal|"//meta:document-statistic/@meta:character-count"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|xhtml
operator|.
name|element
argument_list|(
literal|"p"
argument_list|,
name|xp
operator|.
name|concatOccurrence
argument_list|(
name|xmlDoc
argument_list|,
literal|"//*"
argument_list|,
literal|" "
argument_list|)
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
name|unzip
parameter_list|(
name|InputStream
name|is
parameter_list|)
block|{
name|List
name|res
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
try|try
block|{
name|ZipInputStream
name|in
init|=
operator|new
name|ZipInputStream
argument_list|(
name|is
argument_list|)
decl_stmt|;
name|ZipEntry
name|entry
init|=
literal|null
decl_stmt|;
while|while
condition|(
operator|(
name|entry
operator|=
name|in
operator|.
name|getNextEntry
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|entry
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"meta.xml"
argument_list|)
operator|||
name|entry
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"content.xml"
argument_list|)
condition|)
block|{
name|ByteArrayOutputStream
name|stream
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|in
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|stream
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
name|InputStream
name|isEntry
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|stream
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|res
operator|.
name|add
argument_list|(
name|isEntry
argument_list|)
expr_stmt|;
block|}
block|}
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|res
return|;
block|}
specifier|protected
name|void
name|copyInputStream
parameter_list|(
name|InputStream
name|in
parameter_list|,
name|OutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|in
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|>=
literal|0
condition|)
name|out
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

