begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|audio
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|AudioFileFormat
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|AudioFormat
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|AudioSystem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sound
operator|.
name|sampled
operator|.
name|UnsupportedAudioFileException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|AudioParser
implements|implements
name|Parser
block|{
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
name|parse
argument_list|(
name|stream
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
throws|,
name|TikaException
block|{
name|String
name|type
init|=
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|AudioFileFormat
name|fileFormat
init|=
name|AudioSystem
operator|.
name|getAudioFileFormat
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|AudioFormat
name|format
init|=
name|fileFormat
operator|.
name|getFormat
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"samplerate"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
operator|(
name|int
operator|)
name|format
operator|.
name|getSampleRate
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"channels"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|format
operator|.
name|getChannels
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"bits"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|format
operator|.
name|getSampleSizeInBits
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|set
argument_list|(
literal|"encoding"
argument_list|,
name|format
operator|.
name|getEncoding
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|// Javadoc suggests that some of the following properties might
comment|// be available, but I had no success in finding any:
comment|// "duration" Long playback duration of the file in microseconds
comment|// "author" String name of the author of this file
comment|// "title" String title of this file
comment|// "copyright" String copyright message
comment|// "date" Date date of the recording or release
comment|// "comment" String an arbitrary text
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|format
operator|.
name|properties
argument_list|()
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|UnsupportedAudioFileException
name|e
parameter_list|)
block|{
comment|// cannot parse, unknown format
block|}
block|}
block|}
block|}
end_class

end_unit

