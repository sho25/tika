begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AbstractParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hsmf
operator|.
name|MAPIMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hsmf
operator|.
name|exceptions
operator|.
name|ChunkNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_comment
comment|/**  * Outlook Message Parser.  */
end_comment

begin_class
specifier|public
class|class
name|OutlookMessageParser
extends|extends
name|AbstractParser
block|{
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
throws|,
name|TikaException
throws|,
name|SAXException
block|{
try|try
block|{
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|MAPIMessage
name|msg
init|=
operator|new
name|MAPIMessage
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"from"
argument_list|,
name|msg
operator|.
name|getDisplayFrom
argument_list|()
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"to"
argument_list|,
name|msg
operator|.
name|getDisplayTo
argument_list|()
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|SUBJECT
argument_list|,
name|msg
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"messageClass"
argument_list|,
name|msg
operator|.
name|getMessageClass
argument_list|()
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|add
argument_list|(
literal|"conversationTopic"
argument_list|,
name|msg
operator|.
name|getConversationTopic
argument_list|()
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|element
argument_list|(
literal|"p"
argument_list|,
name|msg
operator|.
name|getTextBody
argument_list|()
argument_list|)
expr_stmt|;
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ChunkNotFoundException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|TikaException
argument_list|(
literal|"Error parsing message."
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

