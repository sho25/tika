begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|microsoft
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hpsf
operator|.
name|DocumentSummaryInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hpsf
operator|.
name|NoPropertySetStreamException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hpsf
operator|.
name|PropertySet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hpsf
operator|.
name|SummaryInformation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|poi
operator|.
name|hpsf
operator|.
name|UnexpectedPropertySetTypeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
operator|.
name|TikaException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|XHTMLContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * Parser for HPSF property streams within Microsoft Office files.  */
end_comment

begin_class
specifier|public
class|class
name|PropertyParser
implements|implements
name|Parser
block|{
specifier|public
name|void
name|parse
parameter_list|(
name|InputStream
name|stream
parameter_list|,
name|ContentHandler
name|handler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
throws|,
name|SAXException
throws|,
name|TikaException
block|{
try|try
block|{
name|PropertySet
name|properties
init|=
operator|new
name|PropertySet
argument_list|(
name|IOUtils
operator|.
name|toByteArray
argument_list|(
name|stream
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|properties
operator|.
name|isSummaryInformation
argument_list|()
condition|)
block|{
name|SummaryInformation
name|information
init|=
operator|new
name|SummaryInformation
argument_list|(
name|properties
argument_list|)
decl_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|TITLE
argument_list|,
name|information
operator|.
name|getTitle
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|AUTHOR
argument_list|,
name|information
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|KEYWORDS
argument_list|,
name|information
operator|.
name|getKeywords
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|SUBJECT
argument_list|,
name|information
operator|.
name|getSubject
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|LAST_AUTHOR
argument_list|,
name|information
operator|.
name|getLastAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|COMMENTS
argument_list|,
name|information
operator|.
name|getComments
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|TEMPLATE
argument_list|,
name|information
operator|.
name|getTemplate
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|APPLICATION_NAME
argument_list|,
name|information
operator|.
name|getApplicationName
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|REVISION_NUMBER
argument_list|,
name|information
operator|.
name|getRevNumber
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
literal|"creationdate"
argument_list|,
name|information
operator|.
name|getCreateDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|CHARACTER_COUNT
argument_list|,
name|information
operator|.
name|getCharCount
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
literal|"edittime"
argument_list|,
name|information
operator|.
name|getEditTime
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|LAST_SAVED
argument_list|,
name|information
operator|.
name|getLastSaveDateTime
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|PAGE_COUNT
argument_list|,
name|information
operator|.
name|getPageCount
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
literal|"security"
argument_list|,
name|information
operator|.
name|getSecurity
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|WORD_COUNT
argument_list|,
name|information
operator|.
name|getWordCount
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
name|Metadata
operator|.
name|LAST_PRINTED
argument_list|,
name|information
operator|.
name|getLastPrinted
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|properties
operator|.
name|isDocumentSummaryInformation
argument_list|()
condition|)
block|{
name|DocumentSummaryInformation
name|information
init|=
operator|new
name|DocumentSummaryInformation
argument_list|(
name|properties
argument_list|)
decl_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
literal|"company"
argument_list|,
name|information
operator|.
name|getCompany
argument_list|()
argument_list|)
expr_stmt|;
name|set
argument_list|(
name|metadata
argument_list|,
literal|"manager"
argument_list|,
name|information
operator|.
name|getManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// No content, just metadata
name|XHTMLContentHandler
name|xhtml
init|=
operator|new
name|XHTMLContentHandler
argument_list|(
name|handler
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|xhtml
operator|.
name|startDocument
argument_list|()
expr_stmt|;
name|xhtml
operator|.
name|endDocument
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoPropertySetStreamException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TikaException
argument_list|(
literal|"Not a HPSF document"
argument_list|,
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|UnexpectedPropertySetTypeException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|TikaException
argument_list|(
literal|"Unexpected HPSF document"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|private
specifier|static
name|void
name|set
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|set
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|String
name|name
parameter_list|,
name|Date
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|name
argument_list|,
name|value
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|set
parameter_list|(
name|Metadata
name|metadata
parameter_list|,
name|String
name|name
parameter_list|,
name|long
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|>
literal|0
condition|)
block|{
name|metadata
operator|.
name|set
argument_list|(
name|name
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

