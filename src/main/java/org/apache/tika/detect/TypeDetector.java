begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_comment
comment|/**  * Content type detection based on a content type hint. This detector simply  * trusts any valid content type hint given in the input metadata, and returns  * that as the likely type of the input document.  *  * @since Apache Tika 0.3  */
end_comment

begin_class
specifier|public
class|class
name|TypeDetector
implements|implements
name|Detector
block|{
comment|/**      * Detects the content type of an input document based on a type hint      * given in the input metadata. The CONTENT_TYPE attribute of the given      * input metadata is expected to contain the type of the input document.      * If that attribute exists and contains a valid type name, then that      * type is returned.      *      * @param input ignored      * @param metadata input metadata, possibly with a CONTENT_TYPE value      * @return detected media type, or<code>application/octet-stream</code>      */
specifier|public
name|MediaType
name|detect
parameter_list|(
name|InputStream
name|input
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
block|{
comment|// Look for a type hint in the input metadata
name|String
name|hint
init|=
name|metadata
operator|.
name|get
argument_list|(
name|Metadata
operator|.
name|CONTENT_TYPE
argument_list|)
decl_stmt|;
if|if
condition|(
name|hint
operator|!=
literal|null
condition|)
block|{
name|MediaType
name|type
init|=
name|MediaType
operator|.
name|parse
argument_list|(
name|hint
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|!=
literal|null
condition|)
block|{
return|return
name|type
return|;
block|}
block|}
return|return
name|MediaType
operator|.
name|OCTET_STREAM
return|;
block|}
block|}
end_class

end_unit

