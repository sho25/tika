begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_comment
comment|/**  * Content handler decorator that only passes the  * {@link #characters(char[], int, int)} and  * {@link #ignorableWhitespace(char[], int, int)} events to  * the decorated content handler.  * It additionally inserts a \n character at the end of each XHTML block element  * (</p>,</div>,...).  * This content handler should be used as delegate for {@link BodyContentHandler}.  */
end_comment

begin_class
specifier|public
class|class
name|XHTMLToTextContentHandler
extends|extends
name|TextContentHandler
block|{
specifier|public
name|XHTMLToTextContentHandler
parameter_list|(
name|ContentHandler
name|handler
parameter_list|)
block|{
name|super
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
operator|!
literal|"tr"
operator|.
name|equals
argument_list|(
name|lastLocalName
argument_list|)
operator|&&
operator|(
literal|"td"
operator|.
name|equals
argument_list|(
name|localName
argument_list|)
operator|||
literal|"th"
operator|.
name|equals
argument_list|(
name|localName
argument_list|)
operator|)
condition|)
name|characters
argument_list|(
name|TAB
argument_list|,
literal|0
argument_list|,
name|TAB
operator|.
name|length
argument_list|)
expr_stmt|;
name|lastLocalName
operator|=
name|localName
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|HTML_BLOCK_TAGS
operator|.
name|contains
argument_list|(
name|localName
argument_list|)
condition|)
name|characters
argument_list|(
name|NL
argument_list|,
literal|0
argument_list|,
name|NL
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|lastLocalName
init|=
literal|null
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|NL
init|=
operator|new
name|char
index|[]
block|{
literal|'\n'
block|}
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|char
index|[]
name|TAB
init|=
operator|new
name|char
index|[]
block|{
literal|'\t'
block|}
decl_stmt|;
comment|// special XHTML tags that start new lines
specifier|private
specifier|static
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|HTML_BLOCK_TAGS
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"p"
argument_list|,
literal|"div"
argument_list|,
literal|"fieldset"
argument_list|,
literal|"table"
argument_list|,
literal|"form"
argument_list|,
literal|"pre"
argument_list|,
literal|"blockquote"
argument_list|,
literal|"address"
argument_list|,
literal|"ul"
argument_list|,
literal|"ol"
argument_list|,
literal|"dl"
argument_list|,
literal|"li"
argument_list|,
literal|"dt"
argument_list|,
literal|"dd"
argument_list|,
literal|"h1"
argument_list|,
literal|"h2"
argument_list|,
literal|"h3"
argument_list|,
literal|"h4"
argument_list|,
literal|"h5"
argument_list|,
literal|"h6"
argument_list|,
literal|"noscript"
argument_list|,
literal|"noframes"
argument_list|,
literal|"hr"
argument_list|,
literal|"br"
argument_list|,
literal|"tr"
argument_list|)
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

