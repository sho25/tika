begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|Clipboard
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|DataFlavor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|datatransfer
operator|.
name|Transferable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|InputEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JEditorPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|TransferHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|DefaultTableModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|OutputKeys
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXTransformerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|TransformerHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|stream
operator|.
name|StreamResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AutoDetectParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_class
specifier|public
class|class
name|ParsingTransferHandler
extends|extends
name|TransferHandler
block|{
specifier|private
specifier|final
name|Parser
name|parser
init|=
operator|new
name|AutoDetectParser
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|TransferHandler
name|delegate
decl_stmt|;
specifier|private
specifier|final
name|DefaultTableModel
name|table
decl_stmt|;
specifier|private
specifier|final
name|JEditorPane
name|editor
decl_stmt|;
specifier|public
name|ParsingTransferHandler
parameter_list|(
name|TransferHandler
name|delegate
parameter_list|,
name|DefaultTableModel
name|table
parameter_list|,
name|JEditorPane
name|editor
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
name|this
operator|.
name|editor
operator|=
name|editor
expr_stmt|;
block|}
specifier|public
name|boolean
name|canImport
parameter_list|(
name|TransferSupport
name|support
parameter_list|)
block|{
return|return
name|canImport
argument_list|(
literal|null
argument_list|,
name|support
operator|.
name|getDataFlavors
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|canImport
parameter_list|(
name|JComponent
name|component
parameter_list|,
name|DataFlavor
index|[]
name|flavors
parameter_list|)
block|{
for|for
control|(
name|DataFlavor
name|flavor
range|:
name|flavors
control|)
block|{
if|if
condition|(
name|flavor
operator|.
name|equals
argument_list|(
name|DataFlavor
operator|.
name|javaFileListFlavor
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|importData
parameter_list|(
name|TransferSupport
name|support
parameter_list|)
block|{
return|return
name|importData
argument_list|(
literal|null
argument_list|,
name|support
operator|.
name|getTransferable
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|boolean
name|importData
parameter_list|(
name|JComponent
name|component
parameter_list|,
name|Transferable
name|transferable
parameter_list|)
block|{
try|try
block|{
name|List
argument_list|<
name|?
argument_list|>
name|files
init|=
operator|(
name|List
argument_list|<
name|?
argument_list|>
operator|)
name|transferable
operator|.
name|getTransferData
argument_list|(
name|DataFlavor
operator|.
name|javaFileListFlavor
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|file
range|:
name|files
control|)
block|{
name|importFile
argument_list|(
operator|(
name|File
operator|)
name|file
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
specifier|private
name|void
name|importFile
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|input
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
try|try
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|set
argument_list|(
name|Metadata
operator|.
name|RESOURCE_NAME_KEY
argument_list|,
name|file
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|SAXTransformerFactory
name|factory
init|=
operator|(
name|SAXTransformerFactory
operator|)
name|SAXTransformerFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|TransformerHandler
name|handler
init|=
name|factory
operator|.
name|newTransformerHandler
argument_list|()
decl_stmt|;
name|handler
operator|.
name|getTransformer
argument_list|()
operator|.
name|setOutputProperty
argument_list|(
name|OutputKeys
operator|.
name|METHOD
argument_list|,
literal|"html"
argument_list|)
expr_stmt|;
name|handler
operator|.
name|setResult
argument_list|(
operator|new
name|StreamResult
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
name|parser
operator|.
name|parse
argument_list|(
name|input
argument_list|,
name|handler
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|table
operator|.
name|setRowCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|name
range|:
name|metadata
operator|.
name|names
argument_list|()
control|)
block|{
name|table
operator|.
name|addRow
argument_list|(
operator|new
name|Object
index|[]
block|{
name|name
block|,
name|metadata
operator|.
name|get
argument_list|(
name|name
argument_list|)
block|}
argument_list|)
expr_stmt|;
block|}
name|editor
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|input
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|exportAsDrag
parameter_list|(
name|JComponent
name|arg0
parameter_list|,
name|InputEvent
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
block|{
name|delegate
operator|.
name|exportAsDrag
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|exportToClipboard
parameter_list|(
name|JComponent
name|arg0
parameter_list|,
name|Clipboard
name|arg1
parameter_list|,
name|int
name|arg2
parameter_list|)
throws|throws
name|IllegalStateException
block|{
name|delegate
operator|.
name|exportToClipboard
argument_list|(
name|arg0
argument_list|,
name|arg1
argument_list|,
name|arg2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|int
name|getSourceActions
parameter_list|(
name|JComponent
name|arg0
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getSourceActions
argument_list|(
name|arg0
argument_list|)
return|;
block|}
specifier|public
name|Icon
name|getVisualRepresentation
parameter_list|(
name|Transferable
name|arg0
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|getVisualRepresentation
argument_list|(
name|arg0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

