begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Detect mime type from file  *   * @author Rida Benjelloun (ridabenjelloun@apache.org)  */
end_comment

begin_class
specifier|public
class|class
name|MimeTypesUtils
block|{
specifier|public
specifier|static
name|String
name|getMimeType
parameter_list|(
name|File
name|file
parameter_list|)
block|{
comment|// FIXME: See TIKA-8
name|String
name|name
init|=
name|file
operator|.
name|getName
argument_list|()
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".txt"
argument_list|)
condition|)
block|{
return|return
literal|"text/plain"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".pdf"
argument_list|)
condition|)
block|{
return|return
literal|"application/pdf"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".htm"
argument_list|)
condition|)
block|{
return|return
literal|"text/html"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".html"
argument_list|)
condition|)
block|{
return|return
literal|"text/html"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".xhtml"
argument_list|)
condition|)
block|{
return|return
literal|"application/xhtml+xml"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".xml"
argument_list|)
condition|)
block|{
return|return
literal|"application/xml"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".doc"
argument_list|)
condition|)
block|{
return|return
literal|"application/msword"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".ppt"
argument_list|)
condition|)
block|{
return|return
literal|"application/vnd.ms-powerpoint"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".xls"
argument_list|)
condition|)
block|{
return|return
literal|"application/vnd.ms-excel"
return|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|endsWith
argument_list|(
literal|".zip"
argument_list|)
condition|)
block|{
return|return
literal|"application/zip"
return|;
block|}
else|else
block|{
return|return
literal|"application/octet-stream"
return|;
block|}
block|}
block|}
end_class

end_unit

