begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|exception
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  * Unit tests for the {@link CauseIOException} class.  */
end_comment

begin_class
specifier|public
class|class
name|CauseIOExceptionTest
extends|extends
name|TestCase
block|{
comment|/**      * Test for the {@link CauseIOException#IOException(String)} constructor.      */
specifier|public
name|void
name|testIOExceptionString
parameter_list|()
block|{
name|CauseIOException
name|exception
init|=
operator|new
name|CauseIOException
argument_list|(
literal|"message"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"message"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|exception
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Test for the {@link IOException#IOException(String, Throwable))}      * constructor.      */
specifier|public
name|void
name|testIOExceptionStringThrowable
parameter_list|()
block|{
name|Throwable
name|cause
init|=
operator|new
name|IllegalArgumentException
argument_list|(
literal|"cause"
argument_list|)
decl_stmt|;
name|CauseIOException
name|exception
init|=
operator|new
name|CauseIOException
argument_list|(
literal|"message"
argument_list|,
name|cause
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"message"
argument_list|,
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|cause
argument_list|,
name|exception
operator|.
name|getCause
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

