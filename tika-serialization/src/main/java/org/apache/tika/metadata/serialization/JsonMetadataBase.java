begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|serialization
package|;
end_package

begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|Gson
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|gson
operator|.
name|GsonBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_class
specifier|public
class|class
name|JsonMetadataBase
block|{
specifier|static
name|Gson
name|defaultInit
parameter_list|()
block|{
name|GsonBuilder
name|builder
init|=
operator|new
name|GsonBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|registerTypeHierarchyAdapter
argument_list|(
name|Metadata
operator|.
name|class
argument_list|,
operator|new
name|JsonMetadataSerializer
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|registerTypeHierarchyAdapter
argument_list|(
name|Metadata
operator|.
name|class
argument_list|,
operator|new
name|JsonMetadataDeserializer
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|static
name|Gson
name|prettyInit
parameter_list|()
block|{
name|GsonBuilder
name|builder
init|=
operator|new
name|GsonBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|registerTypeHierarchyAdapter
argument_list|(
name|Metadata
operator|.
name|class
argument_list|,
operator|new
name|SortedJsonMetadataSerializer
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|registerTypeHierarchyAdapter
argument_list|(
name|Metadata
operator|.
name|class
argument_list|,
operator|new
name|JsonMetadataDeserializer
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|setPrettyPrinting
argument_list|()
expr_stmt|;
return|return
name|builder
operator|.
name|create
argument_list|()
return|;
block|}
specifier|private
specifier|static
class|class
name|SortedJsonMetadataSerializer
extends|extends
name|JsonMetadataSerializer
block|{
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getNames
parameter_list|(
name|Metadata
name|m
parameter_list|)
block|{
name|String
index|[]
name|names
init|=
name|m
operator|.
name|names
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|names
argument_list|,
operator|new
name|PrettyMetadataKeyComparator
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|names
return|;
block|}
block|}
block|}
end_class

end_unit

