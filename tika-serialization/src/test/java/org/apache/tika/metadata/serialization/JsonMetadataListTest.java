begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|serialization
package|;
end_package

begin_comment
comment|/* * Licensed to the Apache Software Foundation (ASF) under one or more * contributor license agreements.  See the NOTICE file distributed with * this work for additional information regarding copyright ownership. * The ASF licenses this file to You under the Apache License, Version 2.0 * (the "License"); you may not use this file except in compliance with * the License.  You may obtain a copy of the License at * *     http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */
end_comment

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|RecursiveParserWrapperHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JsonMetadataListTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testListBasic
parameter_list|()
throws|throws
name|Exception
block|{
name|Metadata
name|m1
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k2"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|Metadata
name|m2
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k4"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|metadataList
init|=
operator|new
name|LinkedList
argument_list|<
name|Metadata
argument_list|>
argument_list|()
decl_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JsonMetadataList
operator|.
name|toJson
argument_list|(
name|metadataList
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|deserialized
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
operator|new
name|StringReader
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|metadataList
argument_list|,
name|deserialized
argument_list|)
expr_stmt|;
comment|//now test streaming serializer
name|writer
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
try|try
init|(
name|JsonStreamingSerializer
name|streamingSerializer
init|=
operator|new
name|JsonStreamingSerializer
argument_list|(
name|writer
argument_list|)
init|)
block|{
name|streamingSerializer
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|streamingSerializer
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
block|}
name|deserialized
operator|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
operator|new
name|StringReader
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|metadataList
argument_list|,
name|deserialized
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListNull
parameter_list|()
throws|throws
name|Exception
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JsonMetadataList
operator|.
name|toJson
argument_list|(
literal|null
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"null"
argument_list|,
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|m
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testListCorrupted
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|json
init|=
literal|"[{\"k1\":[\"v1\",\"v2\",\"v3\",\"v4\",\"v4\"],\"k2\":\"v1\"},"
operator|+
literal|"\"k3\":[\"v1\",\"v2\",\"v3\",\"v4\",\"v4\"],\"k4\":\"v1\"}]"
decl_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|m
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
literal|null
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|m
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPrettyPrint
parameter_list|()
throws|throws
name|Exception
block|{
name|Metadata
name|m1
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"tika:content"
argument_list|,
literal|"this is the content"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk1"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk1"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk1"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"zk2"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|Metadata
name|m2
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k4"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|metadataList
init|=
operator|new
name|LinkedList
argument_list|<
name|Metadata
argument_list|>
argument_list|()
decl_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|metadataList
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|JsonMetadataList
operator|.
name|toJson
argument_list|(
name|metadataList
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[{\"tika:content\":\"this is the content\",\"zk1\":[\"v1\",\"v2\","
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
name|JsonMetadataList
operator|.
name|setPrettyPrinting
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|JsonMetadataList
operator|.
name|toJson
argument_list|(
name|metadataList
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[\n"
operator|+
literal|"  {\n"
operator|+
literal|"    \"zk1\": [\n"
operator|+
literal|"      \"v1\",\n"
operator|+
literal|"      \"v2\","
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"    \"zk2\": \"v1\",\n"
operator|+
literal|"    \"tika:content\": \"this is the content\"\n"
operator|+
literal|"  },"
argument_list|)
argument_list|)
expr_stmt|;
comment|//now set it back to false
name|JsonMetadataList
operator|.
name|setPrettyPrinting
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|writer
operator|=
operator|new
name|StringWriter
argument_list|()
expr_stmt|;
name|JsonMetadataList
operator|.
name|toJson
argument_list|(
name|metadataList
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"[{\"tika:content\":\"this is the content\",\"zk1\":[\"v1\",\"v2\","
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSwitchingOrderOfMainDoc
parameter_list|()
throws|throws
name|Exception
block|{
name|Metadata
name|m1
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k1"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
literal|"k2"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m1
operator|.
name|add
argument_list|(
name|RecursiveParserWrapperHandler
operator|.
name|EMBEDDED_RESOURCE_PATH
argument_list|,
literal|"/embedded-1"
argument_list|)
expr_stmt|;
name|Metadata
name|m2
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v2"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v3"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k3"
argument_list|,
literal|"v4"
argument_list|)
expr_stmt|;
name|m2
operator|.
name|add
argument_list|(
literal|"k4"
argument_list|,
literal|"v1"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|truth
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|truth
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
name|truth
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|StringWriter
name|stringWriter
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
try|try
init|(
name|JsonStreamingSerializer
name|serializer
init|=
operator|new
name|JsonStreamingSerializer
argument_list|(
name|stringWriter
argument_list|)
init|)
block|{
name|serializer
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|serializer
operator|.
name|add
argument_list|(
name|m2
argument_list|)
expr_stmt|;
block|}
name|Reader
name|reader
init|=
operator|new
name|StringReader
argument_list|(
name|stringWriter
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|deserialized
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|truth
argument_list|,
name|deserialized
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

