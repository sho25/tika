begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ArrayBlockingQueue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|TikaTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
operator|.
name|fs
operator|.
name|RecursiveParserWrapperFSConsumer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|TikaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|TikaCoreProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|serialization
operator|.
name|JsonMetadataList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|RecursiveParserWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BasicContentHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|RecursiveParserWrapperFSConsumerTest
extends|extends
name|TikaTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testEmbeddedWithNPE
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|path
init|=
literal|"/test-documents/embedded_with_npe.xml"
decl_stmt|;
specifier|final
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|RESOURCE_NAME_KEY
argument_list|,
literal|"embedded_with_npe.xml"
argument_list|)
expr_stmt|;
name|ArrayBlockingQueue
argument_list|<
name|FileResource
argument_list|>
name|queue
init|=
operator|new
name|ArrayBlockingQueue
argument_list|<
name|FileResource
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|queue
operator|.
name|add
argument_list|(
operator|new
name|FileResource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getResourceId
parameter_list|()
block|{
return|return
literal|"testFile"
return|;
block|}
annotation|@
name|Override
specifier|public
name|Metadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|openInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|queue
operator|.
name|add
argument_list|(
operator|new
name|PoisonFileResource
argument_list|()
argument_list|)
expr_stmt|;
name|MockOSFactory
name|mockOSFactory
init|=
operator|new
name|MockOSFactory
argument_list|()
decl_stmt|;
name|RecursiveParserWrapperFSConsumer
name|consumer
init|=
operator|new
name|RecursiveParserWrapperFSConsumer
argument_list|(
name|queue
argument_list|,
operator|new
name|AutoDetectParserFactory
argument_list|()
argument_list|,
operator|new
name|BasicContentHandlerFactory
argument_list|(
name|BasicContentHandlerFactory
operator|.
name|HANDLER_TYPE
operator|.
name|TEXT
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|mockOSFactory
argument_list|,
operator|new
name|TikaConfig
argument_list|()
argument_list|)
decl_stmt|;
name|IFileProcessorFutureResult
name|result
init|=
name|consumer
operator|.
name|call
argument_list|()
decl_stmt|;
name|mockOSFactory
operator|.
name|getStreams
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|flush
argument_list|()
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|mockOSFactory
operator|.
name|getStreams
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|results
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|IOUtils
operator|.
name|UTF_8
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"another null pointer"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|get
argument_list|(
name|RecursiveParserWrapper
operator|.
name|EMBEDDED_EXCEPTION
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nikolai Lobachevsky"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"author"
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|4
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"embeddedAuthor"
operator|+
name|i
argument_list|,
name|results
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|get
argument_list|(
literal|"author"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"some_embedded_content"
operator|+
name|i
argument_list|,
name|results
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|get
argument_list|(
name|RecursiveParserWrapper
operator|.
name|TIKA_CONTENT
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testEmbeddedThenNPE
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|path
init|=
literal|"/test-documents/embedded_then_npe.xml"
decl_stmt|;
specifier|final
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|RESOURCE_NAME_KEY
argument_list|,
literal|"embedded_then_npe.xml"
argument_list|)
expr_stmt|;
name|ArrayBlockingQueue
argument_list|<
name|FileResource
argument_list|>
name|queue
init|=
operator|new
name|ArrayBlockingQueue
argument_list|<
name|FileResource
argument_list|>
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|queue
operator|.
name|add
argument_list|(
operator|new
name|FileResource
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getResourceId
parameter_list|()
block|{
return|return
literal|"testFile"
return|;
block|}
annotation|@
name|Override
specifier|public
name|Metadata
name|getMetadata
parameter_list|()
block|{
return|return
name|metadata
return|;
block|}
annotation|@
name|Override
specifier|public
name|InputStream
name|openInputStream
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|path
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|queue
operator|.
name|add
argument_list|(
operator|new
name|PoisonFileResource
argument_list|()
argument_list|)
expr_stmt|;
name|MockOSFactory
name|mockOSFactory
init|=
operator|new
name|MockOSFactory
argument_list|()
decl_stmt|;
name|RecursiveParserWrapperFSConsumer
name|consumer
init|=
operator|new
name|RecursiveParserWrapperFSConsumer
argument_list|(
name|queue
argument_list|,
operator|new
name|AutoDetectParserFactory
argument_list|()
argument_list|,
operator|new
name|BasicContentHandlerFactory
argument_list|(
name|BasicContentHandlerFactory
operator|.
name|HANDLER_TYPE
operator|.
name|TEXT
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|mockOSFactory
argument_list|,
operator|new
name|TikaConfig
argument_list|()
argument_list|)
decl_stmt|;
name|IFileProcessorFutureResult
name|result
init|=
name|consumer
operator|.
name|call
argument_list|()
decl_stmt|;
name|mockOSFactory
operator|.
name|getStreams
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|flush
argument_list|()
expr_stmt|;
name|byte
index|[]
name|bytes
init|=
name|mockOSFactory
operator|.
name|getStreams
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Metadata
argument_list|>
name|results
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
argument_list|,
name|IOUtils
operator|.
name|UTF_8
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"another null pointer"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|TIKA_META_EXCEPTION_PREFIX
operator|+
literal|"runtime"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nikolai Lobachevsky"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"author"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"embeddedAuthor"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|get
argument_list|(
literal|"author"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"some_embedded_content"
argument_list|,
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|get
argument_list|(
name|RecursiveParserWrapper
operator|.
name|TIKA_CONTENT
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
class|class
name|MockOSFactory
implements|implements
name|OutputStreamFactory
block|{
name|List
argument_list|<
name|ByteArrayOutputStream
argument_list|>
name|streams
init|=
operator|new
name|ArrayList
argument_list|<
name|ByteArrayOutputStream
argument_list|>
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|public
name|OutputStream
name|getOutputStream
parameter_list|(
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|streams
operator|.
name|add
argument_list|(
name|bos
argument_list|)
expr_stmt|;
return|return
name|bos
return|;
block|}
specifier|public
name|List
argument_list|<
name|ByteArrayOutputStream
argument_list|>
name|getStreams
parameter_list|()
block|{
return|return
name|streams
return|;
block|}
block|}
block|}
end_class

end_unit

