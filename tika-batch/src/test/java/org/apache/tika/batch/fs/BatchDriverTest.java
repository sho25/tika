begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
operator|.
name|fs
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
operator|.
name|BatchProcessDriverCLI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|BatchDriverTest
extends|extends
name|FSBatchTestBase
block|{
comment|//for debugging, turn logging off/on via resources/log4j.properties for the driver
comment|//and log4j_process.properties for the process.
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
specifier|public
name|void
name|oneHeavyHangTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//batch runner hits one heavy hang file, keep going
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"daemon-"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Files
operator|.
name|isDirectory
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
comment|//make sure output directory is empty!
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"one_heavy_hang"
argument_list|,
name|outputDir
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test2_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
specifier|public
name|void
name|restartOnFullHangTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//batch runner hits more heavy hangs than threads; needs to restart
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"daemon-"
argument_list|)
decl_stmt|;
comment|//make sure output directory is empty!
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"heavy_heavy_hangs"
argument_list|,
name|outputDir
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
comment|//could be one or two depending on timing
name|assertTrue
argument_list|(
name|driver
operator|.
name|getNumRestarts
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test6_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
specifier|public
name|void
name|noRestartTest
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"daemon-"
argument_list|)
decl_stmt|;
comment|//make sure output directory is empty!
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"no_restart"
argument_list|,
name|outputDir
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|String
index|[]
name|mod
init|=
name|Arrays
operator|.
name|copyOf
argument_list|(
name|args
argument_list|,
name|args
operator|.
name|length
operator|+
literal|2
argument_list|)
decl_stmt|;
name|mod
index|[
name|args
operator|.
name|length
index|]
operator|=
literal|"-numConsumers"
expr_stmt|;
name|mod
index|[
name|args
operator|.
name|length
operator|+
literal|1
index|]
operator|=
literal|"1"
expr_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|mod
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|test2
init|=
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test2_norestart.xml.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"test2_norestart.xml"
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|test2
argument_list|)
argument_list|)
expr_stmt|;
name|Path
name|test3
init|=
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test3_ok.xml.xml"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
literal|"test3_ok.xml"
argument_list|,
name|Files
operator|.
name|exists
argument_list|(
name|test3
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|15000
argument_list|)
specifier|public
name|void
name|restartOnOOMTest
parameter_list|()
throws|throws
name|Exception
block|{
comment|//batch runner hits more heavy hangs than threads; needs to restart
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"daemon-"
argument_list|)
decl_stmt|;
comment|//make sure output directory is empty!
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|args
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"oom"
argument_list|,
name|outputDir
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test2_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|allHeavyHangsTestWithStarvedCrawler
parameter_list|()
throws|throws
name|Exception
block|{
comment|//this tests that if all consumers are hung and the crawler is
comment|//waiting to add to the queue, there isn't deadlock.  The BatchProcess should
comment|//just shutdown, and the driver should restart
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"allHeavyHangsStarvedCrawler-"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxQueueSize"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"heavy_heavy_hangs"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test6_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
specifier|public
name|void
name|maxRestarts
parameter_list|()
throws|throws
name|Exception
block|{
comment|//tests that maxRestarts works
comment|//if -maxRestarts is not correctly removed from the commandline,
comment|//FSBatchProcessCLI's cli parser will throw an Unrecognized option exception
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"allHeavyHangsStarvedCrawler-"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxQueueSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxRestarts"
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"max_restarts"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|driver
operator|.
name|getUserInterrupted
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
specifier|public
name|void
name|maxRestartsBadParameter
parameter_list|()
throws|throws
name|Exception
block|{
comment|//tests that maxRestarts must be followed by an Integer
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"allHeavyHangsStarvedCrawler-"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxQueueSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxRestarts"
argument_list|,
literal|"zebra"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"max_restarts"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|boolean
name|ex
init|=
literal|false
decl_stmt|;
try|try
block|{
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
name|ex
operator|=
literal|true
expr_stmt|;
block|}
name|assertTrue
argument_list|(
literal|"IllegalArgumentException should have been thrown"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
specifier|public
name|void
name|testNoRestartIfProcessFails
parameter_list|()
throws|throws
name|Exception
block|{
comment|//tests that if something goes horribly wrong with FSBatchProcessCLI
comment|//the driver will not restart it again and again
comment|//this calls a bad xml file which should trigger a no restart exit.
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"nostart-norestart-"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxQueueSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"basic"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-broken.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|30000
argument_list|)
specifier|public
name|void
name|testNoRestartIfProcessFailsTake2
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"nostart-norestart-"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-maxQueueSize"
argument_list|,
literal|"10"
argument_list|)
expr_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-somethingOrOther"
argument_list|,
literal|"I don't Know"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"basic"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|driver
operator|.
name|getNumRestarts
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
specifier|public
name|void
name|testSystemExit
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"system-exit"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"system_exit"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|driver
operator|.
name|getNumRestarts
argument_list|()
operator|>
literal|1
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"problem with "
operator|+
name|i
argument_list|,
literal|0
argument_list|,
name|Files
operator|.
name|size
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test"
operator|+
name|i
operator|+
literal|"_system_exit.xml.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//sys exit may prevent test3 from running successfully
for|for
control|(
name|int
name|i
init|=
literal|5
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test"
operator|+
name|i
operator|+
literal|"_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
argument_list|(
name|timeout
operator|=
literal|60000
argument_list|)
annotation|@
name|Ignore
argument_list|(
literal|"Java 11-ea+23 makes outputstreams uninterruptible"
argument_list|)
specifier|public
name|void
name|testThreadInterrupt
parameter_list|()
throws|throws
name|Exception
block|{
name|Path
name|outputDir
init|=
name|getNewOutputDir
argument_list|(
literal|"thread-interrupt"
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|args
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|args
operator|.
name|put
argument_list|(
literal|"-numConsumers"
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|String
index|[]
name|commandLine
init|=
name|getDefaultCommandLineArgsArr
argument_list|(
literal|"thread_interrupt"
argument_list|,
name|outputDir
argument_list|,
name|args
argument_list|)
decl_stmt|;
name|BatchProcessDriverCLI
name|driver
init|=
name|getNewDriver
argument_list|(
literal|"/tika-batch-config-test.xml"
argument_list|,
name|commandLine
argument_list|)
decl_stmt|;
name|driver
operator|.
name|execute
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|countChildren
argument_list|(
name|outputDir
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
literal|"problem with "
operator|+
name|i
argument_list|,
literal|0
argument_list|,
name|Files
operator|.
name|size
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test"
operator|+
name|i
operator|+
literal|"_thread_interrupt.xml.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|//sys exit may prevent test3 from running successfully
for|for
control|(
name|int
name|i
init|=
literal|5
init|;
name|i
operator|<
literal|6
condition|;
name|i
operator|++
control|)
block|{
name|assertContains
argument_list|(
literal|"first test file"
argument_list|,
name|readFileToString
argument_list|(
name|outputDir
operator|.
name|resolve
argument_list|(
literal|"test"
operator|+
name|i
operator|+
literal|"_ok.xml.xml"
argument_list|)
argument_list|,
name|UTF_8
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

