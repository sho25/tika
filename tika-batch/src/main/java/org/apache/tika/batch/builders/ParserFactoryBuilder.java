begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
operator|.
name|builders
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
operator|.
name|ParserFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|util
operator|.
name|ClassLoaderUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|util
operator|.
name|XMLDOMUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_class
specifier|public
class|class
name|ParserFactoryBuilder
implements|implements
name|IParserFactoryBuilder
block|{
annotation|@
name|Override
specifier|public
name|ParserFactory
name|build
parameter_list|(
name|Node
name|node
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|runtimeAttrs
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|localAttrs
init|=
name|XMLDOMUtil
operator|.
name|mapifyAttrs
argument_list|(
name|node
argument_list|,
name|runtimeAttrs
argument_list|)
decl_stmt|;
name|String
name|className
init|=
name|localAttrs
operator|.
name|get
argument_list|(
literal|"class"
argument_list|)
decl_stmt|;
name|ParserFactory
name|pf
init|=
name|ClassLoaderUtil
operator|.
name|buildClass
argument_list|(
name|ParserFactory
operator|.
name|class
argument_list|,
name|className
argument_list|)
decl_stmt|;
if|if
condition|(
name|localAttrs
operator|.
name|containsKey
argument_list|(
literal|"parseRecursively"
argument_list|)
condition|)
block|{
name|String
name|bString
init|=
name|localAttrs
operator|.
name|get
argument_list|(
literal|"parseRecursively"
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
decl_stmt|;
if|if
condition|(
name|bString
operator|.
name|equals
argument_list|(
literal|"true"
argument_list|)
condition|)
block|{
name|pf
operator|.
name|setParseRecursively
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|bString
operator|.
name|equals
argument_list|(
literal|"false"
argument_list|)
condition|)
block|{
name|pf
operator|.
name|setParseRecursively
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"parseRecursively must have value of \"true\" or \"false\": "
operator|+
name|bString
argument_list|)
throw|;
block|}
block|}
return|return
name|pf
return|;
block|}
block|}
end_class

end_unit

