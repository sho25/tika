begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * XMP property definition. Each instance of this class defines a single  * metadata property like "dc:format". In addition to the property name,  * the {@link ValueType value type} and category (internal or external)  * of the property are included in the property definition. The available  * choice values are also stored for open and closed choice value types.  *  * @since Apache Tika 0.7  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|Property
block|{
specifier|public
specifier|static
enum|enum
name|ValueType
block|{
name|BOOLEAN
block|,
name|OPEN_CHOICE
block|,
name|CLOSED_CHOICE
block|,
name|DATE
block|,
name|INTEGER
block|,
name|LOCALE
block|,
name|MIME_TYPE
block|,
name|PROPER_NAME
block|,
name|RATIONAL
block|,
name|REAL
block|,
name|TEXT
block|,
name|URI
block|,
name|URL
block|,
name|XPATH
block|}
specifier|private
specifier|final
name|String
name|name
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|internal
decl_stmt|;
specifier|private
specifier|final
name|ValueType
name|valueType
decl_stmt|;
comment|/**      * The available choices for the open and closed choice value types.      */
specifier|private
specifier|final
name|Set
argument_list|<
name|String
argument_list|>
name|choices
decl_stmt|;
specifier|private
name|Property
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|internal
parameter_list|,
name|ValueType
name|valueType
parameter_list|,
name|String
index|[]
name|choices
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|internal
operator|=
name|internal
expr_stmt|;
name|this
operator|.
name|valueType
operator|=
name|valueType
expr_stmt|;
if|if
condition|(
name|choices
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|choices
operator|=
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|choices
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|choices
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|boolean
name|isInternal
parameter_list|()
block|{
return|return
name|internal
return|;
block|}
specifier|public
name|boolean
name|isExternal
parameter_list|()
block|{
return|return
operator|!
name|internal
return|;
block|}
specifier|public
name|ValueType
name|getValueType
parameter_list|()
block|{
return|return
name|valueType
return|;
block|}
comment|/**      * Returns the (immutable) set of choices for the values of this property.      * Only defined for {@link ValueType#OPEN_CHOICE open} and      * {@link ValueType#CLOSED_CHOICE closed choice} value types.      *      * @return available choices, or<code>null</code>      */
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getChoices
parameter_list|()
block|{
return|return
name|choices
return|;
block|}
specifier|private
name|Property
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|internal
parameter_list|,
name|ValueType
name|valueType
parameter_list|)
block|{
name|this
argument_list|(
name|name
argument_list|,
name|internal
argument_list|,
name|valueType
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|Property
name|internalBoolean
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|BOOLEAN
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalClosedChoise
parameter_list|(
name|String
name|name
parameter_list|,
name|String
modifier|...
name|choices
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|CLOSED_CHOICE
argument_list|,
name|choices
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalDate
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|DATE
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalInteger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|INTEGER
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalRational
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|RATIONAL
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalOpenChoise
parameter_list|(
name|String
name|name
parameter_list|,
name|String
modifier|...
name|choices
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|OPEN_CHOICE
argument_list|,
name|choices
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalReal
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|REAL
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalText
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|TEXT
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|internalURI
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|true
argument_list|,
name|ValueType
operator|.
name|URI
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|externalClosedChoise
parameter_list|(
name|String
name|name
parameter_list|,
name|String
modifier|...
name|choices
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|false
argument_list|,
name|ValueType
operator|.
name|CLOSED_CHOICE
argument_list|,
name|choices
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|externalDate
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|false
argument_list|,
name|ValueType
operator|.
name|DATE
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|externalInteger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|false
argument_list|,
name|ValueType
operator|.
name|INTEGER
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|Property
name|externalText
parameter_list|(
name|String
name|name
parameter_list|)
block|{
return|return
operator|new
name|Property
argument_list|(
name|name
argument_list|,
literal|false
argument_list|,
name|ValueType
operator|.
name|TEXT
argument_list|)
return|;
block|}
block|}
end_class

end_unit

