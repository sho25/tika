begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|imageio
operator|.
name|spi
operator|.
name|ServiceRegistry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|ServiceLoader
import|;
end_import

begin_comment
comment|/**  * A composite encoding detector based on all the {@link EncodingDetector} implementations  * available through the {@link ServiceRegistry service provider mechanism}.  Those  * loaded via the service provider mechanism are ordered by how they appear in the  * file, if there is a single service file.  If multiple, there is no guarantee of order.  *  *  * If you need to control the order of the Detectors, you should instead  *  construct your own {@link CompositeDetector} and pass in the list  *  of Detectors in the required order.  *  * @since Apache Tika 1.15  */
end_comment

begin_class
specifier|public
class|class
name|DefaultEncodingDetector
extends|extends
name|CompositeEncodingDetector
block|{
specifier|public
name|DefaultEncodingDetector
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|ServiceLoader
argument_list|(
name|DefaultEncodingDetector
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DefaultEncodingDetector
parameter_list|(
name|ServiceLoader
name|loader
parameter_list|)
block|{
name|super
argument_list|(
name|loader
operator|.
name|loadServiceProviders
argument_list|(
name|EncodingDetector
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DefaultEncodingDetector
parameter_list|(
name|ServiceLoader
name|loader
parameter_list|,
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|EncodingDetector
argument_list|>
argument_list|>
name|excludeEncodingDetectors
parameter_list|)
block|{
name|super
argument_list|(
name|loader
operator|.
name|loadServiceProviders
argument_list|(
name|EncodingDetector
operator|.
name|class
argument_list|)
argument_list|,
name|excludeEncodingDetectors
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

