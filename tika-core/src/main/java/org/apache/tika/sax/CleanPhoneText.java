begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_comment
comment|/**  * Class to help de-obfuscate phone numbers in text.  */
end_comment

begin_class
specifier|public
class|class
name|CleanPhoneText
block|{
comment|// Regex to identify a phone number
specifier|static
specifier|final
name|String
name|cleanPhoneRegex
init|=
literal|"([2-9]\\d{2}[2-9]\\d{6})"
decl_stmt|;
comment|// Regex which attempts to ignore punctuation and other distractions.
specifier|static
specifier|final
name|String
name|phoneRegex
init|=
literal|"([{(<]{0,3}[2-9][\\W_]{0,3}\\d[\\W_]{0,3}\\d[\\W_]{0,6}[2-9][\\W_]{0,3}\\d[\\W_]{0,3}\\d[\\W_]{0,6}\\d[\\W_]{0,3}\\d[\\W_]{0,3}\\d[\\W_]{0,3}\\d)"
decl_stmt|;
specifier|public
specifier|static
name|ArrayList
argument_list|<
name|String
argument_list|>
name|extractPhoneNumbers
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|text
operator|=
name|clean
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|int
name|idx
init|=
literal|0
decl_stmt|;
name|Pattern
name|p
init|=
name|Pattern
operator|.
name|compile
argument_list|(
name|cleanPhoneRegex
argument_list|)
decl_stmt|;
name|Matcher
name|m
init|=
name|p
operator|.
name|matcher
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|phoneNumbers
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
while|while
condition|(
name|m
operator|.
name|find
argument_list|(
name|idx
argument_list|)
condition|)
block|{
name|String
name|digits
init|=
name|m
operator|.
name|group
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|int
name|start
init|=
name|m
operator|.
name|start
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|int
name|end
init|=
name|m
operator|.
name|end
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|String
name|prefix
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|start
operator|>
literal|0
condition|)
block|{
name|prefix
operator|=
name|text
operator|.
name|substring
argument_list|(
name|start
operator|-
literal|1
argument_list|,
name|start
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|digits
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
operator|.
name|equals
argument_list|(
literal|"82"
argument_list|)
operator|&&
name|prefix
operator|.
name|equals
argument_list|(
literal|"*"
argument_list|)
condition|)
block|{
comment|// this number overlaps with a *82 sequence
name|idx
operator|+=
literal|2
expr_stmt|;
block|}
else|else
block|{
comment|// seems good
name|phoneNumbers
operator|.
name|add
argument_list|(
name|digits
argument_list|)
expr_stmt|;
name|idx
operator|=
name|end
expr_stmt|;
block|}
block|}
return|return
name|phoneNumbers
return|;
block|}
specifier|public
specifier|static
name|String
name|clean
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|text
operator|=
name|text
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
expr_stmt|;
for|for
control|(
name|String
index|[]
index|[]
name|group
range|:
name|cleanSubstitutions
control|)
block|{
for|for
control|(
name|String
index|[]
name|sub
range|:
name|group
control|)
block|{
name|text
operator|=
name|text
operator|.
name|replaceAll
argument_list|(
name|sub
index|[
literal|0
index|]
argument_list|,
name|sub
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Delete all non-digits and white space.
name|text
operator|=
name|text
operator|.
name|replaceAll
argument_list|(
literal|"[\\D+\\s]"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|text
return|;
block|}
specifier|public
specifier|static
specifier|final
name|String
index|[]
index|[]
index|[]
name|cleanSubstitutions
init|=
operator|new
name|String
index|[]
index|[]
index|[]
block|{
block|{
block|{
literal|"&#\\d{1,3};"
block|,
literal|""
block|}
block|}
block|,
comment|// first simply remove numeric entities
block|{
block|{
literal|"th0usand"
block|,
literal|"thousand"
block|}
block|,
comment|// handle common misspellings
block|{
literal|"th1rteen"
block|,
literal|"thirteen"
block|}
block|,
block|{
literal|"f0urteen"
block|,
literal|"fourteen"
block|}
block|,
block|{
literal|"e1ghteen"
block|,
literal|"eighteen"
block|}
block|,
block|{
literal|"n1neteen"
block|,
literal|"nineteen"
block|}
block|,
block|{
literal|"f1fteen"
block|,
literal|"fifteen"
block|}
block|,
block|{
literal|"s1xteen"
block|,
literal|"sixteen"
block|}
block|,
block|{
literal|"th1rty"
block|,
literal|"thirty"
block|}
block|,
block|{
literal|"e1ghty"
block|,
literal|"eighty"
block|}
block|,
block|{
literal|"n1nety"
block|,
literal|"ninety"
block|}
block|,
block|{
literal|"fourty"
block|,
literal|"forty"
block|}
block|,
block|{
literal|"f0urty"
block|,
literal|"forty"
block|}
block|,
block|{
literal|"e1ght"
block|,
literal|"eight"
block|}
block|,
block|{
literal|"f0rty"
block|,
literal|"forty"
block|}
block|,
block|{
literal|"f1fty"
block|,
literal|"fifty"
block|}
block|,
block|{
literal|"s1xty"
block|,
literal|"sixty"
block|}
block|,
block|{
literal|"zer0"
block|,
literal|"zero"
block|}
block|,
block|{
literal|"f0ur"
block|,
literal|"four"
block|}
block|,
block|{
literal|"f1ve"
block|,
literal|"five"
block|}
block|,
block|{
literal|"n1ne"
block|,
literal|"nine"
block|}
block|,
block|{
literal|"0ne"
block|,
literal|"one"
block|}
block|,
block|{
literal|"tw0"
block|,
literal|"two"
block|}
block|,
block|{
literal|"s1x"
block|,
literal|"six"
block|}
block|}
block|,
comment|// mixed compound numeral words
comment|// consider 7teen, etc.
block|{
block|{
literal|"twenty[\\W_]{0,3}1"
block|,
literal|"twenty-one"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}2"
block|,
literal|"twenty-two"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}3"
block|,
literal|"twenty-three"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}4"
block|,
literal|"twenty-four"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}5"
block|,
literal|"twenty-five"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}6"
block|,
literal|"twenty-six"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}7"
block|,
literal|"twenty-seven"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}8"
block|,
literal|"twenty-eight"
block|}
block|,
block|{
literal|"twenty[\\W_]{0,3}9"
block|,
literal|"twenty-nine"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}1"
block|,
literal|"thirty-one"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}2"
block|,
literal|"thirty-two"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}3"
block|,
literal|"thirty-three"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}4"
block|,
literal|"thirty-four"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}5"
block|,
literal|"thirty-five"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}6"
block|,
literal|"thirty-six"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}7"
block|,
literal|"thirty-seven"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}8"
block|,
literal|"thirty-eight"
block|}
block|,
block|{
literal|"thirty[\\W_]{0,3}9"
block|,
literal|"thirty-nine"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}1"
block|,
literal|"forty-one"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}2"
block|,
literal|"forty-two"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}3"
block|,
literal|"forty-three"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}4"
block|,
literal|"forty-four"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}5"
block|,
literal|"forty-five"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}6"
block|,
literal|"forty-six"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}7"
block|,
literal|"forty-seven"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}8"
block|,
literal|"forty-eight"
block|}
block|,
block|{
literal|"forty[\\W_]{0,3}9"
block|,
literal|"forty-nine"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}1"
block|,
literal|"fifty-one"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}2"
block|,
literal|"fifty-two"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}3"
block|,
literal|"fifty-three"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}4"
block|,
literal|"fifty-four"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}5"
block|,
literal|"fifty-five"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}6"
block|,
literal|"fifty-six"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}7"
block|,
literal|"fifty-seven"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}8"
block|,
literal|"fifty-eight"
block|}
block|,
block|{
literal|"fifty[\\W_]{0,3}9"
block|,
literal|"fifty-nine"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}1"
block|,
literal|"sixty-one"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}2"
block|,
literal|"sixty-two"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}3"
block|,
literal|"sixty-three"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}4"
block|,
literal|"sixty-four"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}5"
block|,
literal|"sixty-five"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}6"
block|,
literal|"sixty-six"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}7"
block|,
literal|"sixty-seven"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}8"
block|,
literal|"sixty-eight"
block|}
block|,
block|{
literal|"sixty[\\W_]{0,3}9"
block|,
literal|"sixty-nine"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}1"
block|,
literal|"seventy-one"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}2"
block|,
literal|"seventy-two"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}3"
block|,
literal|"seventy-three"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}4"
block|,
literal|"seventy-four"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}5"
block|,
literal|"seventy-five"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}6"
block|,
literal|"seventy-six"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}7"
block|,
literal|"seventy-seven"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}8"
block|,
literal|"seventy-eight"
block|}
block|,
block|{
literal|"seventy[\\W_]{0,3}9"
block|,
literal|"seventy-nine"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}1"
block|,
literal|"eighty-one"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}2"
block|,
literal|"eighty-two"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}3"
block|,
literal|"eighty-three"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}4"
block|,
literal|"eighty-four"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}5"
block|,
literal|"eighty-five"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}6"
block|,
literal|"eighty-six"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}7"
block|,
literal|"eighty-seven"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}8"
block|,
literal|"eighty-eight"
block|}
block|,
block|{
literal|"eighty[\\W_]{0,3}9"
block|,
literal|"eighty-nine"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}1"
block|,
literal|"ninety-one"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}2"
block|,
literal|"ninety-two"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}3"
block|,
literal|"ninety-three"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}4"
block|,
literal|"ninety-four"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}5"
block|,
literal|"ninety-five"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}6"
block|,
literal|"ninety-six"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}7"
block|,
literal|"ninety-seven"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}8"
block|,
literal|"ninety-eight"
block|}
block|,
block|{
literal|"ninety[\\W_]{0,3}9"
block|,
literal|"ninety-nine"
block|}
block|}
block|,
comment|// now resolve compound numeral words
block|{
block|{
literal|"twenty-one"
block|,
literal|"21"
block|}
block|,
block|{
literal|"twenty-two"
block|,
literal|"22"
block|}
block|,
block|{
literal|"twenty-three"
block|,
literal|"23"
block|}
block|,
block|{
literal|"twenty-four"
block|,
literal|"24"
block|}
block|,
block|{
literal|"twenty-five"
block|,
literal|"25"
block|}
block|,
block|{
literal|"twenty-six"
block|,
literal|"26"
block|}
block|,
block|{
literal|"twenty-seven"
block|,
literal|"27"
block|}
block|,
block|{
literal|"twenty-eight"
block|,
literal|"28"
block|}
block|,
block|{
literal|"twenty-nine"
block|,
literal|"29"
block|}
block|,
block|{
literal|"thirty-one"
block|,
literal|"31"
block|}
block|,
block|{
literal|"thirty-two"
block|,
literal|"32"
block|}
block|,
block|{
literal|"thirty-three"
block|,
literal|"33"
block|}
block|,
block|{
literal|"thirty-four"
block|,
literal|"34"
block|}
block|,
block|{
literal|"thirty-five"
block|,
literal|"35"
block|}
block|,
block|{
literal|"thirty-six"
block|,
literal|"36"
block|}
block|,
block|{
literal|"thirty-seven"
block|,
literal|"37"
block|}
block|,
block|{
literal|"thirty-eight"
block|,
literal|"38"
block|}
block|,
block|{
literal|"thirty-nine"
block|,
literal|"39"
block|}
block|,
block|{
literal|"forty-one"
block|,
literal|"41"
block|}
block|,
block|{
literal|"forty-two"
block|,
literal|"42"
block|}
block|,
block|{
literal|"forty-three"
block|,
literal|"43"
block|}
block|,
block|{
literal|"forty-four"
block|,
literal|"44"
block|}
block|,
block|{
literal|"forty-five"
block|,
literal|"45"
block|}
block|,
block|{
literal|"forty-six"
block|,
literal|"46"
block|}
block|,
block|{
literal|"forty-seven"
block|,
literal|"47"
block|}
block|,
block|{
literal|"forty-eight"
block|,
literal|"48"
block|}
block|,
block|{
literal|"forty-nine"
block|,
literal|"49"
block|}
block|,
block|{
literal|"fifty-one"
block|,
literal|"51"
block|}
block|,
block|{
literal|"fifty-two"
block|,
literal|"52"
block|}
block|,
block|{
literal|"fifty-three"
block|,
literal|"53"
block|}
block|,
block|{
literal|"fifty-four"
block|,
literal|"54"
block|}
block|,
block|{
literal|"fifty-five"
block|,
literal|"55"
block|}
block|,
block|{
literal|"fifty-six"
block|,
literal|"56"
block|}
block|,
block|{
literal|"fifty-seven"
block|,
literal|"57"
block|}
block|,
block|{
literal|"fifty-eight"
block|,
literal|"58"
block|}
block|,
block|{
literal|"fifty-nine"
block|,
literal|"59"
block|}
block|,
block|{
literal|"sixty-one"
block|,
literal|"61"
block|}
block|,
block|{
literal|"sixty-two"
block|,
literal|"62"
block|}
block|,
block|{
literal|"sixty-three"
block|,
literal|"63"
block|}
block|,
block|{
literal|"sixty-four"
block|,
literal|"64"
block|}
block|,
block|{
literal|"sixty-five"
block|,
literal|"65"
block|}
block|,
block|{
literal|"sixty-six"
block|,
literal|"66"
block|}
block|,
block|{
literal|"sixty-seven"
block|,
literal|"67"
block|}
block|,
block|{
literal|"sixty-eight"
block|,
literal|"68"
block|}
block|,
block|{
literal|"sixty-nine"
block|,
literal|"69"
block|}
block|,
block|{
literal|"seventy-one"
block|,
literal|"71"
block|}
block|,
block|{
literal|"seventy-two"
block|,
literal|"72"
block|}
block|,
block|{
literal|"seventy-three"
block|,
literal|"73"
block|}
block|,
block|{
literal|"seventy-four"
block|,
literal|"74"
block|}
block|,
block|{
literal|"seventy-five"
block|,
literal|"75"
block|}
block|,
block|{
literal|"seventy-six"
block|,
literal|"76"
block|}
block|,
block|{
literal|"seventy-seven"
block|,
literal|"77"
block|}
block|,
block|{
literal|"seventy-eight"
block|,
literal|"78"
block|}
block|,
block|{
literal|"seventy-nine"
block|,
literal|"79"
block|}
block|,
block|{
literal|"eighty-one"
block|,
literal|"81"
block|}
block|,
block|{
literal|"eighty-two"
block|,
literal|"82"
block|}
block|,
block|{
literal|"eighty-three"
block|,
literal|"83"
block|}
block|,
block|{
literal|"eighty-four"
block|,
literal|"84"
block|}
block|,
block|{
literal|"eighty-five"
block|,
literal|"85"
block|}
block|,
block|{
literal|"eighty-six"
block|,
literal|"86"
block|}
block|,
block|{
literal|"eighty-seven"
block|,
literal|"87"
block|}
block|,
block|{
literal|"eighty-eight"
block|,
literal|"88"
block|}
block|,
block|{
literal|"eighty-nine"
block|,
literal|"89"
block|}
block|,
block|{
literal|"ninety-one"
block|,
literal|"91"
block|}
block|,
block|{
literal|"ninety-two"
block|,
literal|"92"
block|}
block|,
block|{
literal|"ninety-three"
block|,
literal|"93"
block|}
block|,
block|{
literal|"ninety-four"
block|,
literal|"94"
block|}
block|,
block|{
literal|"ninety-five"
block|,
literal|"95"
block|}
block|,
block|{
literal|"ninety-six"
block|,
literal|"96"
block|}
block|,
block|{
literal|"ninety-seven"
block|,
literal|"97"
block|}
block|,
block|{
literal|"ninety-eight"
block|,
literal|"98"
block|}
block|,
block|{
literal|"ninety-nine"
block|,
literal|"99"
block|}
block|}
block|,
comment|// larger units function as suffixes now
comment|// assume never have three hundred four, three hundred and four
block|{
block|{
literal|"hundred"
block|,
literal|"00"
block|}
block|,
block|{
literal|"thousand"
block|,
literal|"000"
block|}
block|}
block|,
comment|// single numeral words now
comment|// some would have been ambiguous
block|{
block|{
literal|"seventeen"
block|,
literal|"17"
block|}
block|,
block|{
literal|"thirteen"
block|,
literal|"13"
block|}
block|,
block|{
literal|"fourteen"
block|,
literal|"14"
block|}
block|,
block|{
literal|"eighteen"
block|,
literal|"18"
block|}
block|,
block|{
literal|"nineteen"
block|,
literal|"19"
block|}
block|,
block|{
literal|"fifteen"
block|,
literal|"15"
block|}
block|,
block|{
literal|"sixteen"
block|,
literal|"16"
block|}
block|,
block|{
literal|"seventy"
block|,
literal|"70"
block|}
block|,
block|{
literal|"eleven"
block|,
literal|"11"
block|}
block|,
block|{
literal|"twelve"
block|,
literal|"12"
block|}
block|,
block|{
literal|"twenty"
block|,
literal|"20"
block|}
block|,
block|{
literal|"thirty"
block|,
literal|"30"
block|}
block|,
block|{
literal|"eighty"
block|,
literal|"80"
block|}
block|,
block|{
literal|"ninety"
block|,
literal|"90"
block|}
block|,
block|{
literal|"three"
block|,
literal|"3"
block|}
block|,
block|{
literal|"seven"
block|,
literal|"7"
block|}
block|,
block|{
literal|"eight"
block|,
literal|"8"
block|}
block|,
block|{
literal|"forty"
block|,
literal|"40"
block|}
block|,
block|{
literal|"fifty"
block|,
literal|"50"
block|}
block|,
block|{
literal|"sixty"
block|,
literal|"60"
block|}
block|,
block|{
literal|"zero"
block|,
literal|"0"
block|}
block|,
block|{
literal|"four"
block|,
literal|"4"
block|}
block|,
block|{
literal|"five"
block|,
literal|"5"
block|}
block|,
block|{
literal|"nine"
block|,
literal|"9"
block|}
block|,
block|{
literal|"one"
block|,
literal|"1"
block|}
block|,
block|{
literal|"two"
block|,
literal|"2"
block|}
block|,
block|{
literal|"six"
block|,
literal|"6"
block|}
block|,
block|{
literal|"ten"
block|,
literal|"10"
block|}
block|}
block|,
comment|// now do letter for digit substitutions
block|{
block|{
literal|"oh"
block|,
literal|"0"
block|}
block|,
block|{
literal|"o"
block|,
literal|"0"
block|}
block|,
block|{
literal|"i"
block|,
literal|"1"
block|}
block|,
block|{
literal|"l"
block|,
literal|"1"
block|}
block|}
block|}
decl_stmt|;
block|}
end_class

end_unit

