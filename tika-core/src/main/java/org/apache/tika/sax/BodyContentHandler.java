begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|xpath
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|xpath
operator|.
name|MatchingContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|xpath
operator|.
name|XPathParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * Content handler decorator that only passes everything inside  * the XHTML&lt;body/&gt; tag to the underlying handler. Note that  * the&lt;body/&gt; tag itself is<em>not</em> passed on.  */
end_comment

begin_class
specifier|public
class|class
name|BodyContentHandler
extends|extends
name|ContentHandlerDecorator
block|{
comment|/**      * XHTML XPath parser.      */
specifier|private
specifier|static
specifier|final
name|XPathParser
name|PARSER
init|=
operator|new
name|XPathParser
argument_list|(
literal|"xhtml"
argument_list|,
name|XHTMLContentHandler
operator|.
name|XHTML
argument_list|)
decl_stmt|;
comment|/**      * The XPath matcher used to select the XHTML body contents.      */
specifier|private
specifier|static
specifier|final
name|Matcher
name|MATCHER
init|=
name|PARSER
operator|.
name|parse
argument_list|(
literal|"/xhtml:html/xhtml:body/descendant:node()"
argument_list|)
decl_stmt|;
comment|/**      * Creates a content handler that passes all XHTML body events to the      * given underlying content handler.      *      * @param handler content handler      */
specifier|public
name|BodyContentHandler
parameter_list|(
name|ContentHandler
name|handler
parameter_list|)
block|{
name|super
argument_list|(
operator|new
name|MatchingContentHandler
argument_list|(
name|handler
argument_list|,
name|MATCHER
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a content handler that writes XHTML body character events to      * the given writer.      *      * @param writer writer      */
specifier|public
name|BodyContentHandler
parameter_list|(
name|Writer
name|writer
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|WriteOutContentHandler
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a content handler that writes XHTML body character events to      * the given output stream using the default encoding.      *      * @param stream output stream      */
specifier|public
name|BodyContentHandler
parameter_list|(
name|OutputStream
name|stream
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|WriteOutContentHandler
argument_list|(
name|stream
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a content handler that writes XHTML body character events to      * an internal string buffer. The contents of the buffer can be retrieved      * using the {@link #toString()} method.      *<p>      * The internal string buffer is bounded at the given number of characters.      * If this write limit is reached, then a {@link SAXException} is thrown.      *      * @since Apache Tika 0.7      * @param writeLimit maximum number of characters to include in the string,      *                   or -1 to disable the write limit      */
specifier|public
name|BodyContentHandler
parameter_list|(
name|int
name|writeLimit
parameter_list|)
block|{
name|this
argument_list|(
operator|new
name|WriteOutContentHandler
argument_list|(
name|writeLimit
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a content handler that writes XHTML body character events to      * an internal string buffer. The contents of the buffer can be retrieved      * using the {@link #toString()} method.      *<p>      * The internal string buffer is bounded at 100k characters. If this write      * limit is reached, then a {@link SAXException} is thrown.      */
specifier|public
name|BodyContentHandler
parameter_list|()
block|{
name|this
argument_list|(
operator|new
name|WriteOutContentHandler
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

