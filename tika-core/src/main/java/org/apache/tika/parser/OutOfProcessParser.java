begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Queue
import|;
end_import

begin_class
specifier|public
class|class
name|OutOfProcessParser
block|{
specifier|private
specifier|final
name|ClassLoader
name|loader
decl_stmt|;
specifier|private
specifier|final
name|Queue
argument_list|<
name|OutOfProcessClient
argument_list|>
name|pool
init|=
operator|new
name|LinkedList
argument_list|<
name|OutOfProcessClient
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|int
name|poolSize
init|=
literal|5
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|OutOfProcessParser
name|parser
init|=
operator|new
name|OutOfProcessParser
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
name|OutOfProcessClient
name|client
init|=
name|parser
operator|.
name|acquireClient
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|client
operator|.
name|echo
argument_list|(
name|EmptyParser
operator|.
name|INSTANCE
argument_list|)
argument_list|)
expr_stmt|;
name|parser
operator|.
name|releaseClient
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|parser
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|OutOfProcessParser
parameter_list|(
name|ClassLoader
name|loader
parameter_list|)
block|{
name|this
operator|.
name|loader
operator|=
name|loader
expr_stmt|;
block|}
specifier|public
specifier|synchronized
name|void
name|close
parameter_list|()
block|{
for|for
control|(
name|OutOfProcessClient
name|client
range|:
name|pool
control|)
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|pool
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|private
name|OutOfProcessClient
name|acquireClient
parameter_list|()
throws|throws
name|IOException
block|{
name|OutOfProcessClient
name|client
init|=
name|pool
operator|.
name|poll
argument_list|()
decl_stmt|;
if|if
condition|(
name|client
operator|==
literal|null
condition|)
block|{
name|client
operator|=
operator|new
name|OutOfProcessClient
argument_list|(
name|loader
argument_list|)
expr_stmt|;
block|}
return|return
name|client
return|;
block|}
specifier|private
specifier|synchronized
name|void
name|releaseClient
parameter_list|(
name|OutOfProcessClient
name|client
parameter_list|)
block|{
if|if
condition|(
name|pool
operator|.
name|size
argument_list|()
operator|<
name|poolSize
condition|)
block|{
name|pool
operator|.
name|offer
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|client
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

