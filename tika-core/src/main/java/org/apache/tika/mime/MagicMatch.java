begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
operator|.
name|MagicDetector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_comment
comment|/**  * Defines a magic match.  */
end_comment

begin_class
class|class
name|MagicMatch
implements|implements
name|Clause
block|{
specifier|private
specifier|final
name|MagicDetector
name|detector
decl_stmt|;
specifier|private
specifier|final
name|int
name|length
decl_stmt|;
name|MagicMatch
parameter_list|(
name|MagicDetector
name|detector
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|MimeTypeException
block|{
name|this
operator|.
name|detector
operator|=
name|detector
expr_stmt|;
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
specifier|public
name|boolean
name|eval
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
block|{
try|try
block|{
return|return
name|detector
operator|.
name|detect
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|data
argument_list|)
argument_list|,
operator|new
name|Metadata
argument_list|()
argument_list|)
operator|!=
name|MediaType
operator|.
name|OCTET_STREAM
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Should never happen with a ByteArrayInputStream
return|return
literal|false
return|;
block|}
block|}
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|length
return|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|detector
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

