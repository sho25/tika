begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|TikaConfigSerializerTest
extends|extends
name|TikaConfigTest
block|{
comment|/**      * TIKA-1445 It should be possible to exclude DefaultParser from      *  certain types, so another parser explicitly listed will take them      */
annotation|@
name|Test
specifier|public
name|void
name|defaultParserWithExcludes
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
name|loadAndSerialize
argument_list|(
literal|"TIKA-1445-default-except.xml"
argument_list|,
name|TikaConfigSerializer
operator|.
name|Mode
operator|.
name|STATIC
argument_list|)
decl_stmt|;
name|assertContains
argument_list|(
literal|"<parser class=\"org.apache.tika.parser.ErrorParser\">"
operator|+
literal|"<mime>fail/world</mime> "
operator|+
literal|"</parser>"
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"TODO: executor-service info needs to be stored in TikaConfig for serialization"
argument_list|)
specifier|public
name|void
name|testExecutors
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|xml
init|=
name|loadAndSerialize
argument_list|(
literal|"TIKA-1762-executors.xml"
argument_list|,
name|TikaConfigSerializer
operator|.
name|Mode
operator|.
name|STATIC
argument_list|)
decl_stmt|;
name|assertContains
argument_list|(
literal|"<executor-service class=\"org.apache.tika.config.DummyExecutor\">"
operator|+
literal|"<core-threads>3</core-threads>"
operator|+
literal|"<max-threads>10</max-threads>"
operator|+
literal|"</executor-service>"
argument_list|,
name|xml
argument_list|)
expr_stmt|;
block|}
name|String
name|loadAndSerialize
parameter_list|(
name|String
name|configFile
parameter_list|,
name|TikaConfigSerializer
operator|.
name|Mode
name|mode
parameter_list|)
throws|throws
name|Exception
block|{
name|TikaConfig
name|config
init|=
name|getConfig
argument_list|(
name|configFile
argument_list|)
decl_stmt|;
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|TikaConfigSerializer
operator|.
name|serialize
argument_list|(
name|config
argument_list|,
name|mode
argument_list|,
name|writer
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
expr_stmt|;
return|return
name|writer
operator|.
name|toString
argument_list|()
operator|.
name|replaceAll
argument_list|(
literal|"[\r\n\t ]+"
argument_list|,
literal|" "
argument_list|)
return|;
block|}
block|}
end_class

end_unit

