begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|language
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|io
operator|.
name|IOUtils
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|ProfilingWriterTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testProfilingWriter
parameter_list|()
throws|throws
name|IOException
block|{
name|assertProfile
argument_list|(
literal|"da"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"de"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"el"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"es"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"fi"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"fr"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"it"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"nl"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"pt"
argument_list|)
expr_stmt|;
name|assertProfile
argument_list|(
literal|"sv"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertProfile
parameter_list|(
name|String
name|lang
parameter_list|)
throws|throws
name|IOException
block|{
name|InputStream
name|stream
init|=
name|ProfilingWriterTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|lang
operator|+
literal|".test"
argument_list|)
decl_stmt|;
try|try
block|{
name|ProfilingWriter
name|writer
init|=
operator|new
name|ProfilingWriter
argument_list|()
decl_stmt|;
name|IOUtils
operator|.
name|copy
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|stream
argument_list|,
literal|"UTF-8"
argument_list|)
argument_list|,
name|writer
argument_list|)
expr_stmt|;
name|NGramProfile
name|profile
init|=
name|writer
operator|.
name|getProfile
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|lang
argument_list|,
operator|new
name|LanguageIdentifier
argument_list|(
name|profile
argument_list|)
operator|.
name|identify
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

