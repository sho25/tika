begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|cli
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
operator|.
name|UTF_8
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|serialization
operator|.
name|JsonMetadataList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|serialization
operator|.
name|JsonStreamingSerializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AutoDetectParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|RecursiveParserWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|AbstractRecursiveParserWrapperHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BasicContentHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|ContentHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|RecursiveParserWrapperHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_class
specifier|public
class|class
name|TikaCLIBatchIntegrationTest
block|{
specifier|private
name|Path
name|testInputDir
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/test-data"
argument_list|)
decl_stmt|;
specifier|private
name|String
name|testInputDirForCommandLine
decl_stmt|;
specifier|private
name|Path
name|tempOutputDir
decl_stmt|;
specifier|private
name|String
name|tempOutputDirForCommandLine
decl_stmt|;
specifier|private
name|OutputStream
name|out
init|=
literal|null
decl_stmt|;
specifier|private
name|OutputStream
name|err
init|=
literal|null
decl_stmt|;
specifier|private
name|ByteArrayOutputStream
name|outBuffer
init|=
literal|null
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|tempOutputDir
operator|=
name|Files
operator|.
name|createTempDirectory
argument_list|(
literal|"tika-cli-test-batch-"
argument_list|)
expr_stmt|;
name|outBuffer
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|PrintStream
name|outWriter
init|=
operator|new
name|PrintStream
argument_list|(
name|outBuffer
argument_list|,
literal|true
argument_list|,
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|errBuffer
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|PrintStream
name|errWriter
init|=
operator|new
name|PrintStream
argument_list|(
name|errBuffer
argument_list|,
literal|true
argument_list|,
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
decl_stmt|;
name|out
operator|=
name|System
operator|.
name|out
expr_stmt|;
name|err
operator|=
name|System
operator|.
name|err
expr_stmt|;
name|System
operator|.
name|setOut
argument_list|(
name|outWriter
argument_list|)
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
name|errWriter
argument_list|)
expr_stmt|;
name|testInputDirForCommandLine
operator|=
name|testInputDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
name|tempOutputDirForCommandLine
operator|=
name|tempOutputDir
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setOut
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|out
argument_list|,
literal|true
argument_list|,
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|setErr
argument_list|(
operator|new
name|PrintStream
argument_list|(
name|err
argument_list|,
literal|true
argument_list|,
name|UTF_8
operator|.
name|name
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//TODO: refactor to use our deleteDirectory with straight path
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|tempOutputDir
operator|.
name|toFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSimplestBatchIntegration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|params
init|=
block|{
name|testInputDirForCommandLine
block|,
name|tempOutputDirForCommandLine
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"bad_xml.xml.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"coffee.xls.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBasicBatchIntegration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|params
init|=
block|{
literal|"-i"
block|,
name|testInputDirForCommandLine
block|,
literal|"-o"
block|,
name|tempOutputDirForCommandLine
block|,
literal|"-numConsumers"
block|,
literal|"2"
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"bad_xml.xml.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"coffee.xls.xml"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJsonRecursiveBatchIntegration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|params
init|=
block|{
literal|"-i"
block|,
name|testInputDirForCommandLine
block|,
literal|"-o"
block|,
name|tempOutputDirForCommandLine
block|,
literal|"-numConsumers"
block|,
literal|"10"
block|,
literal|"-J"
block|,
comment|//recursive Json
literal|"-t"
comment|//plain text in content
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|Path
name|jsonFile
init|=
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"test_recursive_embedded.docx.json"
argument_list|)
decl_stmt|;
try|try
init|(
name|Reader
name|reader
init|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|jsonFile
argument_list|,
name|UTF_8
argument_list|)
init|)
block|{
name|List
argument_list|<
name|Metadata
argument_list|>
name|metadataList
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|metadataList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|metadataList
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|get
argument_list|(
name|AbstractRecursiveParserWrapperHandler
operator|.
name|TIKA_CONTENT
argument_list|)
operator|.
name|contains
argument_list|(
literal|"human events"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStreamingJsonRecursiveBatchIntegration
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|params
init|=
block|{
literal|"-i"
block|,
name|testInputDirForCommandLine
block|,
literal|"-o"
block|,
name|tempOutputDirForCommandLine
block|,
literal|"-numConsumers"
block|,
literal|"10"
block|,
literal|"-J"
block|,
comment|//recursive Json
literal|"-t"
block|,
comment|//plain text in content
literal|"-streamOut"
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|Path
name|jsonFile
init|=
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"test_recursive_embedded.docx.json"
argument_list|)
decl_stmt|;
try|try
init|(
name|Reader
name|reader
init|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|jsonFile
argument_list|,
name|UTF_8
argument_list|)
init|)
block|{
name|List
argument_list|<
name|Metadata
argument_list|>
name|metadataList
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|metadataList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|metadataList
operator|.
name|get
argument_list|(
literal|6
argument_list|)
operator|.
name|get
argument_list|(
name|AbstractRecursiveParserWrapperHandler
operator|.
name|TIKA_CONTENT
argument_list|)
operator|.
name|contains
argument_list|(
literal|"human events"
argument_list|)
argument_list|)
expr_stmt|;
comment|//test that the last written object has been bumped to the first by JsonMetadataList.fromJson()
name|assertNull
argument_list|(
name|metadataList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
name|AbstractRecursiveParserWrapperHandler
operator|.
name|EMBEDDED_RESOURCE_PATH
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testProcessLogFileConfig
parameter_list|()
throws|throws
name|Exception
block|{
name|String
index|[]
name|params
init|=
block|{
literal|"-i"
block|,
name|testInputDirForCommandLine
block|,
literal|"-o"
block|,
name|tempOutputDirForCommandLine
block|,
literal|"-numConsumers"
block|,
literal|"2"
block|,
literal|"-JDlog4j.configuration=log4j_batch_process_test.properties"
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"bad_xml.xml.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertFileExists
argument_list|(
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"coffee.xls.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|sysOutString
init|=
operator|new
name|String
argument_list|(
name|outBuffer
operator|.
name|toByteArray
argument_list|()
argument_list|,
name|UTF_8
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|sysOutString
operator|.
name|contains
argument_list|(
literal|"MY_CUSTOM_LOG_CONFIG"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDigester
parameter_list|()
throws|throws
name|Exception
block|{
comment|/*         try {             String[] params = {"-i", escape(testDataFile.getAbsolutePath()),                     "-o", escape(tempOutputDir.getAbsolutePath()),                     "-numConsumers", "10",                     "-J", //recursive Json                     "-t" //plain text in content             };             TikaCLI.main(params);             reader = new InputStreamReader(                     new FileInputStream(new File(tempOutputDir, "test_recursive_embedded.docx.json")), UTF_8);             List<Metadata> metadataList = JsonMetadataList.fromJson(reader);             assertEquals(12, metadataList.size());             assertEquals("59f626e09a8c16ab6dbc2800c685f772", metadataList.get(0).get("X-TIKA:digest:MD5"));             assertEquals("22e6e91f408d018417cd452d6de3dede", metadataList.get(5).get("X-TIKA:digest:MD5"));         } finally {             IOUtils.closeQuietly(reader);         } */
name|String
index|[]
name|params
init|=
block|{
literal|"-i"
block|,
name|testInputDirForCommandLine
block|,
literal|"-o"
block|,
name|tempOutputDirForCommandLine
block|,
literal|"-numConsumers"
block|,
literal|"10"
block|,
literal|"-J"
block|,
comment|//recursive Json
literal|"-t"
block|,
comment|//plain text in content
literal|"-digest"
block|,
literal|"sha512"
block|}
decl_stmt|;
name|TikaCLI
operator|.
name|main
argument_list|(
name|params
argument_list|)
expr_stmt|;
name|Path
name|jsonFile
init|=
name|tempOutputDir
operator|.
name|resolve
argument_list|(
literal|"test_recursive_embedded.docx.json"
argument_list|)
decl_stmt|;
try|try
init|(
name|Reader
name|reader
init|=
name|Files
operator|.
name|newBufferedReader
argument_list|(
name|jsonFile
argument_list|,
name|UTF_8
argument_list|)
init|)
block|{
name|List
argument_list|<
name|Metadata
argument_list|>
name|metadataList
init|=
name|JsonMetadataList
operator|.
name|fromJson
argument_list|(
name|reader
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|12
argument_list|,
name|metadataList
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|metadataList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"X-TIKA:digest:SHA512"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|metadataList
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|get
argument_list|(
literal|"X-TIKA:digest:SHA512"
argument_list|)
operator|.
name|startsWith
argument_list|(
literal|"ee46d973ee1852c01858"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|assertFileExists
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|assertTrue
argument_list|(
literal|"File doesn't exist: "
operator|+
name|path
operator|.
name|toAbsolutePath
argument_list|()
argument_list|,
name|Files
operator|.
name|isRegularFile
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|oneOff
parameter_list|()
throws|throws
name|Exception
block|{
name|Parser
name|p
init|=
operator|new
name|AutoDetectParser
argument_list|()
decl_stmt|;
name|RecursiveParserWrapper
name|w
init|=
operator|new
name|RecursiveParserWrapper
argument_list|(
name|p
argument_list|)
decl_stmt|;
try|try
init|(
name|JsonStreamingSerializer
name|writer
init|=
operator|new
name|JsonStreamingSerializer
argument_list|(
operator|new
name|BufferedWriter
argument_list|(
operator|new
name|OutputStreamWriter
argument_list|(
name|Files
operator|.
name|newOutputStream
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
literal|"C:/data/tika_tmp.json"
argument_list|)
argument_list|)
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
argument_list|)
argument_list|)
init|)
block|{
name|ContentHandler
name|contentHandler
init|=
operator|new
name|WriteoutRPWHandler
argument_list|(
operator|new
name|BasicContentHandlerFactory
argument_list|(
name|BasicContentHandlerFactory
operator|.
name|HANDLER_TYPE
operator|.
name|TEXT
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|,
name|writer
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|getClass
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"/test-data/test_recursive_embedded.docx"
argument_list|)
init|)
block|{
name|w
operator|.
name|parse
argument_list|(
name|is
argument_list|,
name|contentHandler
argument_list|,
operator|new
name|Metadata
argument_list|()
argument_list|,
operator|new
name|ParseContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
class|class
name|WriteoutRPWHandler
extends|extends
name|AbstractRecursiveParserWrapperHandler
block|{
specifier|private
specifier|final
name|JsonStreamingSerializer
name|jsonWriter
decl_stmt|;
specifier|public
name|WriteoutRPWHandler
parameter_list|(
name|ContentHandlerFactory
name|contentHandlerFactory
parameter_list|,
name|JsonStreamingSerializer
name|writer
parameter_list|)
block|{
name|super
argument_list|(
name|contentHandlerFactory
argument_list|)
expr_stmt|;
name|this
operator|.
name|jsonWriter
operator|=
name|writer
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endEmbeddedDocument
parameter_list|(
name|ContentHandler
name|contentHandler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|SAXException
block|{
name|metadata
operator|.
name|add
argument_list|(
name|RecursiveParserWrapperHandler
operator|.
name|TIKA_CONTENT
argument_list|,
name|contentHandler
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|jsonWriter
operator|.
name|add
argument_list|(
name|metadata
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|SAXException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|endDocument
parameter_list|(
name|ContentHandler
name|contentHandler
parameter_list|,
name|Metadata
name|metadata
parameter_list|)
throws|throws
name|SAXException
block|{
name|endEmbeddedDocument
argument_list|(
name|contentHandler
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

