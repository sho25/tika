begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|batch
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|TikaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AutoDetectParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|DigestingParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_class
specifier|public
class|class
name|DigestingAutoDetectParserFactory
extends|extends
name|ParserFactory
block|{
specifier|private
name|DigestingParser
operator|.
name|Digester
name|digester
init|=
literal|null
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Parser
name|getParser
parameter_list|(
name|TikaConfig
name|config
parameter_list|)
block|{
name|Parser
name|p
init|=
operator|new
name|AutoDetectParser
argument_list|(
name|config
argument_list|)
decl_stmt|;
if|if
condition|(
name|digester
operator|==
literal|null
condition|)
block|{
return|return
name|p
return|;
block|}
name|DigestingParser
name|d
init|=
operator|new
name|DigestingParser
argument_list|(
name|p
argument_list|,
name|digester
argument_list|)
decl_stmt|;
return|return
name|d
return|;
block|}
specifier|public
name|void
name|setDigester
parameter_list|(
name|DigestingParser
operator|.
name|Digester
name|digester
parameter_list|)
block|{
name|this
operator|.
name|digester
operator|=
name|digester
expr_stmt|;
block|}
block|}
end_class

end_unit

