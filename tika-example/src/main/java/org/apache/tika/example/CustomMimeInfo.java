begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|Tika
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
operator|.
name|CompositeDetector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MimeTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MimeTypesFactory
import|;
end_import

begin_class
specifier|public
class|class
name|CustomMimeInfo
block|{
specifier|public
specifier|static
name|String
name|customMimeInfo
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"file:///path/to/prescription-type.xml"
decl_stmt|;
name|MimeTypes
name|typeDatabase
init|=
name|MimeTypesFactory
operator|.
name|create
argument_list|(
operator|new
name|URL
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|Tika
name|tika
init|=
operator|new
name|Tika
argument_list|(
name|typeDatabase
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|tika
operator|.
name|detect
argument_list|(
literal|"/path/to/prescription.xpd"
argument_list|)
decl_stmt|;
return|return
name|type
return|;
block|}
specifier|public
specifier|static
name|String
name|customCompositeDetector
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|path
init|=
literal|"file:///path/to/prescription-type.xml"
decl_stmt|;
name|MimeTypes
name|typeDatabase
init|=
name|MimeTypesFactory
operator|.
name|create
argument_list|(
operator|new
name|URL
argument_list|(
name|path
argument_list|)
argument_list|)
decl_stmt|;
name|Tika
name|tika
init|=
operator|new
name|Tika
argument_list|(
operator|new
name|CompositeDetector
argument_list|(
name|typeDatabase
argument_list|,
operator|new
name|EncryptedPrescriptionDetector
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|type
init|=
name|tika
operator|.
name|detect
argument_list|(
literal|"/path/to/tmp/prescription.xpd"
argument_list|)
decl_stmt|;
return|return
name|type
return|;
block|}
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"customMimeInfo="
operator|+
name|customMimeInfo
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"customCompositeDetector="
operator|+
name|customCompositeDetector
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

