begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|example
package|;
end_package

begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|AutoDetectParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BodyContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|PhoneExtractingContentHandler
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_comment
comment|/**  * Class to demonstrate how to use the {@link org.apache.tika.sax.PhoneExtractingContentHandler}  * to get a list of all of the phone numbers from every file in a directory.  *  * You can run this main method by running  *<code>  *     mvn exec:java -Dexec.mainClass="org.apache.tika.example.GrabPhoneNumbersExample" -Dexec.args="/path/to/directory"  *</code>  * from the tika-example directory.  */
end_comment

begin_class
specifier|public
class|class
name|GrabPhoneNumbersExample
block|{
specifier|private
specifier|static
name|HashSet
argument_list|<
name|String
argument_list|>
name|phoneNumbers
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|int
name|failedFiles
decl_stmt|,
name|successfulFiles
init|=
literal|0
decl_stmt|;
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
if|if
condition|(
name|args
operator|.
name|length
operator|!=
literal|1
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Usage `java GrabPhoneNumbers [corpus]"
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|File
name|folder
init|=
operator|new
name|File
argument_list|(
name|args
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Searching "
operator|+
name|folder
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|"..."
argument_list|)
expr_stmt|;
name|processFolder
argument_list|(
name|folder
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|phoneNumbers
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Parsed "
operator|+
name|successfulFiles
operator|+
literal|"/"
operator|+
operator|(
name|successfulFiles
operator|+
name|failedFiles
operator|)
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|processFolder
parameter_list|(
specifier|final
name|File
name|folder
parameter_list|)
block|{
for|for
control|(
specifier|final
name|File
name|fileEntry
range|:
name|folder
operator|.
name|listFiles
argument_list|()
control|)
block|{
if|if
condition|(
name|fileEntry
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|processFolder
argument_list|(
name|fileEntry
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|process
argument_list|(
name|fileEntry
argument_list|)
expr_stmt|;
name|successfulFiles
operator|++
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|failedFiles
operator|++
expr_stmt|;
comment|// Ignore this file...
block|}
block|}
block|}
block|}
specifier|public
specifier|static
name|void
name|process
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Parser
name|parser
init|=
operator|new
name|AutoDetectParser
argument_list|()
decl_stmt|;
name|Metadata
name|metadata
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
comment|// The PhoneExtractingContentHandler will examine any characters for phone numbers before passing them
comment|// to the underlying Handler.
name|PhoneExtractingContentHandler
name|handler
init|=
operator|new
name|PhoneExtractingContentHandler
argument_list|(
operator|new
name|BodyContentHandler
argument_list|()
argument_list|,
name|metadata
argument_list|)
decl_stmt|;
name|InputStream
name|stream
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|parse
argument_list|(
name|stream
argument_list|,
name|handler
argument_list|,
name|metadata
argument_list|,
operator|new
name|ParseContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|stream
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|String
index|[]
name|numbers
init|=
name|metadata
operator|.
name|getValues
argument_list|(
literal|"phonenumbers"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|number
range|:
name|numbers
control|)
block|{
name|phoneNumbers
operator|.
name|add
argument_list|(
name|number
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

