begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|jackrabbit
operator|.
name|util
operator|.
name|ISO8601
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|CorruptIndexException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|DirectoryReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|IndexSearcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|ScoreDoc
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TermRangeQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|search
operator|.
name|TopScoreDocCollector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|store
operator|.
name|FSDirectory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|util
operator|.
name|BytesRef
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|DublinCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|TikaCoreProperties
import|;
end_import

begin_comment
comment|/**  * Builds on top of the LuceneIndexer and the Metadata discussions in Chapter 6  * to output an RSS (or RDF) feed of files crawled by the LuceneIndexer within  * the last N minutes.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
class|class
name|RecentFiles
block|{
specifier|private
name|IndexReader
name|reader
decl_stmt|;
specifier|private
name|SimpleDateFormat
name|rssDateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"E, dd MMM yyyy HH:mm:ss z"
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
name|String
name|generateRSS
parameter_list|(
name|Path
name|indexFile
parameter_list|)
throws|throws
name|CorruptIndexException
throws|,
name|IOException
block|{
name|StringBuffer
name|output
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|output
operator|.
name|append
argument_list|(
name|getRSSHeaders
argument_list|()
argument_list|)
expr_stmt|;
name|IndexSearcher
name|searcher
init|=
literal|null
decl_stmt|;
try|try
block|{
name|reader
operator|=
name|DirectoryReader
operator|.
name|open
argument_list|(
name|FSDirectory
operator|.
name|open
argument_list|(
name|indexFile
argument_list|)
argument_list|)
expr_stmt|;
name|searcher
operator|=
operator|new
name|IndexSearcher
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|GregorianCalendar
name|gc
init|=
operator|new
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
argument_list|(
name|TimeZone
operator|.
name|getDefault
argument_list|()
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
name|gc
operator|.
name|setTime
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|nowDateTime
init|=
name|ISO8601
operator|.
name|format
argument_list|(
name|gc
argument_list|)
decl_stmt|;
name|gc
operator|.
name|add
argument_list|(
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
operator|.
name|MINUTE
argument_list|,
operator|-
literal|5
argument_list|)
expr_stmt|;
name|String
name|fiveMinsAgo
init|=
name|ISO8601
operator|.
name|format
argument_list|(
name|gc
argument_list|)
decl_stmt|;
name|TermRangeQuery
name|query
init|=
operator|new
name|TermRangeQuery
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATED
operator|.
name|getName
argument_list|()
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|fiveMinsAgo
argument_list|)
argument_list|,
operator|new
name|BytesRef
argument_list|(
name|nowDateTime
argument_list|)
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|TopScoreDocCollector
name|collector
init|=
name|TopScoreDocCollector
operator|.
name|create
argument_list|(
literal|20
argument_list|)
decl_stmt|;
name|searcher
operator|.
name|search
argument_list|(
name|query
argument_list|,
name|collector
argument_list|)
expr_stmt|;
name|ScoreDoc
index|[]
name|hits
init|=
name|collector
operator|.
name|topDocs
argument_list|()
operator|.
name|scoreDocs
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|hits
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Document
name|doc
init|=
name|searcher
operator|.
name|doc
argument_list|(
name|hits
index|[
name|i
index|]
operator|.
name|doc
argument_list|)
decl_stmt|;
name|output
operator|.
name|append
argument_list|(
name|getRSSItem
argument_list|(
name|doc
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
if|if
condition|(
name|reader
operator|!=
literal|null
condition|)
name|reader
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|output
operator|.
name|append
argument_list|(
name|getRSSFooters
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getRSSItem
parameter_list|(
name|Document
name|doc
parameter_list|)
block|{
name|StringBuilder
name|output
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<item>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"guid"
argument_list|,
name|doc
operator|.
name|get
argument_list|(
name|DublinCore
operator|.
name|SOURCE
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|"isPermalink"
argument_list|,
literal|"true"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"title"
argument_list|,
name|doc
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|TITLE
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"link"
argument_list|,
name|doc
operator|.
name|get
argument_list|(
name|DublinCore
operator|.
name|SOURCE
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"author"
argument_list|,
name|doc
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATOR
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|topic
range|:
name|doc
operator|.
name|getValues
argument_list|(
name|TikaCoreProperties
operator|.
name|SUBJECT
operator|.
name|getName
argument_list|()
argument_list|)
control|)
block|{
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"category"
argument_list|,
name|topic
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"pubDate"
argument_list|,
name|rssDateFormat
operator|.
name|format
argument_list|(
name|ISO8601
operator|.
name|parse
argument_list|(
name|doc
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|CREATED
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|emitTag
argument_list|(
literal|"description"
argument_list|,
name|doc
operator|.
name|get
argument_list|(
name|TikaCoreProperties
operator|.
name|TITLE
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"</item>"
argument_list|)
expr_stmt|;
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getRSSHeaders
parameter_list|()
block|{
name|StringBuilder
name|output
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<?xml version=\"1.0\" encoding=\"utf-8\">"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<rss version=\"2.0\">"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<channel>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<title>Tika in Action: Recent Files Feed.</title>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<description>Chapter 6 Examples demonstrating "
operator|+
literal|"use of Tika Metadata for RSS.</description>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<link>tikainaction.rss</link>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<lastBuildDate>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|rssDateFormat
operator|.
name|format
argument_list|(
operator|new
name|Date
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"</lastBuildDate>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<generator>Manning Publications: Tika in Action</generator>"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<copyright>All Rights Reserved</copyright>"
argument_list|)
expr_stmt|;
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getRSSFooters
parameter_list|()
block|{
return|return
literal|"</channel>"
return|;
block|}
specifier|private
name|String
name|emitTag
parameter_list|(
name|String
name|tagName
parameter_list|,
name|String
name|value
parameter_list|,
name|String
name|attributeName
parameter_list|,
name|String
name|attributeValue
parameter_list|)
block|{
name|StringBuilder
name|output
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"<"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|tagName
argument_list|)
expr_stmt|;
if|if
condition|(
name|attributeName
operator|!=
literal|null
condition|)
block|{
name|output
operator|.
name|append
argument_list|(
literal|" "
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|attributeName
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"=\""
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|attributeValue
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"\""
argument_list|)
expr_stmt|;
block|}
name|output
operator|.
name|append
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|"</"
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
name|tagName
argument_list|)
expr_stmt|;
name|output
operator|.
name|append
argument_list|(
literal|">"
argument_list|)
expr_stmt|;
return|return
name|output
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

