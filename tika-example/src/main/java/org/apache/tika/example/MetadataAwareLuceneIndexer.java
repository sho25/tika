begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
operator|.
name|Index
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|document
operator|.
name|Field
operator|.
name|Store
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|lucene
operator|.
name|index
operator|.
name|IndexWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|Tika
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|DublinCore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Property
import|;
end_import

begin_comment
comment|/**  * Builds on the LuceneIndexer from Chapter 5 and adds indexing of Metadata.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
class|class
name|MetadataAwareLuceneIndexer
block|{
specifier|private
name|Tika
name|tika
decl_stmt|;
specifier|private
name|IndexWriter
name|writer
decl_stmt|;
specifier|public
name|MetadataAwareLuceneIndexer
parameter_list|(
name|IndexWriter
name|writer
parameter_list|,
name|Tika
name|tika
parameter_list|)
block|{
name|this
operator|.
name|writer
operator|=
name|writer
expr_stmt|;
name|this
operator|.
name|tika
operator|=
name|tika
expr_stmt|;
block|}
specifier|public
name|void
name|indexContentSpecificMet
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Metadata
name|met
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
try|try
block|{
name|tika
operator|.
name|parse
argument_list|(
name|is
argument_list|,
name|met
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|met
operator|.
name|names
argument_list|()
control|)
block|{
name|String
index|[]
name|values
init|=
name|met
operator|.
name|getValues
argument_list|(
name|key
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|val
range|:
name|values
control|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|key
argument_list|,
name|val
argument_list|,
name|Store
operator|.
name|YES
argument_list|,
name|Index
operator|.
name|ANALYZED
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|indexWithDublinCore
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Metadata
name|met
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|met
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|CREATOR
argument_list|,
literal|"Manning"
argument_list|)
expr_stmt|;
name|met
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|CREATOR
argument_list|,
literal|"Tika in Action"
argument_list|)
expr_stmt|;
name|met
operator|.
name|set
argument_list|(
name|Metadata
operator|.
name|DATE
argument_list|,
operator|new
name|Date
argument_list|()
argument_list|)
expr_stmt|;
name|met
operator|.
name|set
argument_list|(
name|Metadata
operator|.
name|FORMAT
argument_list|,
name|tika
operator|.
name|detect
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
name|met
operator|.
name|set
argument_list|(
name|DublinCore
operator|.
name|SOURCE
argument_list|,
name|file
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|met
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|SUBJECT
argument_list|,
literal|"File"
argument_list|)
expr_stmt|;
name|met
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|SUBJECT
argument_list|,
literal|"Indexing"
argument_list|)
expr_stmt|;
name|met
operator|.
name|add
argument_list|(
name|Metadata
operator|.
name|SUBJECT
argument_list|,
literal|"Metadata"
argument_list|)
expr_stmt|;
name|met
operator|.
name|set
argument_list|(
name|Property
operator|.
name|externalClosedChoise
argument_list|(
name|Metadata
operator|.
name|RIGHTS
argument_list|,
literal|"public"
argument_list|,
literal|"private"
argument_list|)
argument_list|,
literal|"public"
argument_list|)
expr_stmt|;
name|InputStream
name|is
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
try|try
block|{
name|tika
operator|.
name|parse
argument_list|(
name|is
argument_list|,
name|met
argument_list|)
expr_stmt|;
name|Document
name|document
init|=
operator|new
name|Document
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|met
operator|.
name|names
argument_list|()
control|)
block|{
name|String
index|[]
name|values
init|=
name|met
operator|.
name|getValues
argument_list|(
name|key
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|val
range|:
name|values
control|)
block|{
name|document
operator|.
name|add
argument_list|(
operator|new
name|Field
argument_list|(
name|key
argument_list|,
name|val
argument_list|,
name|Store
operator|.
name|YES
argument_list|,
name|Index
operator|.
name|ANALYZED
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|writer
operator|.
name|addDocument
argument_list|(
name|document
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

