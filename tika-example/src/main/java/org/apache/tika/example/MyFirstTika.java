begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|example
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|config
operator|.
name|TikaConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|detect
operator|.
name|Detector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|language
operator|.
name|LanguageIdentifier
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|language
operator|.
name|LanguageProfile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|metadata
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MediaType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|mime
operator|.
name|MimeTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|ParseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|parser
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tika
operator|.
name|sax
operator|.
name|BodyContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_comment
comment|/**  * Demonstrates how to call the different components within Tika: its  * {@link Detector} framework (aka MIME identification and repository), its  * {@link Parser} interface, its {@link LanguageIdentifier} and other goodies.  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"deprecation"
argument_list|)
specifier|public
class|class
name|MyFirstTika
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
throws|throws
name|Exception
block|{
name|String
name|filename
init|=
name|args
index|[
literal|0
index|]
decl_stmt|;
name|MimeTypes
name|mimeRegistry
init|=
name|TikaConfig
operator|.
name|getDefaultConfig
argument_list|()
operator|.
name|getMimeRepository
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Examining: ["
operator|+
name|filename
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"The MIME type (based on filename) is: ["
operator|+
name|mimeRegistry
operator|.
name|getMimeType
argument_list|(
name|filename
argument_list|)
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"The MIME type (based on MAGIC) is: ["
operator|+
name|mimeRegistry
operator|.
name|getMimeType
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
argument_list|)
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|Detector
name|mimeDetector
init|=
operator|(
name|Detector
operator|)
name|mimeRegistry
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"The MIME type (based on the Detector interface) is: ["
operator|+
name|mimeDetector
operator|.
name|detect
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|openStream
argument_list|()
argument_list|,
operator|new
name|Metadata
argument_list|()
argument_list|)
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|LanguageIdentifier
name|lang
init|=
operator|new
name|LanguageIdentifier
argument_list|(
operator|new
name|LanguageProfile
argument_list|(
name|FileUtils
operator|.
name|readFileToString
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"The language of this content is: ["
operator|+
name|lang
operator|.
name|getLanguage
argument_list|()
operator|+
literal|"]"
argument_list|)
expr_stmt|;
name|Parser
name|parser
init|=
name|TikaConfig
operator|.
name|getDefaultConfig
argument_list|()
operator|.
name|getParser
argument_list|(
name|MediaType
operator|.
name|parse
argument_list|(
name|mimeRegistry
operator|.
name|getMimeType
argument_list|(
name|filename
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Metadata
name|parsedMet
init|=
operator|new
name|Metadata
argument_list|()
decl_stmt|;
name|ContentHandler
name|handler
init|=
operator|new
name|BodyContentHandler
argument_list|()
decl_stmt|;
name|parser
operator|.
name|parse
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
operator|.
name|toURI
argument_list|()
operator|.
name|toURL
argument_list|()
operator|.
name|openStream
argument_list|()
argument_list|,
name|handler
argument_list|,
name|parsedMet
argument_list|,
operator|new
name|ParseContext
argument_list|()
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Parsed Metadata: "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|parsedMet
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Parsed Text: "
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|handler
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

